{
  "tool-version": "7.4.1",
  "name": "mri_fdr",
  "author": "FreeSurfer Developers",
  "description": "FreeSurfer is a software package for the analysis and visualization of neuroimaging data from cross-sectional and longitudinal studies. It is developed by the Laboratory for Computational Neuroimaging at the Martinos Center for Biomedical Imaging.\n\nFreeSurfer provides full processing streams for structural and functional MRI and includes tools for linear and nonlinear registration, cortical and subcortical segmentation, cortical surface reconstruction, statistical analysis of group morphometry, diffusion MRI, PET analysis, and much more. It is also the structural MRI analysis software of choice for the Human Connectome Project.",
  "command-line": "/usr/local/freesurfer/bin/mri_fdr [INPUT] [FDR] [DEFAULT_FRAME] [POSITIVE_ONLY_FLAG] [NEGATIVE_ONLY_FLAG] [ALL_VOXELS_FLAG] [RAW_P_VALUES_FLAG] [THRESHOLD_FILE] [DEBUG_FLAG] [CHECK_OPTS_FLAG]",
  "schema-version": "0.5",
  "inputs": [
    {
      "command-line-flag": "--i",
      "description": "Input source volume or surface overlay. Specify mask, output, and frame as needed.",
      "value-key": "[INPUT]",
      "type": "String",
      "list": true,
      "min-list-entries": 1,
      "optional": false,
      "id": "input_files",
      "name": "Input source"
    },
    {
      "command-line-flag": "--fdr",
      "description": "FDR value between 0 and 1, typically .05",
      "value-key": "[FDR]",
      "type": "Number",
      "minimum": 0,
      "maximum": 1,
      "integer": false,
      "optional": false,
      "id": "fdr_value",
      "name": "FDR value"
    },
    {
      "command-line-flag": "--f",
      "description": "Use input frame when not specifying frame in --i",
      "value-key": "[DEFAULT_FRAME]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "default_frame",
      "name": "Default frame"
    },
    {
      "command-line-flag": "--pos",
      "description": "Only consider positive voxels",
      "value-key": "[POSITIVE_ONLY_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "positive_only",
      "name": "Positive voxels only"
    },
    {
      "command-line-flag": "--neg",
      "description": "Only consider negative voxels",
      "value-key": "[NEGATIVE_ONLY_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "negative_only",
      "name": "Negative voxels only"
    },
    {
      "command-line-flag": "--abs",
      "description": "Consider all voxels regardless of sign (default)",
      "value-key": "[ALL_VOXELS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "all_voxels",
      "name": "All voxels"
    },
    {
      "command-line-flag": "--no-log10p",
      "description": "Input is raw p-values, not -log10(p)",
      "value-key": "[RAW_P_VALUES_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "raw_p_values",
      "name": "Raw p-values"
    },
    {
      "command-line-flag": "--thfile",
      "description": "Write threshold to text file",
      "value-key": "[THRESHOLD_FILE]",
      "type": "String",
      "optional": true,
      "id": "threshold_file",
      "name": "Threshold file"
    },
    {
      "command-line-flag": "--debug",
      "description": "Turn on debugging",
      "value-key": "[DEBUG_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "debug",
      "name": "Debug"
    },
    {
      "command-line-flag": "--checkopts",
      "description": "Don't run anything, just check options and exit",
      "value-key": "[CHECK_OPTS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "check_options",
      "name": "Check options"
    }
  ],
  "output-files": [
    {
      "path-template": "<output>.mgh",
      "description": "Output after applying FDR correction",
      "optional": true,
      "id": "output_corrected",
      "name": "Corrected output"
    },
    {
      "path-template": "<output>_threshold.txt",
      "description": "Threshold written to text file",
      "optional": true,
      "id": "output_threshold",
      "name": "Output threshold file"
    }
  ],
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}