{
  "tool-version": "7.4.1",
  "name": "mri_mask",
  "author": "FreeSurfer Developers",
  "description": "FreeSurfer is a software package for the analysis and visualization of neuroimaging data from cross-sectional and longitudinal studies. It is developed by the Laboratory for Computational Neuroimaging at the Martinos Center for Biomedical Imaging.\n\nFreeSurfer provides full processing streams for structural and functional MRI and includes tools for linear and nonlinear registration, cortical and subcortical segmentation, cortical surface reconstruction, statistical analysis of group morphometry, diffusion MRI, PET analysis, and much more. It is also the structural MRI analysis software of choice for the Human Connectome Project.",
  "command-line": "mri_mask [INPUT_VOL] [MASK_VOL] [OUTPUT_VOL] [XFORM] [LTA_SRC] [LTA_DST] [THRESHOLD] [NPAD] [NPAD1_NPAD2_NPAD3] [NPAD1A_NPAD1B_NPAD2A_NPAD2B_NPAD3A_NPAD3B] [ABS_FLAG] [INVERT_FLAG] [NO_INVERT_FLAG] [RH_FLAG] [LH_FLAG] [DILATE] [NO_CEREBELLUM_FLAG] [OVAL] [TRANSFER] [KEEP_MASK_DELETION_EDITS_FLAG] [SAMSEG_FLAG]",
  "schema-version": "0.5",
  "inputs": [
    {
      "description": "Input volume file",
      "value-key": "[INPUT_VOL]",
      "type": "File",
      "optional": false,
      "id": "input_volume",
      "name": "Input Volume"
    },
    {
      "description": "Mask volume file",
      "value-key": "[MASK_VOL]",
      "type": "File",
      "optional": false,
      "id": "mask_volume",
      "name": "Mask Volume"
    },
    {
      "description": "Output volume file",
      "value-key": "[OUTPUT_VOL]",
      "type": "String",
      "optional": false,
      "id": "output_volume",
      "name": "Output Volume"
    },
    {
      "command-line-flag": "-xform",
      "description": "Apply M3Z/LTA to transform mask to the space of input volume (identity.nofile possible, will invert if needed)",
      "value-key": "[XFORM]",
      "type": "String",
      "optional": true,
      "id": "xform",
      "name": "Transformation"
    },
    {
      "command-line-flag": "-lta_src",
      "description": "Source volume for -xform (if not available from the xform file)",
      "value-key": "[LTA_SRC]",
      "type": "String",
      "optional": true,
      "id": "lta_src",
      "name": "LTA Source"
    },
    {
      "command-line-flag": "-lta_dst",
      "description": "Destination volume for -xform (if not available from the xform file)",
      "value-key": "[LTA_DST]",
      "type": "String",
      "optional": true,
      "id": "lta_dst",
      "name": "LTA Destination"
    },
    {
      "command-line-flag": "-T",
      "description": "Threshold mask volume at a given threshold (values <= threshold considered zero)",
      "value-key": "[THRESHOLD]",
      "type": "Number",
      "optional": true,
      "id": "threshold",
      "name": "Threshold"
    },
    {
      "command-line-flag": "-bb",
      "description": "Create a bounding box around the mask expanded by npad voxels in each direction",
      "value-key": "[NPAD]",
      "type": "Number",
      "optional": true,
      "id": "npad",
      "name": "Bounding Box Padding"
    },
    {
      "command-line-flag": "-bbm",
      "description": "Create a bounding box around the mask expanded by npad1 npad2 npad3 voxels in each direction",
      "value-key": "[NPAD1_NPAD2_NPAD3]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "npad_vector",
      "name": "Bounding Box Padding Vector"
    },
    {
      "command-line-flag": "-bbmm",
      "description": "Create a bounding box around the mask, expanded by npad1a npad1b npad2a npad2b npad3a npad3b in each direction",
      "value-key": "[NPAD1A_NPAD1B_NPAD2A_NPAD2B_NPAD3A_NPAD3B]",
      "type": "Number",
      "list": true,
      "optional": true,
      "id": "npad_multi_vector",
      "name": "Bounding Box Full Padding Vector"
    },
    {
      "command-line-flag": "-abs",
      "description": "Take absolute value before applying threshold",
      "value-key": "[ABS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "abs",
      "name": "Absolute Flag"
    },
    {
      "command-line-flag": "-invert",
      "description": "Invert mask",
      "value-key": "[INVERT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "invert",
      "name": "Invert Mask Flag"
    },
    {
      "command-line-flag": "-no-invert",
      "description": "Turn off inversion of mask",
      "value-key": "[NO_INVERT_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "no_invert",
      "name": "No Invert Mask Flag"
    },
    {
      "command-line-flag": "-rh",
      "description": "Set mask in right hemisphere labels to 1 (assumes input mask is an aseg)",
      "value-key": "[RH_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "rh_labels",
      "name": "Right Hemisphere Label Flag"
    },
    {
      "command-line-flag": "-lh",
      "description": "Set mask in left hemisphere labels to 1 (assumes input mask is an aseg)",
      "value-key": "[LH_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "lh_labels",
      "name": "Left Hemisphere Label Flag"
    },
    {
      "command-line-flag": "-dilate",
      "description": "Dilate mask N times before applying",
      "value-key": "[DILATE]",
      "type": "Number",
      "optional": true,
      "id": "dilate",
      "name": "Dilate Mask"
    },
    {
      "command-line-flag": "-no_cerebellum",
      "description": "Remove cerebellum from aseg mask (assumes input mask is an aseg)",
      "value-key": "[NO_CEREBELLUM_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "no_cerebellum",
      "name": "No Cerebellum Flag"
    },
    {
      "command-line-flag": "-oval",
      "description": "Use specified oval value as output instead of 0",
      "value-key": "[OVAL]",
      "type": "Number",
      "optional": true,
      "id": "oval_value",
      "name": "Oval Value"
    },
    {
      "command-line-flag": "-transfer",
      "description": "Transfer only the specified voxel value from mask to output",
      "value-key": "[TRANSFER]",
      "type": "Number",
      "optional": true,
      "id": "transfer_value",
      "name": "Transfer Value"
    },
    {
      "command-line-flag": "-keep_mask_deletion_edits",
      "description": "Transfer voxel-deletion edits (voxels=1) from mask to output volume",
      "value-key": "[KEEP_MASK_DELETION_EDITS_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "keep_mask_deletion_edits",
      "name": "Keep Mask Deletion Edits Flag"
    },
    {
      "command-line-flag": "-samseg",
      "description": "Assume mask is a SAMSEG segmentation and mask all non-brain labels",
      "value-key": "[SAMSEG_FLAG]",
      "type": "Flag",
      "optional": true,
      "id": "samseg",
      "name": "SAMSEG Segmentation Flag"
    }
  ],
  "output-files": [
    {
      "path-template": "[OUTPUT_VOL]",
      "description": "Output volume file",
      "optional": false,
      "id": "output_file",
      "name": "Output File"
    }
  ],
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "url": "https://github.com/freesurfer/freesurfer"
}