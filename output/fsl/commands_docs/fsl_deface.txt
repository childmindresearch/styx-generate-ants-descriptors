
=== Output of 'fsl_deface --help' ===


Usage: fsl_deface <input> <output> 

       Tool to deface a structural T1w image.

Options:

  -k                     apply the defacing to the cropped image instead of the original image
  -d <defacing_mask>     filename to save the defacing mask;
  -n <cropped_struc>     filename to save the new cropped struct;
  -m13 <orig_2_std>      filename to save affine matrix from original struct to std;
  -m12 <orig_2_cropped>  filename to save affine matrix from original struct to cropped struct;
  -m23 <cropped_2_std>   filename to save affine matrix from cropped struct to std;
  -nud <x y z>           Shift, in mm, x-, y- and z-directions, to shift face mask by;
                         (These matrices will only work if the input has been previously reoriented to std)
  -f <f>                 fractional intensity for bet (0->1); default=0.5; 
  -B                     Bias-correct the input image (with fast);
  -c <x y z>             centre-of-gravity for bet (voxels, not mm);
  -p <images_baseName>   generate 2 pngs to show how the defacing worked for QC purposes


Error: input image --help not valid


=== Output of 'fsl_deface -help' ===


Usage: fsl_deface <input> <output> 

       Tool to deface a structural T1w image.

Options:

  -k                     apply the defacing to the cropped image instead of the original image
  -d <defacing_mask>     filename to save the defacing mask;
  -n <cropped_struc>     filename to save the new cropped struct;
  -m13 <orig_2_std>      filename to save affine matrix from original struct to std;
  -m12 <orig_2_cropped>  filename to save affine matrix from original struct to cropped struct;
  -m23 <cropped_2_std>   filename to save affine matrix from cropped struct to std;
  -nud <x y z>           Shift, in mm, x-, y- and z-directions, to shift face mask by;
                         (These matrices will only work if the input has been previously reoriented to std)
  -f <f>                 fractional intensity for bet (0->1); default=0.5; 
  -B                     Bias-correct the input image (with fast);
  -c <x y z>             centre-of-gravity for bet (voxels, not mm);
  -p <images_baseName>   generate 2 pngs to show how the defacing worked for QC purposes


Error: input image -help not valid


=== Output of 'fsl_deface' (no arguments) ===


Usage: fsl_deface <input> <output> 

       Tool to deface a structural T1w image.

Options:

  -k                     apply the defacing to the cropped image instead of the original image
  -d <defacing_mask>     filename to save the defacing mask;
  -n <cropped_struc>     filename to save the new cropped struct;
  -m13 <orig_2_std>      filename to save affine matrix from original struct to std;
  -m12 <orig_2_cropped>  filename to save affine matrix from original struct to cropped struct;
  -m23 <cropped_2_std>   filename to save affine matrix from cropped struct to std;
  -nud <x y z>           Shift, in mm, x-, y- and z-directions, to shift face mask by;
                         (These matrices will only work if the input has been previously reoriented to std)
  -f <f>                 fractional intensity for bet (0->1); default=0.5; 
  -B                     Bias-correct the input image (with fast);
  -c <x y z>             centre-of-gravity for bet (voxels, not mm);
  -p <images_baseName>   generate 2 pngs to show how the defacing worked for QC purposes


Error: No input image.

