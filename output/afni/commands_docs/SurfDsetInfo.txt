
=== Output of 'SurfDsetInfo --help' ===

Error SUMA_Dset_Type (suma_datasets.c:4915):
Null Name
Error SUMA_Dset_Type (suma_datasets.c:4915):
Null Name
Error SUMA_Dset_Type (suma_datasets.c:4915):
Null Name
Error SUMA_Dset_Type (suma_datasets.c:4915):
Null Name
Error SUMA_LoadNimlDset (suma_datasets.c:11546):
Bad dset->inel
Old niml dset?
Error SUMA_Dset_Type (suma_datasets.c:4915):
Null Name
Error SUMA_Dset_Type (suma_datasets.c:4915):
Null Name
Dset 0x5555934c0ff0, datum level 0 (0..3 possible)
Number of Links: 0
Dset Name: SPARSE_DATA (-1), isGraph 0, isCIFTI (MultiDomain)0
filename: NULL
label: NULL
self_idcode (idcode): XYZ_u8VO2J2TF2t-MSQ941ij7g
geometry_parent_idcode: 
domain_parent_idcode (MeshParent_idcode): 
Node Index (NodeDef) Element:
	inel->vec_len = 0
	inel->vec_num = 0
	inel->vec_filled = 0
	Node Index Column pointer is NULL.
Saux: (nil)
matrix_shape: -1matrix_max_index: 0, matrix_size: 0 0, matrix_2M: 0range_edge_index: 0 0, range_node_index: 0 0
N_seg_nodes: 0, N_all_nodes: 0
0 domains:
dset->Aux->doms is NULLData Element:
dnel->vec_num (N_subsets): 0
dnel->vec_filled (N_NodeDef): 0
dnel->vec_len (N_Alloc): 0
No internal colormap.
Notice SUMA_LoadNimlDset:
Bad dset->inel, dumping trace for debug:
    SUMA_LoadNimlDset
   SUMA_LoadDset_eng
  SurfDsetInfo
 Bottom of Debug Stack
Error SUMA_Dset_Type (suma_datasets.c:4915):
Null Name

** Error: Failed parsing data row 0 of 1D file './--help'
          Check for illegal non-numeric characters in:
          'v R'
          You can have text entries set to 0 with -ok_1D_text or by 
          setting environment variable AFNI_1D_ZERO_TEXT to YES.
Error SUMA_LoadDXDset_eng (suma_datasets.c:102):
no objects in file
--     Error SurfDsetInfo (SUMA_SurfDsetInfo.c:119):
Failed reading dset

Info for dset ( 1/ 1): --help
------------------------

=== Output of 'SurfDsetInfo -help' ===


Usage: SurfDsetInfo [options] -input DSET1 -input DSET2 ...
   or: SurfDsetInfo [options] DSET1 DSET2 ... 
   Optional Params:
      -debug DBG: if DBG = 2, show dset->ngr in its entirety in NIML form.

  SUMA dataset input options:
      -input DSET: Read DSET1 as input.
                   In programs accepting multiple input datasets
                   you can use -input DSET1 -input DSET2 or 
                   input DSET1 DSET2 ...
       NOTE: Selecting subsets of a dataset:
             Much like in AFNI, you can select subsets of a dataset
             by adding qualifiers to DSET.
           Append #SEL# to select certain nodes.
           Append [SEL] to select certain columns.
           Append {SEL} to select certain rows.
           The format of SEL is the same as in AFNI, see section:
           'INPUT DATASET NAMES' in 3dcalc -help for details.
           Append [i] to get the node index column from
                      a niml formatted dataset.
           *  SUMA does not preserve the selection order 
              for any of the selectors.
              For example:
              dset[44,10..20] is the same as dset[10..20,44]
              Also, duplicate values are not supported.
              so dset[13, 13] is the same as dset[13].
              I am not proud of these limitations, someday I'll get
              around to fixing them.


   [-novolreg]: Ignore any Rotate, Volreg, Tagalign, 
                or WarpDrive transformations present in 
                the Surface Volume.
   [-noxform]: Same as -novolreg
   [-setenv "'ENVname=ENVvalue'"]: Set environment variable ENVname
                to be ENVvalue. Quotes are necessary.
             Example: suma -setenv "'SUMA_BackgroundColor = 1 0 1'"
                See also options -update_env, -environment, etc
                in the output of 'suma -help'
  Common Debugging Options:
   [-trace]: Turns on In/Out debug and Memory tracing.
             For speeding up the tracing log, I recommend 
             you redirect stdout to a file when using this option.
             For example, if you were running suma you would use:
             suma -spec lh.spec -sv ... > TraceFile
             This option replaces the old -iodbg and -memdbg.
   [-TRACE]: Turns on extreme tracing.
   [-nomall]: Turn off memory tracing.
   [-yesmall]: Turn on memory tracing (default).
  NOTE: For programs that output results to stdout
    (that is to your shell/screen), the debugging info
    might get mixed up with your results.


Global Options (available to all AFNI/SUMA programs)
  -h: Mini help, at time, same as -help in many cases.
  -help: The entire help output
  -HELP: Extreme help, same as -help in majority of cases.
  -h_view: Open help in text editor. AFNI will try to find a GUI editor
  -hview : on your machine. You can control which it should use by
           setting environment variable AFNI_GUI_EDITOR.
  -h_web: Open help in web browser. AFNI will try to find a browser.
  -hweb : on your machine. You can control which it should use by
          setting environment variable AFNI_GUI_EDITOR. 
  -h_find WORD: Look for lines in this programs's -help output that match
                (approximately) WORD.
  -h_raw: Help string unedited
  -h_spx: Help string in sphinx loveliness, but do not try to autoformat
  -h_aspx: Help string in sphinx with autoformatting of options, etc.
  -all_opts: Try to identify all options for the program from the
             output of its -help option. Some options might be missed
             and others misidentified. Use this output for hints only.
  


Compile Date:
   Sep 12 2024

       Ziad S. Saad SSCC/NIMH/NIH saadz@mail.nih.gov     

=== Output of 'SurfDsetInfo' (no arguments) ===


Usage: SurfDsetInfo [options] -input DSET1 -input DSET2 ...
   or: SurfDsetInfo [options] DSET1 DSET2 ... 
   Optional Params:
      -debug DBG: if DBG = 2, show dset->ngr in its entirety in NIML form.

  SUMA dataset input options:
      -input DSET: Read DSET1 as input.
                   In programs accepting multiple input datasets
                   you can use -input DSET1 -input DSET2 or 
                   input DSET1 DSET2 ...
       NOTE: Selecting subsets of a dataset:
             Much like in AFNI, you can select subsets of a dataset
             by adding qualifiers to DSET.
           Append #SEL# to select certain nodes.
           Append [SEL] to select certain columns.
           Append {SEL} to select certain rows.
           The format of SEL is the same as in AFNI, see section:
           'INPUT DATASET NAMES' in 3dcalc -help for details.
           Append [i] to get the node index column from
                      a niml formatted dataset.
           *  SUMA does not preserve the selection order 
              for any of the selectors.
              For example:
              dset[44,10..20] is the same as dset[10..20,44]
              Also, duplicate values are not supported.
              so dset[13, 13] is the same as dset[13].
              I am not proud of these limitations, someday I'll get
              around to fixing them.


   [-novolreg]: Ignore any Rotate, Volreg, Tagalign, 
                or WarpDrive transformations present in 
                the Surface Volume.
   [-noxform]: Same as -novolreg
   [-setenv "'ENVname=ENVvalue'"]: Set environment variable ENVname
                to be ENVvalue. Quotes are necessary.
             Example: suma -setenv "'SUMA_BackgroundColor = 1 0 1'"
                See also options -update_env, -environment, etc
                in the output of 'suma -help'
  Common Debugging Options:
   [-trace]: Turns on In/Out debug and Memory tracing.
             For speeding up the tracing log, I recommend 
             you redirect stdout to a file when using this option.
             For example, if you were running suma you would use:
             suma -spec lh.spec -sv ... > TraceFile
             This option replaces the old -iodbg and -memdbg.
   [-TRACE]: Turns on extreme tracing.
   [-nomall]: Turn off memory tracing.
   [-yesmall]: Turn on memory tracing (default).
  NOTE: For programs that output results to stdout
    (that is to your shell/screen), the debugging info
    might get mixed up with your results.


Global Options (available to all AFNI/SUMA programs)
  -h: Mini help, at time, same as -help in many cases.
  -help: The entire help output
  -HELP: Extreme help, same as -help in majority of cases.
  -h_view: Open help in text editor. AFNI will try to find a GUI editor
  -hview : on your machine. You can control which it should use by
           setting environment variable AFNI_GUI_EDITOR.
  -h_web: Open help in web browser. AFNI will try to find a browser.
  -hweb : on your machine. You can control which it should use by
          setting environment variable AFNI_GUI_EDITOR. 
  -h_find WORD: Look for lines in this programs's -help output that match
                (approximately) WORD.
  -h_raw: Help string unedited
  -h_spx: Help string in sphinx loveliness, but do not try to autoformat
  -h_aspx: Help string in sphinx with autoformatting of options, etc.
  -all_opts: Try to identify all options for the program from the
             output of its -help option. Some options might be missed
             and others misidentified. Use this output for hints only.
  


Compile Date:
   Sep 12 2024

       Ziad S. Saad SSCC/NIMH/NIH saadz@mail.nih.gov     
