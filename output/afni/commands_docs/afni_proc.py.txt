
=== Output of 'afni_proc.py --help' ===

** error: unknown trailing arguments : ['--help']
----------------------------------------------------------------------
** failed command (get_user_opts):

  afni_proc.py --help
----------------------------------------------------------------------

=== Output of 'afni_proc.py -help' ===


===========================================================================
afni_proc.py        - generate a tcsh script for an AFNI process stream

Purpose: ~1~

   This program is meant to create single subject processing scripts for
   task, resting state or surface-based analyses.  The processing scripts
   are written in the tcsh language.

   The typical goal is to create volumes of aligned response magnitudes
   (stimulus beta weights) to use as input for a group analysis.

Inputs (only EPI is required): ~1~

   - anatomical dataset
   - EPI time series datasets
   - stimulus timing files
   - processing and design decisions:
       e.g. TRs to delete, blur size, censoring options, basis functions

Main outputs (many datasets are created): ~1~

   - for task-based analysis: stats dataset (and anat_final)
   - for resting-state analysis: errts datasets ("cleaned up" EPI)

Basic script outline: ~1~

   - copy all inputs to new 'results' directory
   - process data: e.g. despike,tshift/align/tlrc/volreg/blur/scale/regress
   - leave all (well, most) results there, so user can review processing
   - create quality control data (APQC HTML page, ss_review_scripts, etc.)

The exact processing steps are controlled by the user, including which main
processing blocks to use, and their order.  See the 'DEFAULTS' section for
a description of the default options for each block.

The output script (when executed) would create a results directory, copy
input files into it, and perform all processing there.  So the user can
delete the results directory and modify/re-run the script at their whim.

Note that the user need not actually run the output script.  The user
should feel free to modify the script for their own evil purposes, or to
just compare the processing steps with those in their own scripts.  Also,
even if a user is writing their own processing scripts, it is a good idea
to get some independent confirmation of the processing, such as by using
afni_proc.py to compare the results on occasion.

The text interface can be accessed via the -ask_me option.  It invokes a
question & answer session, during which this program sets user options on
the fly.  The user may elect to enter some of the options on the command
line, even if using -ask_me.  See "-ask_me EXAMPLES", below.

** However, -ask_me has not been touched in many years.  I suggest starting
   with the 'modern' examples (for task/rest/surface), or by using the
   uber_subject.py GUI (graphical user interface) to generate an initial
   afni_proc.py command script.

   See uber_subject.py -help (or just start the GUI) for details.

==================================================
SECTIONS: order of sections in the "afni_proc.py -help" output ~1~

    program introduction    : (above) basic overview of afni_proc.py
    SETTING UP AN ANALYSIS  : a guide for getting started
    PROCESSING BLOCKS       : list of possible processing blocks
    DEFAULTS                : basic default operations, per block
    EXAMPLES                : various examples of running this program
    NOTE sections           : details on various topics
        GENERAL ANALYSIS NOTE, QUALITY CONTROL NOTE,
        RESTING STATE NOTE, FREESURFER NOTE,
        TIMING FILE NOTE, MASKING NOTE,
        ANAT/EPI ALIGNMENT CASES NOTE, ANAT/EPI ALIGNMENT CORRECTIONS NOTE,
        WARP TO TLRC NOTE,
        RETROICOR NOTE, MULTI ECHO NOTE,
        RUNS OF DIFFERENT LENGTHS NOTE, SCRIPT EXECUTION NOTE
    OPTIONS                 : descriptions of all program options
        informational       : options to get quick info and quit
        general execution   : options not specific to a processing block
        block options       : specific to blocks, in default block order

==================================================
SETTING UP AN ANALYSIS: ~1~

For those new to using afni_proc.py, it is very helpful to start with an
example that is similar to what you want to do, generally taken from the help
examples (afni_proc.py -show_example_names) or prior publication.

Once satisfied with a single application of afni_proc.py, one would then loop
over subjects by running afni_proc.py on each, using subject variables to refer
to the individual set of input data and the output subject ID.

Starting up, there is a general set of choices that is good to consider:

   a. type of analysis:    task or rest/naturalistic
   b. domain of analysis:  volume or surface (possibly either as ROI)
   c. main input data:     anat, EPI runs (single or multi-echo), task timing,
                           surfaces and surface anatomical
   d. extra input data:    NL distortion warp, NL template warp, blip dsets,
                           ROI imports, anat followers, physio regressors,
                           external registration base (for volreg or anat),
                           external motion files, censor list, extra regressors
   e. processing blocks:   main EPI processing blocks and their order
                         - see "PROCESSING BLOCKS"
   f. optional processing: physio regression, tedana, ANATICOR, ROI regression,
                           bandpassing
   g. main options:        template, blur level (if any), censor levels,
                           EPI/anat cost and other alignment options
   h. other options:       there are many, e.g.: motion regressors, bandpass,
                           ANATICOR, and many that are specific to QC

   ----------

   a. type of analysis

      For a task analysis, one provides stimulus timing files and corresponding
      modeling options.  This is a large topic that centers on the use of
      3dDeconvolve.

      Options for task analysis generally start with -regress, as they pertain
      to the regress block.  However one generally includes a regress block in
      any analysis (even partial ones, such as for alignment), as it is the
      gateway to the APQC HTML report.

   b. domain of analysis

      For a surface analysis, one provides a SUMA spec file per hemisphere,
      along with a surface anatomical dataset.  Mapping from the volume to the
      surface generally happens soon after all volumetric registration is done,
      and importantly, before any blur block.  Restricting blurring to the
      surface is one of the reasons to perform such an analysis.

      In a surface analysis, no volumetric template or tlrc options are given.
      Surface analysis is generally performed on SUMA's standard meshes, though
      it need not be.

      An ROI analysis is generally performed as a typical volume or surface
      analysis, but without any applied blurring (which effectively happens
      later, when averaging over the ROIs).

   c. main input data

      EPI datasets are required, for one or more runs and one or more echoes.
      Anything else is optional.

      Typically one also includes a subject anatomy, any task timing files, and
      surface datasets (spec files an anatomy) if doing a surface analysis.

   d. extra input data

      It is common to supply a non-linear transformation warp dataset (from
      sswarper) to apply for anatomy->template alignment.  One might also have
      a pre-computed non-linear B0 distortion map or reverse phase encoding
      (blip) dataset, ROIs or other anatomical followers or physiological
      regressors.  An EPI base dataset might be provided to align the EPI to,
      and possibly one to guide alignment to the subject anatomical dataset.

      Precomputed motion parameter files could be provided (if skipping the
      volreg block), as well as an external censor time series or precomputed
      regressors (of interest or not).

      These extra inputs will affect use of other options.

   e. processing blocks

      As described in the "PROCESSING BLOCKS" section, one can specify an
      ordered list of main processing blocks.  The order of the listed blocks
      will determine their order in the processing script.  Of course, for a
      given set of blocks, there is typically a preferred order.

      Options specific to one block will generally start with that block name.
      For example, the -regress_* options apply to the regress block.

      It is logically clear (but not necessary) to provide block options in the
      same chronological order as the blocks.

   f. optional processing

      Optional processing might include things like:
        - physiological noise regression, based on use of physio_calc.py
        - tedana, or a variant, for use in combining multi-echo time series
        - ANATICOR (local white matter regression)
        - ROI regression (averages or principle components)
        - bandpassing (low pass, high pass, or single or multiple bands)

   g. main options

      One typically provides:
        - a template (and accompanying non-linear anat to template
          transformation datasets)
        - an amount to blur (or a choice to not blur, as would apply to an ROI
          analysis), or a level to blur _to_
        - censor levels (for outliers or the Euclidean norm of the motion
          parameters)
        - alignment options, such as the cost function for align_epi_anat.py
          and a local EPI unifize option - there are many options to control
          many aspects of registration
        - many quality control options are also considered appropriate for
          consistent use

   h. other options

      Each step of processing has many control options around it.  It is
      important to think through what might be appropriate for the data in
      question.

      No one analysis fits all data.

      Quality control "options" are not really considered optional.

==================================================
PROCESSING BLOCKS (of the output script): ~1~

The output script will go through the following steps, unless the user
specifies otherwise.

automatic blocks (the tcsh script will always perform these): ~2~

    setup       : check subject arg, set run list, create output dir, and
                  copy stim files
    tcat        : copy input datasets and remove unwanted initial TRs

default blocks (the user may skip these, or alter their order): ~2~

    tshift      : slice timing alignment on volumes (default is -time 0)
    volreg      : volume registration (default to third volume)
    blur        : blur each volume (default is 4mm fwhm)
    mask        : create a 'brain' mask from the EPI data
    scale       : scale each run mean to 100, for each voxel (max of 200)
    regress     : regression analysis (default is GAM, peak 1, with motion
                  params)

optional blocks (the default is to _not_ apply these blocks) ~2~

    align       : align EPI anat anatomy (via align_epi_anat.py)
    combine     : combine echoes into one
    despike     : truncate spikes in each voxel's time series
    empty       : placeholder for some user command (uses 3dTcat as sample)
    ricor       : RETROICOR - removal of cardiac/respiratory regressors
    surf        : project volumetric data into the surface domain
    tlrc        : warp anat to a standard space/specified template

implicit blocks (controlled by program, added when appropriate) ~2~

    blip        : perform B0 distortion correction
    outcount    : temporal outlier detection
    QC review   : generate QC review scripts and HTML report
    anat_unif   : anatomical uniformity correction

==================================================
DEFAULTS: basic defaults for each block (blocks listed in default order) ~1~

    A : denotes automatic block that is not a 'processing' option
    D : denotes a default processing block (others must be requested)

A   setup:    - use 'SUBJ' for the subject id
                    (option: -subj_id SUBJ)
              - create a t-shell script called 'proc_subj'
                    (option: -script proc_subj)
              - use results directory 'SUBJ.results'
                    (option: -out_dir SUBJ.results)

A   tcat:     - do not remove any of the first TRs

    despike:  - NOTE: by default, this block is _not_ used
              - automasking is not done (requires -despike_mask)

    ricor:    - NOTE: by default, this block is _not_ used
              - polort based on twice the actual run length
              - solver is OLSQ, not REML
              - do not remove any first TRs from the regressors

D   tshift:   - align slices to the beginning of the TR
              - use quintic interpolation for time series resampling
                    (option: -tshift_interp -quintic)

    align:    - align the anatomy to match the EPI
                (also required for the option of aligning EPI to anat)

    tlrc:     - use TT_N27+tlrc as the base (-tlrc_base TT_N27+tlrc)
              - no additional suffix (-tlrc_suffix NONE)
              - use affine registration (no -tlrc_NL_warp)

D   volreg:   - align to third volume of first run, -zpad 1
                    (option: -volreg_align_to third)
                    (option: -volreg_zpad 1)
              - use cubic interpolation for volume resampling
                    (option: -volreg_interp -cubic)
              - apply motion params as regressors across all runs at once
              - do not align EPI to anat
              - do not warp to standard space

    combine:  - combine methods using OC (optimally combined)

D   blur:     - blur data using a 4 mm FWHM filter with 3dmerge
                    (option: -blur_filter -1blur_fwhm)
                    (option: -blur_size 4)
                    (option: -blur_in_mask no)

D   mask:     - create a union of masks from 3dAutomask on each run
              - not applied in regression without -regress_apply_mask
              - if possible, create a subject anatomy mask
              - if possible, create a group anatomy mask (tlrc base)

D   scale:    - scale each voxel to mean of 100, clip values at 200

D   regress:  - use GAM regressor for each stim
                    (option: -regress_basis)
              - compute the baseline polynomial degree, based on run length
                    (e.g. option: -regress_polort 2)
              - do not censor large motion
              - output fit time series
              - output ideal curves for GAM/BLOCK regressors
              - output iresp curves for non-GAM/non-BLOCK regressors

    empty:    - do nothing (just copy the data using 3dTcat)


==================================================
EXAMPLES (options can be provided in any order): ~1~

        Example 1. Minimum use. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              merely shows how simple a command can be)

           Provide datasets and stim files (or stim_times files).  Note that a
           dataset suffix (e.g. HEAD) must be used with wildcards, so that
           datasets are not applied twice.  In this case, a stim_file with many
           columns is given, where the script to changes it to stim_times files.
           
        --------------------------
        last mod date : 2008.12.10
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -dsets               epiRT*.HEAD                                 \
            -regress_stim_files  stims.1D
 

        Example 2. Very simple. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)

           Use all defaults, except remove 3 TRs and use basis
           function BLOCK(30,1).  The default basis function is GAM.
            
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                sb23.e2.simple                           \
            -dsets                  sb23/epi_r??+orig.HEAD                   \
            -tcat_remove_first_trs  3                                        \
            -regress_stim_times     sb23/stim_files/blk_times.*.1D           \
            -regress_basis          'BLOCK(30,1)'
 

        Example 3. Formerly a simple class example. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)

           Copy the anatomy into the results directory, register EPI data to
           the last TR, specify stimulus labels, compute blur estimates, and
           provide GLT options directly to 3dDeconvolve.  The GLTs will be
           ignored after this, as they take up too many lines.
            
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.blk                                \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -copy_anat               sb23/sb23_mpra+orig                     \
            -tcat_remove_first_trs   3                                       \
            -volreg_align_to         last                                    \
            -regress_stim_times      sb23/stim_files/blk_times.*.1D          \
            -regress_stim_labels     tneg tpos tneu eneg epos eneu fneg fpos \
                                     fneu                                    \
            -regress_basis           'BLOCK(30,1)'                           \
            -regress_opts_3dD        -gltsym 'SYM: +eneg -fneg'              \
                                     -glt_label 1 eneg_vs_fneg               \
                                     -gltsym                                 \
                                     'SYM: 0.5*fneg 0.5*fpos -1.0*fneu'      \
                                     -glt_label 2 face_contrast              \
                                     -gltsym                                 \
                                     'SYM: tpos epos fpos -tneg -eneg -fneg' \
                                     -glt_label 3 pos_vs_neg                 \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 4. Similar to 3, but specify the processing blocks. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)

           Adding despike and tlrc, and removing tshift.  Note that
           the tlrc block is to run @auto_tlrc on the anat.  Ignore the GLTs.
           
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.e4.blocks                          \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -blocks                  despike volreg blur mask scale regress  \
                                     tlrc                                    \
            -copy_anat               sb23/sb23_mpra+orig                     \
            -tcat_remove_first_trs   3                                       \
            -regress_stim_times      sb23/stim_files/blk_times.*.1D          \
            -regress_stim_labels     tneg tpos tneu eneg epos eneu fneg fpos \
                                     fneu                                    \
            -regress_basis           'BLOCK(30,1)'                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 5a. RETROICOR, resting state data. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              just a terribly simple example using ricor)

           Assuming the class data is for resting-state and that we have the
           appropriate slice-based regressors from RetroTS.py, apply the
           despike and ricor processing blocks.  Note that '-do_block' is used
           to add non-default blocks into their default positions.  Here the
           'despike' and 'ricor' processing blocks would come before 'tshift'.

           Remove 3 TRs from the ricor regressors to match the EPI data.  Also,
           since degrees of freedom are not such a worry, regress the motion
           parameters per-run (each run gets a separate set of 6 regressors).

           The regression will use 81 basic regressors (all of "no interest"),
           with 13 retroicor regressors being removed during preprocessing:

                 27 baseline  regressors ( 3 per run * 9 runs)
                 54 motion    regressors ( 6 per run * 9 runs)

           To example #3, add -do_block, -ricor_* and -regress_motion_per_run.
           
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, physio, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.e5a.ricor                          \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -do_block                despike ricor                           \
            -tcat_remove_first_trs   3                                       \
            -ricor_regs_nfirst       3                                       \
            -ricor_regs              sb23/RICOR/r*.slibase.1D                \
            -regress_motion_per_run

           If tshift, blurring and masking are not desired, consider replacing
           the -do_block option with an explicit list of blocks:

                -blocks despike ricor volreg regress
           

        Example 5b. RETROICOR, while running a normal regression. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              another overly simple example using ricor)

           Add the ricor regressors to a normal regression-based processing
           stream.  Apply the RETROICOR regressors across runs (so using 13
           concatenated regressors, not 13*9).  Note that concatenation is
           normally done with the motion regressors too.

           To example #3, add -do_block and three -ricor options.
           
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, physio, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.e5b.ricor                          \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -do_block                despike ricor                           \
            -copy_anat               sb23/sb23_mpra+orig                     \
            -tcat_remove_first_trs   3                                       \
            -ricor_regs_nfirst       3                                       \
            -ricor_regs              sb23/RICOR/r*.slibase.1D                \
            -ricor_regress_method    across-runs                             \
            -volreg_align_to         last                                    \
            -regress_stim_times      sb23/stim_files/blk_times.*.1D          \
            -regress_stim_labels     tneg tpos tneu eneg epos eneu fneg fpos \
                                     fneu                                    \
            -regress_basis           'BLOCK(30,1)'                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts

           Also consider adding -regress_bandpass.
           

        Example 5c. RETROICOR: censor and band pass. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper, no BP)

           This is an example of how we might currently suggest analyzing
           resting state data.  If no RICOR regressors exist, see example 9
           (or just remove any ricor options).

           Censoring due to motion has long been considered appropriate in
           BOLD FMRI analysis, but is less common for those doing bandpass
           filtering in RS FMRI because the FFT requires one to either break
           the time axis (evil) or to replace the censored data with something
           probably inappropriate.

           Instead, it is slow (no FFT, but maybe SFT :) but effective to
           regress frequencies within the regression model, where censoring
           is simple.

           Note: band passing in the face of RETROICOR is questionable.  It may
                 be questionable in general.  To skip bandpassing, remove the
                 -regress_bandpass option line.

           Also, align EPI to anat and warp to standard space.
           
        --------------------------
        last mod date : 2016.05.03
        keywords      : obsolete, physio, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  sb23.e5a.ricor                         \
            -dsets                    sb23/epi_r??+orig.HEAD                 \
            -blocks                   despike ricor tshift align tlrc volreg \
                                      blur mask regress                      \
            -copy_anat                sb23/sb23_mpra+orig                    \
            -tcat_remove_first_trs    3                                      \
            -ricor_regs_nfirst        3                                      \
            -ricor_regs               sb23/RICOR/r*.slibase.1D               \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -blur_size                6                                      \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.2                                    \
            -regress_run_clustsim     no                                     \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 6. A simple task example, based on AFNI_data6. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              meant to be fast, but not complete, e.g. NL warp)
              (              prefer: see Example 6b)

           This example has changed to more closely correspond with the
           the class analysis example, AFNI_data6/FT_analysis/s05.ap.uber.

           The tshift block will interpolate each voxel time series to adjust
           for differing slice times, where the result is more as if each
           entire volume were acquired at the beginning of the TR.

           The 'align' block implies using align_epi_anat.py to align the
           anatomy with the EPI.  Here, the EPI base is first unifized locally.
           Additional epi/anat alignment options specify using lpc+ZZ for the
           cost function (more robust than simply lpc), -giant_move (in case
           the anat and EPI start a bit far apart), and -check_flip, to try to
           verify whether EPI left and right agree with the anatomy.
           This block computes the anat to EPI transformation matrix, which
           will be inverted in the volreg block, based on -volreg_align_e2a.

           Also, compute the transformation of the anatomy to MNI space, using
           affine registration (for speed in this simple example) to align to
           the 2009c template.

           In the volreg block, align the EPI to the MIN_OUTLIER volume (a
           low-motion volume, determined based on the data).  Then concatenate
           all EPI transformations, warping the EPI to standard space in one
           step (without multiple resampling operations), combining:

              EPI  ->  EPI base  ->  anat  ->  MNI 2009c template

           The standard space transformation is included by specifying option
           -volreg_tlrc_warp.

           A 4 mm blur is applied, to keep it very light (about 1.5 times the
           voxel size).

           The regression model is based on 2 conditions, each lasting 20 s
           per event, modeled by convolving a 20 s boxcar function with the
           BLOCK basis function, specified as BLOCK(20,1) to make the regressor
           unit height (height 1).

           One extra general linear test (GLT) is included, contrasting the
           visual reliable condition (vis) with auditory reliable (aud).

           Motion regression will be per run (using one set of 6 regressors for
           each run, i.e. 18 regressors in this example).

           The regression includes censoring of large motion (>= 0.3 ~mm
           between successive time points, based on the motion parameters),
           as well as censoring of outlier time points, where at least 5% of
           the brain voxels are computed as outliers.

           The regression model starts as a full time series, for time
           continuity, before censored time points are removed.  The output
           errts will be zero at censored time points (no error there), and so
           the output fit times series (fitts) will match the original data.

           The model fit time series (fitts) will be computed AFTER the linear
           regression, to save RAM on class laptops.

           Create sum_ideal.1D, as the sum of all non-baseline regressors, for
           quality control.

           Estimate the blur in the residual time series.  The resulting 3 ACF
           parameters can be averaged across subjects for cluster correction at
           the group level.

           Skip running the Monte Carlo cluster simulation example (which would
           specify minimum cluster sizes for cluster significance, based on the
           ACF parameters and mask), for speed.

           Once the proc script is created, execute it.
           
        --------------------------
        last mod date : 2020.02.15
        keywords      : task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.e6                                  \
            -copy_anat                FT/FT_anat+orig                        \
            -dsets                    FT/FT_epi_r?+orig.HEAD                 \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_compute_tsnr      yes                                    \
            -mask_epi_anat            yes                                    \
            -blur_size                4.0                                    \
            -regress_stim_times       FT/AV1_vis.txt FT/AV2_aud.txt          \
            -regress_stim_labels      vis aud                                \
            -regress_basis            'BLOCK(20,1)'                          \
            -regress_opts_3dD         -jobs 2                                \
                                      -gltsym 'SYM: vis -aud'                \
                                      -glt_label 1 V-A                       \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_compute_fitts                                           \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     no                                     \
            -html_review_style        pythonic                               \
            -execute

         * One could also use ANATICOR with task (e.g. -regress_anaticor_fast)
           in the case of -regress_reml_exec.  3dREMLfit supports voxelwise
           regression, but 3dDeconvolve does not.
             

        Example 6b. A modern task example, with preferable options. ~2~

              (recommended?  yes, reasonable for a complete analysis)

           GOOD TO CONSIDER

           This is based on Example 6, but is more complete.
           Example 6 is meant to run quickly, as in an AFNI bootcamp setting.
           Example 6b is meant to process more as we might suggest.

              - apply -check_flip in align_epi_anat.py, to monitor consistency
              - apply non-linear registration to MNI template, using output
                from @SSwarper:
                  o apply skull-stripped anat in -copy_anat
                  o apply original anat as -anat_follower (QC, for comparison)
                  o pass warped anat and transforms via -tlrc_NL_warped_dsets,
                    to apply those already computed transformations
              - use -mask_epi_anat to tighten the EPI mask (for QC),
                intersecting it (full_mask) with the anat mask (mask_anat)
              - use 3dREMLfit for the regression, to account for temporal
                autocorrelation in the noise
                (-regress_3dD_stop, -regress_reml_exec)
              - generate the HTML QC report using the nicer pythonic functions
                (requires matplotlib)
           
        --------------------------
        last mod date : 2020.02.15
        keywords      : complete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.e6b                                 \
            -copy_anat                Qwarp/anat_warped/anatSS.FT.nii        \
            -anat_has_skull           no                                     \
            -anat_follower            anat_w_skull anat FT/FT_anat+orig      \
            -dsets                    FT/FT_epi_r?+orig.HEAD                 \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template_SSW.nii.gz        \
            -tlrc_NL_warp                                                    \
            -tlrc_NL_warped_dsets     Qwarp/anat_warped/anatQQ.FT.nii        \
                                      Qwarp/anat_warped/anatQQ.FT.aff12.1D   \
                                      Qwarp/anat_warped/anatQQ.FT_WARP.nii   \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_compute_tsnr      yes                                    \
            -mask_epi_anat            yes                                    \
            -blur_size                4.0                                    \
            -regress_stim_times       FT/AV1_vis.txt FT/AV2_aud.txt          \
            -regress_stim_labels      vis aud                                \
            -regress_basis            'BLOCK(20,1)'                          \
            -regress_opts_3dD         -jobs 2                                \
                                      -gltsym 'SYM: vis -aud'                \
                                      -glt_label 1 V-A                       \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_3dD_stop                                                \
            -regress_reml_exec                                               \
            -regress_compute_fitts                                           \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     no                                     \
            -html_review_style        pythonic                               \
            -execute

           To compare one's own command against this one, consider adding
                -compare_opts 'example 6b'
           to the end of (or anywhere in) the current command, as in:

                afni_proc.py ... my options ...   -compare_opts 'example 6b'
           

        Example 7. Apply some esoteric options. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. NL warp without @SSwarper)
              (              prefer: see Example 6b)

           a. Blur only within the brain, as far as an automask can tell.  So
              add -blur_in_automask to blur only within an automatic mask
              created internally by 3dBlurInMask (akin to 3dAutomask).

           b. Let the basis functions vary.  For some reason, we expect the
              BOLD responses to the telephone classes to vary across the brain.
              So we have decided to use TENT functions there.  Since the TR is
              3.0s and we might expect up to a 45 second BOLD response curve,
              use 'TENT(0,45,16)' for those first 3 out of 9 basis functions.

              This means using -regress_basis_multi instead of -regress_basis,
              and specifying all 9 basis functions appropriately.

           c. Use amplitude modulation.

              We expect responses to email stimuli to vary proportionally with
              the number of punctuation characters used in the message (in
              certain brain regions).  So we will use those values as auxiliary
              parameters 3dDeconvolve by marrying the parameters to the stim
              times (using 1dMarry).

              Use -regress_stim_types to specify that the epos/eneg/eneu stim
              classes should be passed to 3dDeconvolve using -stim_times_AM2.

           d. Not only censor motion, but censor TRs when more than 10% of the
              automasked brain are outliers.  So add -regress_censor_outliers.

           e. Include both de-meaned and derivatives of motion parameters in
              the regression.  So add '-regress_apply_mot_types demean deriv'.

           f. Output baseline parameters so we can see the effect of motion.
              So add -bout under option -regress_opts_3dD.

           g. Save on RAM by computing the fitts only after 3dDeconvolve.
              So add -regress_compute_fitts.

           h. Speed things up.  Have 3dDeconvolve use 4 CPUs and skip the
              single subject 3dClustSim execution.  So add '-jobs 4' to the
              -regress_opts_3dD option and add '-regress_run_clustsim no'.
           
        --------------------------
        last mod date : 2020.01.08
        keywords      : task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  sb23.e7.esoteric                       \
            -dsets                    sb23/epi_r??+orig.HEAD                 \
            -blocks                   tshift align tlrc volreg blur mask     \
                                      scale regress                          \
            -copy_anat                sb23/sb23_mpra+orig                    \
            -tcat_remove_first_trs    3                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -blur_in_automask                                                \
            -regress_stim_times       sb23/stim_files/blk_times.*.1D         \
            -regress_stim_types       times times times AM2 AM2 AM2 times    \
                                      times times                            \
            -regress_stim_labels      tneg tpos tneu eneg epos eneu fneg     \
                                      fpos fneu                              \
            -regress_basis_multi      'BLOCK(30,1)' 'TENT(0,45,16)'          \
                                      'BLOCK(30,1)' 'BLOCK(30,1)'            \
                                      'TENT(0,45,16)' 'BLOCK(30,1)'          \
                                      'BLOCK(30,1)' 'TENT(0,45,16)'          \
                                      'BLOCK(30,1)'                          \
            -regress_opts_3dD         -bout -gltsym 'SYM: +eneg -fneg'       \
                                      -glt_label 1 eneg_vs_fneg              \
                                      -jobs 4                                \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.1                                    \
            -regress_compute_fitts                                           \
            -regress_run_clustsim     no                                     \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 8. Surface-based analysis. ~2~

              (recommended?  yes, reasonable for a complete analysis)

           This example is intended to be run from AFNI_data6/FT_analysis.
           It is provided with the class data in file s03.ap.surface.

           Add -surf_spec and -surf_anat to provide the required spec and
           surface volume datasets.  The surface volume will be aligned to
           the current anatomy in the processing script.  Two spec files
           (lh and rh) are provided, one for each hemisphere (via wildcard).

           Also, specify a (resulting) 6 mm FWHM blur via -blur_size.  This
           does not add a blur, but specifies a resulting blur level.  So
           6 mm can be given directly for correction for multiple comparisons
           on the surface.

           Censor per-TR motion above 0.3 mm.

           Note that no -regress_est_blur_errts option is given, since that
           applies to the volume only (and since the 6 mm blur is a resulting
           blur level, so the estimates are not needed).

           The -blocks option is provided, but it is the same as the default
           for surface-based analysis, so is not really needed here.  Note that
           the 'surf' block is added and the 'mask' block is removed from the
           volume-based defaults.

           important options:

                -blocks         : includes surf, but no mask
                                  (default blocks for surf, so not needed)
                -surf_anat      : volume aligned with surface
                -surf_spec      : spec file(s) for surface

           Note: one would probably want to use standard mesh surfaces here.
                 This example will be updated with them in the future.
            
        --------------------------
        last mod date : 2017.09.12
        keywords      : complete, surface, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 FT.surf                                 \
            -blocks                  tshift align volreg surf blur scale     \
                                     regress                                 \
            -copy_anat               FT/FT_anat+orig                         \
            -dsets                   FT/FT_epi_r?+orig.HEAD                  \
            -surf_anat               FT/SUMA/FTmb_SurfVol+orig               \
            -surf_spec               FT/SUMA/FTmb_?h.spec                    \
            -tcat_remove_first_trs   2                                       \
            -align_opts_aea          -cost lpc+ZZ                            \
                                     -giant_move                             \
            -volreg_align_to         MIN_OUTLIER                             \
            -volreg_align_e2a                                                \
            -blur_size               6                                       \
            -regress_stim_times      FT/AV1_vis.txt FT/AV2_aud.txt           \
            -regress_stim_labels     vis aud                                 \
            -regress_basis           'BLOCK(20,1)'                           \
            -regress_opts_3dD        -jobs 2                                 \
                                     -gltsym 'SYM: vis -aud'                 \
                                     -glt_label 1 V-A                        \
            -regress_motion_per_run                                          \
            -regress_censor_motion   0.3
 

        Example 9. Resting state analysis with censoring and band passing. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. has band pass, no @SSwarper)
              (              prefer: see Example 11)

           With censoring and bandpass filtering.

           This is our suggested way to do preprocessing for resting state
           analysis, under the assumption that no cardio/physio recordings
           were made (see example 5 for cardio files).

           Censoring due to motion has long been considered appropriate in
           BOLD FMRI analysis, but is less common for those doing bandpass
           filtering in RS FMRI because the FFT requires one to either break
           the time axis (evil) or to replace the censored data with something
           probably inappropriate.

           Instead, it is slow (no FFT, but maybe SFT :) but effective to
           regress frequencies within the regression model, where censoring
           is simple.

           inputs: anat, EPI
           output: errts dataset (to be used for correlation)

           special processing:
              - despike, as another way to reduce motion effect
                 (see block despike)
              - censor motion TRs at the same time as bandpassing data
                 (see -regress_censor_motion, -regress_bandpass)
              - regress motion parameters AND derivatives
                 (see -regress_apply_mot_types)

           Note: for resting state data, a more strict threshold may be a good
                 idea, since motion artifacts should play a bigger role than in
                 a task-based analysis.

                 So the typical suggestion of motion censoring at 0.3 for task
                 based analysis has been changed to 0.2 for this resting state
                 example, and censoring of outliers has also been added, at a
                 value of 5% of the brain mask.

                 Outliers are typically due to motion, and may capture motion
                 in some cases where the motion parameters do not, because
                 motion is not generally a whole-brain-between-TRs event.

           Note: if regressing out regions of interest, either create the ROI
                 time series before the blur step, or remove blur from the list
                 of blocks (and apply any desired blur after the regression).

           Note: it might be reasonable to estimate the blur using epits rather
                 than errts in the case of bandpassing.  Both options are
                 included here.

           Note: scaling is optional here.  While scaling has no direct effect
                 on voxel correlations, it does have an effect on ROI averages
                 used for correlations.

           Other options to consider: -tlrc_NL_warp, -anat_uniform_method
            
        --------------------------
        last mod date : 2019.02.26
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -tcat_remove_first_trs    3                                      \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 9b. Resting state analysis with ANATICOR. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. has band pass, no @SSwarper)
              (              prefer: see Example 11)

           Like example #9, but also regress out the signal from locally
           averaged white matter.  The only change is adding the option
           -regress_anaticor.

           Note that -regress_anaticor implies options -mask_segment_anat and
           -mask_segment_erode.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -tcat_remove_first_trs    3                                      \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_anaticor                                                \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 10. Resting state analysis, with tissue-based regressors. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. missing @SSwarper)
              (              prefer: see Example 11)

           Like example #9, but also regress the eroded white matter averages.
           The WMe mask come from the Classes dataset, created by 3dSeg via the
           -mask_segment_anat and -mask_segment_erode options.

        ** While -mask_segment_anat also creates a CSF mask, that mask is ALL
           CSF, not just restricted to the ventricles, for example.  So it is
           probably not appropriate for use in tissue-based regression.

           CSFe was previously used as an example of what one could do, but as
           it is not advised, it has been removed.

           Also, align to minimum outlier volume, and align to the anatomy
           using cost function lpc+ZZ.

           Note: it might be reasonable to estimate the blur using epits rather
                 than errts in the case of bandpassing.  Both options are
                 included here.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -tcat_remove_first_trs    3                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -blur_size                4                                      \
            -mask_epi_anat            yes                                    \
            -mask_segment_anat        yes                                    \
            -mask_segment_erode       yes                                    \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_ROI              WMe                                    \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 10b. Resting state analysis, as 10a with 3dRSFC. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              prefer: see Example 11)
              (         ***        : use censoring and 3dLombScargle)

            This is for band passing and computation of ALFF, etc.

          * This will soon use a modified 3dRSFC.

            Like example #10, but add -regress_RSFC to bandpass via 3dRSFC.
            Skip censoring and regression band passing because of the bandpass
            operation in 3dRSFC.

            To correspond to common tractography, this example stays in orig
            space (no 'tlrc' block, no -volreg_tlrc_warp option).  Of course,
            going to standard space is an option.
            
        --------------------------
        last mod date : 2019.02.13
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align volreg blur mask  \
                                      scale regress                          \
            -tcat_remove_first_trs    3                                      \
            -volreg_align_e2a                                                \
            -blur_size                6.0                                    \
            -mask_apply               epi                                    \
            -mask_segment_anat        yes                                    \
            -mask_segment_erode       yes                                    \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_ROI              WMe                                    \
            -regress_RSFC                                                    \
            -regress_run_clustsim     no                                     \
            -regress_est_blur_errts
 

        Example 11. Resting state analysis (now even more modern :). ~2~

              (recommended?  yes, reasonable for a complete analysis)

         o Yes, censor (outliers and motion) and despike.
         o Align the anatomy and EPI using the lpc+ZZ cost function, rather
           than the default lpc one.  Apply -giant_move, in case the datasets
           do not start off well-aligned.  Include -check_flip for good measure.
           A locally unifized EPI base is used for anatomical registration.
         o Register EPI volumes to the one which has the minimum outlier
              fraction (so hopefully the least motion).
         o Use non-linear registration to MNI template (non-linear 2009c).
           * This adds a lot of processing time.
           * Let @SSwarper align to template MNI152_2009_template_SSW.nii.gz.
             Then use the resulting datasets in the afni_proc.py command below
             via -tlrc_NL_warped_dsets.
                  @SSwarper -input FT_anat+orig        \
                            -subid FT                  \
                            -odir  FT_anat_warped      \
                            -base  MNI152_2009_template_SSW.nii.gz

            - The SS (skull-stripped) can be given via -copy_anat, and the
              with-skull unifized anatU can be given as a follower.
         o No bandpassing.
         o Use fast ANATICOR method (slightly different from default ANATICOR).
         o Use FreeSurfer segmentation for:
             - regression of first 3 principal components of lateral ventricles
             - ANATICOR white matter mask (for local white matter regression)
           * For details on how these masks were created, see "FREESURFER NOTE"
             in the help, as it refers to this "Example 11".
         o Erode FS white matter and ventricle masks before application.
         o Bring along FreeSurfer parcellation datasets:
             - aaseg : NN interpolated onto the anatomical grid
             - aeseg : NN interpolated onto the EPI        grid
           * These 'aseg' follower datasets are just for visualization,
             they are not actually required for the analysis.
         o Compute average correlation volumes of the errts against the
           the gray matter (aeseg) and ventricle (FSVent) masks.
         o Run @radial_correlate at the ends of the tcat, volreg and regress
           blocks.  If ANATICOR is being used to remove a scanner artifact,
           the errts radcor images might show the effect of this.

           Note: it might be reasonable to use either set of blur estimates
                 here (from epits or errts).  The epits (uncleaned) dataset
                 has all of the noise (though what should be considered noise
                 in this context is not clear), while the errts is motion
                 censored.  For consistency in resting state, it would be
                 reasonable to stick with epits.  They will likely be almost
                 identical.
            
        --------------------------
        last mod date : 2022.10.06
        keywords      : complete, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.11.rest                             \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -radial_correlate_blocks  tcat volreg regress                    \
            -copy_anat                anatSS.FT.nii                          \
            -anat_has_skull           no                                     \
            -anat_follower            anat_w_skull anat anatU.FT.nii         \
            -anat_follower_ROI        aaseg anat                             \
                                      aparc.a2009s+aseg_REN_all.nii.gz       \
            -anat_follower_ROI        aeseg epi                              \
                                      aparc.a2009s+aseg_REN_all.nii.gz       \
            -anat_follower_ROI        FSvent epi fs_ap_latvent.nii.gz        \
            -anat_follower_ROI        FSWe epi fs_ap_wm.nii.gz               \
            -anat_follower_erode      FSvent FSWe                            \
            -dsets                    FT_epi_r?+orig.HEAD                    \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template_SSW.nii.gz        \
            -tlrc_NL_warp                                                    \
            -tlrc_NL_warped_dsets     anatQQ.FT.nii anatQQ.FT.aff12.1D       \
                                      anatQQ.FT_WARP.nii                     \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_anaticor_fast                                           \
            -regress_anaticor_label   FSWe                                   \
            -regress_ROI_PC           FSvent 3                               \
            -regress_ROI_PC_per_run   FSvent                                 \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_make_corr_vols   aeseg FSvent                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -html_review_style        pythonic
 

        Example 11b. Similar to 11, but without FreeSurfer. ~2~

              (recommended?  yes, reasonable for a complete analysis)
              (              if this ventricle extraction method seems okay)

         AFNI currently does not have a good program to extract ventricles.
         But it can make a CSF mask that includes them.  So without FreeSurfer,
         one could import a ventricle mask from the template (e.g. for TT space,
         using TT_desai_dd_mpm+tlrc).  For example, assuming Talairach space
         (and a 2.5 mm^3 final voxel grid) for the analysis, one could create a
         ventricle mask as follows:

                3dcalc -a ~/abin/TT_desai_dd_mpm+tlrc                       \
                       -expr 'amongst(a,152,170)' -prefix template_ventricle
                3dresample -dxyz 2.5 2.5 2.5 -inset template_ventricle+tlrc \
                       -prefix template_ventricle_2.5mm

         o Be explicit with 2.5mm, using '-volreg_warp_dxyz 2.5'.
         o Use template TT_N27+tlrc, to be aligned with the desai atlas.
         o No -anat_follower options, but use -mask_import to import the
           template_ventricle_2.5mm dataset (and call it Tvent).
         o Use -mask_intersect to intersect ventricle mask with the subject's
           CSFe mask, making a more reliable subject ventricle mask (Svent).
         o Ventricle principle components are created as per-run regressors.
         o Make WMe and Svent correlation volumes, which are just for
           entertainment purposes anyway.
         o Run the cluster simulation.
            
        --------------------------
        last mod date : 2020.01.17
        keywords      : complete, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.11b.rest                            \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -copy_anat                FT_anat+orig                           \
            -dsets                    FT_epi_r?+orig.HEAD                    \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                TT_N27+tlrc                            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_warp_dxyz         2.5                                    \
            -blur_size                4                                      \
            -mask_segment_anat        yes                                    \
            -mask_segment_erode       yes                                    \
            -mask_import              Tvent template_ventricle_2.5mm+tlrc    \
            -mask_intersect           Svent CSFe Tvent                       \
            -mask_epi_anat            yes                                    \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_anaticor_fast                                           \
            -regress_ROI_PC           Svent 3                                \
            -regress_ROI_PC_per_run   Svent                                  \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_make_corr_vols   WMe Svent                              \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     yes
 

        Example 12. background: Multi-echo data processing. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              incomplete - just shows basic ME options)
              (              prefer: see Example 13)

         Processing multi-echo data should be similar to single echo data,
         except for perhaps:

            combine         : the addition of a 'combine' block
            -dsets_me_echo  : specify ME data, per echo
            -dsets_me_run   : specify ME data, per run (alternative to _echo)
            -echo_times     : specify echo times (if needed)
            -combine_method : specify method to combine echoes (if any)

         An afni_proc.py command might be updated to include something like:
            
        --------------------------
        last mod date : 2018.02.27
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -blocks          tshift align tlrc volreg mask combine blur      \
                             scale regress                                   \
            -dsets_me_echo   epi_run*_echo_01.nii                            \
            -dsets_me_echo   epi_run*_echo_02.nii                            \
            -dsets_me_echo   epi_run*_echo_03.nii                            \
            -echo_times      15 30.5 41                                      \
            -mask_epi_anat   yes                                             \
            -combine_method  OC
 

        Example 12a. Multi-echo data processing - very simple. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)
              (              prefer: see Example 13)

         Keep it simple and just focus on the basic ME options, plus a few
         for controlling registration.

         o This example uses 3 echoes of data across just 1 run.
            - so use a single -dsets_me_run option to input EPI datasets
         o Echo 2 is used to drive registration for all echoes.
            - That is the default, but it is good to be explicit.
         o The echo times are not needed, as the echoes are never combined.
         o The echo are never combined (in this example), so that there
           are always 3 echoes, even until the end.
            - Note that the 'regress' block is not valid for multiple echoes.
            
        --------------------------
        last mod date : 2018.02.27
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                FT.12a.ME                                \
            -blocks                 tshift align tlrc volreg mask blur       \
            -copy_anat              FT_anat+orig                             \
            -dsets_me_run           epi_run1_echo*.nii                       \
            -reg_echo               2                                        \
            -tcat_remove_first_trs  2                                        \
            -volreg_align_to        MIN_OUTLIER                              \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp
 

        Example 12b. Multi-echo data processing - OC resting state. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)
              (              prefer: see Example 13)

         Still keep this simple, mostly focusing on ME options, plus standard
         ones for resting state.

         o This example uses 3 echoes of data across just 1 run.
            - so use a single -dsets_me_run option to input EPI datasets
         o Echo 2 is used to drive registration for all echoes.
            - That is the default, but it is good to be explicit.
         o The echoes are combined via the 'combine' block.
         o So -echo_times is used to provided them.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.12a.ME                              \
            -blocks                   tshift align tlrc volreg mask combine  \
                                      blur scale regress                     \
            -copy_anat                FT_anat+orig                           \
            -dsets_me_run             epi_run1_echo*.nii                     \
            -echo_times               15 30.5 41                             \
            -reg_echo                 2                                      \
            -tcat_remove_first_trs    2                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -combine_method           OC                                     \
            -blur_size                4                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits
 

        Example 12c. Multi-echo data processing - ME-ICA resting state. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)
              (              prefer: see Example 13)

         As above, but run tedana.py for MEICA denoising.

         o Since tedana.py will mask the data, it may be preferable to
           blur only within that mask (-blur_in_mask yes).
         o A task analysis using tedana might look much the same,
           but with the extra -regress options for the tasks.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.12a.ME                              \
            -blocks                   tshift align tlrc volreg mask combine  \
                                      blur scale regress                     \
            -copy_anat                FT_anat+orig                           \
            -dsets_me_run             epi_run1_echo*.nii                     \
            -echo_times               15 30.5 41                             \
            -reg_echo                 2                                      \
            -tcat_remove_first_trs    2                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -combine_method           tedana                                 \
            -blur_size                4                                      \
            -blur_in_mask             yes                                    \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits

         Consider an alternative combine method, 'tedana_OC_tedort'.
           

        Example 13. Complicated ME, surface-based resting state example. ~2~

              (recommended?  yes, reasonable for a complete analysis)

         Example 'publish 3d' might be preferable.

         Key aspects of this example:

            - multi-echo data, using "optimally combined" echoes
            - resting state analysis (without band passing)
            - surface analysis
            - blip up/blip down distortion correction
            - slice-wise regression of physiological parameters (RETROICOR)
            - ventricle principal component regression (3 PCs)
            - EPI volreg to per-run MIN_OUTLIER, with across-runs allineate
            - QC: @radial_correlate on tcat and volreg block results
            - QC: pythonic html report

            * since this is a surface-based example, the are no tlrc options

         Minor aspects:

            - a FWHM=6mm blur is applied, since blur on surface is TO is size

         Note: lacking good sample data for this example, it is simply faked
               for demonstration (echoes are identical, fake ricor parameters
               are not part of this data tree).
            
        --------------------------
        last mod date : 2019.09.06
        keywords      : complete, ME, physio, rest, surface
        --------------------------

        afni_proc.py                                                         \
            -subj_id                   FT.complicated                        \
            -dsets_me_echo             FT/FT_epi_r?+orig.HEAD                \
            -dsets_me_echo             FT/FT_epi_r?+orig.HEAD                \
            -dsets_me_echo             FT/FT_epi_r?+orig.HEAD                \
            -echo_times                11 22.72 34.44                        \
            -blip_forward_dset         'FT/FT_epi_r1+orig.HEAD[0]'           \
            -blip_reverse_dset         'FT/FT_epi_r1+orig.HEAD[0]'           \
            -copy_anat                 FT/FT_anat+orig                       \
            -anat_follower_ROI         FSvent epi FT/SUMA/FT_vent.nii        \
            -anat_follower_erode       FSvent                                \
            -blocks                    despike ricor tshift align volreg     \
                                       mask combine surf blur scale regress  \
            -radial_correlate_blocks   tcat volreg                           \
            -tcat_remove_first_trs     2                                     \
            -ricor_regs_nfirst         2                                     \
            -ricor_regs                FT/fake.slibase.FT.r?.1D              \
            -ricor_regress_method      per-run                               \
            -tshift_interp             -wsinc9                               \
            -align_unifize_epi         local                                 \
            -align_opts_aea            -cost lpc+ZZ                          \
                                       -giant_move                           \
            -volreg_align_to           MIN_OUTLIER                           \
            -volreg_align_e2a                                                \
            -volreg_post_vr_allin      yes                                   \
            -volreg_pvra_base_index    MIN_OUTLIER                           \
            -volreg_warp_final_interp  wsinc5                                \
            -mask_epi_anat             yes                                   \
            -combine_method            OC                                    \
            -surf_anat                 FT/SUMA/FT_SurfVol.nii                \
            -surf_spec                 FT/SUMA/std.141.FT_?h.spec            \
            -blur_size                 6                                     \
            -regress_apply_mot_types   demean deriv                          \
            -regress_motion_per_run                                          \
            -regress_ROI_PC            FSvent 3                              \
            -regress_ROI_PC_per_run    FSvent                                \
            -regress_make_corr_vols    FSvent                                \
            -regress_censor_motion     0.2                                   \
            -regress_censor_outliers   0.05                                  \
            -html_review_style         pythonic
 

        AP class 3. s03.ap.surface - basic surface analysis ~2~

              (recommended?  yes, reasonable for a complete analysis)
                             (though it is a very simple example)

           This is the surface analysis run during an AFNI bootcamp.
            
        --------------------------
        last mod date : 2022.11.23
        keywords      : complete, surface, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 FT.surf                                 \
            -dsets                   FT/FT_epi_r?+orig.HEAD                  \
            -copy_anat               FT/FT_anat+orig                         \
            -blocks                  tshift align volreg surf blur scale     \
                                     regress                                 \
            -tcat_remove_first_trs   2                                       \
            -align_unifize_epi       local                                   \
            -align_opts_aea          -cost lpc+ZZ                            \
                                     -giant_move                             \
                                     -check_flip                             \
            -volreg_align_to         MIN_OUTLIER                             \
            -volreg_align_e2a                                                \
            -surf_anat               FT/SUMA/FT_SurfVol.nii                  \
            -surf_spec               FT/SUMA/std.60.FT_?h.spec               \
            -blur_size               6                                       \
            -regress_stim_times      FT/AV1_vis.txt FT/AV2_aud.txt           \
            -regress_stim_labels     vis aud                                 \
            -regress_basis           'BLOCK(20,1)'                           \
            -regress_opts_3dD        -jobs 2                                 \
                                     -gltsym 'SYM: vis -aud'                 \
                                     -glt_label 1 V-A                        \
            -regress_motion_per_run                                          \
            -regress_censor_motion   0.3
 

        AP class 5. s05.ap.uber - basic task analysis ~2~

              (recommended?  no, not intended for a complete analysis)
              (              prefer: see Example 6b)

           A basic task analysis with a pair of visual and auditory tasks.

           notable options include :
                - affine registration to the (default) TT_N27+tlrc template
                - censoring based on both motion params and outliers
                - '-regress_compute_fitts' to reduce RAM needs in 3dD
                - mask_epi_anat - intersect full_mask (epi) with mask_anat
                - QC: computing radial correlation volumes at the end
                      of the tcat (initial) and volreg processing blocks
                - QC: include -check_flip left/right consistency check
                - QC: compute sum of ideals, for evaluation
            
        --------------------------
        last mod date : 2024.08.29
        keywords      : task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT                                     \
            -dsets                    FT/FT_epi_r1+orig.HEAD                 \
                                      FT/FT_epi_r2+orig.HEAD                 \
                                      FT/FT_epi_r3+orig.HEAD                 \
            -copy_anat                FT/FT_anat+orig                        \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4.0                                    \
            -regress_stim_times       FT/AV1_vis.txt FT/AV2_aud.txt          \
            -regress_stim_labels      vis aud                                \
            -regress_basis            'BLOCK(20,1)'                          \
            -regress_opts_3dD         -jobs 2                                \
                                      -gltsym 'SYM: vis -aud'                \
                                      -glt_label 1 V-A                       \
                                      -gltsym 'SYM: 0.5*vis +0.5*aud'        \
                                      -glt_label 2 mean.VA                   \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_compute_fitts                                           \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     no                                     \
            -execute
 

        AP demo 1a. for QC, ap_run_simple_rest.tcsh with EPI and anat ~2~

              (recommended?  yes, for quick quality control)

         This example was generated by running ap_run_simple_rest.tcsh,
         providing a single subject anat and (3 runs of) EPI.  It could
         be generated (and run) using the following:

            cd AFNI_data6/FT_analysis/FT
            ap_run_simple_rest.tcsh -subjid FT -run_proc \
              -anat FT_anat+orig -epi FT_epi_r*.HEAD

         This is highly recommended as a tool for quick quality control to be
         run on all EPI data right out of the scanner.  It is fine to run on
         task data, but without worrying about the actual task regression.

            
        --------------------------
        last mod date : 2024.02.20
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT                                     \
            -dsets                    FT/FT_epi_r1+orig.HEAD                 \
                                      FT/FT_epi_r2+orig.HEAD                 \
                                      FT/FT_epi_r3+orig.HEAD                 \
            -copy_anat                FT_anat+orig                           \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg regress                    \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template_SSW.nii.gz        \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_compute_tsnr      yes                                    \
            -mask_epi_anat            yes                                    \
            -blur_size                6                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.25                                   \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -html_review_style        pythonic
 

        AP demo 1b. for QC, ap_run_simple_rest.tcsh with no anat ~2~

              (recommended?  yes, for quick quality control of EPI)

         This example was generated by running ap_run_simple_rest.tcsh,
         providing only 3 runs of EPI data.  It could be generated (and run)
         using the following:

            cd AFNI_data6/FT_analysis/FT
            ap_run_simple_rest.tcsh -subjid FT -run_proc -epi FT_epi_r*.HEAD

         No anatomical volume is included, excluding many options from
         example simple_rest_QC.

            
        --------------------------
        last mod date : 2022.11.23
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT                                     \
            -script                   proc.FT                                \
            -out_dir                  FT.results                             \
            -dsets                    FT/FT_epi_r1+orig.HEAD                 \
                                      FT/FT_epi_r2+orig.HEAD                 \
                                      FT/FT_epi_r3+orig.HEAD                 \
            -blocks                   tshift volreg mask blur scale regress  \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_compute_tsnr      yes                                    \
            -blur_size                6                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.25                                   \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -html_review_style        pythonic
 

        AP demo 1c. for QC, ap_run_simple_rest_me.tcsh with ME EPI and anat ~2~

              (recommended?  yes, for quick quality control)

         This example was generated by running ap_run_simple_rest_me.tcsh,
         providing a single subject anat, EPI (1 run of 3 echoes), and
         the 3 echo times.

         It could be generated using the following, where the dataset names
         have been slightly truncated to save screen space:

            cd data_00_basic/sub-005/ses-01
            ap_run_simple_rest_me.tcsh                                  \
                -run_ap                                                 \
                -subjid      sub-005                                    \
                -nt_rm       4                                          \
                -anat        anat/sub-005*mprage_run-1_T1w.nii.gz       \
                -epi_me_run  func/sub-005*rest*bold.nii.gz              \
                -echo_times  12.5 27.6 42.7                             \
                -template    MNI152_2009_template_SSW.nii.gz

         This is highly recommended as a tool for quick quality control to be
         run on all EPI data right out of the scanner.

            
        --------------------------
        last mod date : 2024.08.09
        keywords      : rest, ME
        --------------------------

        afni_proc.py                                                         \
            -subj_id                   sub-005                               \
            -dsets_me_run              func/sub-005_rest_r1_e1_bold.nii.gz   \
                                       func/sub-005_rest_r1_e2_bold.nii.gz   \
                                       func/sub-005_rest_r1_e3_bold.nii.gz   \
            -echo_times                12.5 27.6 42.7                        \
            -reg_echo                  2                                     \
            -copy_anat                 anat/sub-005_mprage_run-1_T1w.nii.gz  \
            -blocks                    tshift align tlrc volreg mask combine \
                                       blur scale regress                    \
            -radial_correlate_blocks   tcat volreg regress                   \
            -tcat_remove_first_trs     4                                     \
            -tshift_interp             -wsinc9                               \
            -align_unifize_epi         local                                 \
            -align_opts_aea            -cost lpc+ZZ                          \
                                       -giant_move                           \
                                       -check_flip                           \
            -tlrc_base                 MNI152_2009_template_SSW.nii.gz       \
            -volreg_align_to           MIN_OUTLIER                           \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_warp_final_interp  wsinc5                                \
            -volreg_compute_tsnr       yes                                   \
            -mask_epi_anat             yes                                   \
            -combine_method            OC                                    \
            -blur_size                 4                                     \
            -regress_apply_mot_types   demean deriv                          \
            -regress_motion_per_run                                          \
            -regress_censor_motion     0.25                                  \
            -regress_censor_outliers   0.05                                  \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_make_

... Output truncated due to size limit ...

=== Output of 'afni_proc.py' (no arguments) ===


===========================================================================
afni_proc.py        - generate a tcsh script for an AFNI process stream

Purpose: ~1~

   This program is meant to create single subject processing scripts for
   task, resting state or surface-based analyses.  The processing scripts
   are written in the tcsh language.

   The typical goal is to create volumes of aligned response magnitudes
   (stimulus beta weights) to use as input for a group analysis.

Inputs (only EPI is required): ~1~

   - anatomical dataset
   - EPI time series datasets
   - stimulus timing files
   - processing and design decisions:
       e.g. TRs to delete, blur size, censoring options, basis functions

Main outputs (many datasets are created): ~1~

   - for task-based analysis: stats dataset (and anat_final)
   - for resting-state analysis: errts datasets ("cleaned up" EPI)

Basic script outline: ~1~

   - copy all inputs to new 'results' directory
   - process data: e.g. despike,tshift/align/tlrc/volreg/blur/scale/regress
   - leave all (well, most) results there, so user can review processing
   - create quality control data (APQC HTML page, ss_review_scripts, etc.)

The exact processing steps are controlled by the user, including which main
processing blocks to use, and their order.  See the 'DEFAULTS' section for
a description of the default options for each block.

The output script (when executed) would create a results directory, copy
input files into it, and perform all processing there.  So the user can
delete the results directory and modify/re-run the script at their whim.

Note that the user need not actually run the output script.  The user
should feel free to modify the script for their own evil purposes, or to
just compare the processing steps with those in their own scripts.  Also,
even if a user is writing their own processing scripts, it is a good idea
to get some independent confirmation of the processing, such as by using
afni_proc.py to compare the results on occasion.

The text interface can be accessed via the -ask_me option.  It invokes a
question & answer session, during which this program sets user options on
the fly.  The user may elect to enter some of the options on the command
line, even if using -ask_me.  See "-ask_me EXAMPLES", below.

** However, -ask_me has not been touched in many years.  I suggest starting
   with the 'modern' examples (for task/rest/surface), or by using the
   uber_subject.py GUI (graphical user interface) to generate an initial
   afni_proc.py command script.

   See uber_subject.py -help (or just start the GUI) for details.

==================================================
SECTIONS: order of sections in the "afni_proc.py -help" output ~1~

    program introduction    : (above) basic overview of afni_proc.py
    SETTING UP AN ANALYSIS  : a guide for getting started
    PROCESSING BLOCKS       : list of possible processing blocks
    DEFAULTS                : basic default operations, per block
    EXAMPLES                : various examples of running this program
    NOTE sections           : details on various topics
        GENERAL ANALYSIS NOTE, QUALITY CONTROL NOTE,
        RESTING STATE NOTE, FREESURFER NOTE,
        TIMING FILE NOTE, MASKING NOTE,
        ANAT/EPI ALIGNMENT CASES NOTE, ANAT/EPI ALIGNMENT CORRECTIONS NOTE,
        WARP TO TLRC NOTE,
        RETROICOR NOTE, MULTI ECHO NOTE,
        RUNS OF DIFFERENT LENGTHS NOTE, SCRIPT EXECUTION NOTE
    OPTIONS                 : descriptions of all program options
        informational       : options to get quick info and quit
        general execution   : options not specific to a processing block
        block options       : specific to blocks, in default block order

==================================================
SETTING UP AN ANALYSIS: ~1~

For those new to using afni_proc.py, it is very helpful to start with an
example that is similar to what you want to do, generally taken from the help
examples (afni_proc.py -show_example_names) or prior publication.

Once satisfied with a single application of afni_proc.py, one would then loop
over subjects by running afni_proc.py on each, using subject variables to refer
to the individual set of input data and the output subject ID.

Starting up, there is a general set of choices that is good to consider:

   a. type of analysis:    task or rest/naturalistic
   b. domain of analysis:  volume or surface (possibly either as ROI)
   c. main input data:     anat, EPI runs (single or multi-echo), task timing,
                           surfaces and surface anatomical
   d. extra input data:    NL distortion warp, NL template warp, blip dsets,
                           ROI imports, anat followers, physio regressors,
                           external registration base (for volreg or anat),
                           external motion files, censor list, extra regressors
   e. processing blocks:   main EPI processing blocks and their order
                         - see "PROCESSING BLOCKS"
   f. optional processing: physio regression, tedana, ANATICOR, ROI regression,
                           bandpassing
   g. main options:        template, blur level (if any), censor levels,
                           EPI/anat cost and other alignment options
   h. other options:       there are many, e.g.: motion regressors, bandpass,
                           ANATICOR, and many that are specific to QC

   ----------

   a. type of analysis

      For a task analysis, one provides stimulus timing files and corresponding
      modeling options.  This is a large topic that centers on the use of
      3dDeconvolve.

      Options for task analysis generally start with -regress, as they pertain
      to the regress block.  However one generally includes a regress block in
      any analysis (even partial ones, such as for alignment), as it is the
      gateway to the APQC HTML report.

   b. domain of analysis

      For a surface analysis, one provides a SUMA spec file per hemisphere,
      along with a surface anatomical dataset.  Mapping from the volume to the
      surface generally happens soon after all volumetric registration is done,
      and importantly, before any blur block.  Restricting blurring to the
      surface is one of the reasons to perform such an analysis.

      In a surface analysis, no volumetric template or tlrc options are given.
      Surface analysis is generally performed on SUMA's standard meshes, though
      it need not be.

      An ROI analysis is generally performed as a typical volume or surface
      analysis, but without any applied blurring (which effectively happens
      later, when averaging over the ROIs).

   c. main input data

      EPI datasets are required, for one or more runs and one or more echoes.
      Anything else is optional.

      Typically one also includes a subject anatomy, any task timing files, and
      surface datasets (spec files an anatomy) if doing a surface analysis.

   d. extra input data

      It is common to supply a non-linear transformation warp dataset (from
      sswarper) to apply for anatomy->template alignment.  One might also have
      a pre-computed non-linear B0 distortion map or reverse phase encoding
      (blip) dataset, ROIs or other anatomical followers or physiological
      regressors.  An EPI base dataset might be provided to align the EPI to,
      and possibly one to guide alignment to the subject anatomical dataset.

      Precomputed motion parameter files could be provided (if skipping the
      volreg block), as well as an external censor time series or precomputed
      regressors (of interest or not).

      These extra inputs will affect use of other options.

   e. processing blocks

      As described in the "PROCESSING BLOCKS" section, one can specify an
      ordered list of main processing blocks.  The order of the listed blocks
      will determine their order in the processing script.  Of course, for a
      given set of blocks, there is typically a preferred order.

      Options specific to one block will generally start with that block name.
      For example, the -regress_* options apply to the regress block.

      It is logically clear (but not necessary) to provide block options in the
      same chronological order as the blocks.

   f. optional processing

      Optional processing might include things like:
        - physiological noise regression, based on use of physio_calc.py
        - tedana, or a variant, for use in combining multi-echo time series
        - ANATICOR (local white matter regression)
        - ROI regression (averages or principle components)
        - bandpassing (low pass, high pass, or single or multiple bands)

   g. main options

      One typically provides:
        - a template (and accompanying non-linear anat to template
          transformation datasets)
        - an amount to blur (or a choice to not blur, as would apply to an ROI
          analysis), or a level to blur _to_
        - censor levels (for outliers or the Euclidean norm of the motion
          parameters)
        - alignment options, such as the cost function for align_epi_anat.py
          and a local EPI unifize option - there are many options to control
          many aspects of registration
        - many quality control options are also considered appropriate for
          consistent use

   h. other options

      Each step of processing has many control options around it.  It is
      important to think through what might be appropriate for the data in
      question.

      No one analysis fits all data.

      Quality control "options" are not really considered optional.

==================================================
PROCESSING BLOCKS (of the output script): ~1~

The output script will go through the following steps, unless the user
specifies otherwise.

automatic blocks (the tcsh script will always perform these): ~2~

    setup       : check subject arg, set run list, create output dir, and
                  copy stim files
    tcat        : copy input datasets and remove unwanted initial TRs

default blocks (the user may skip these, or alter their order): ~2~

    tshift      : slice timing alignment on volumes (default is -time 0)
    volreg      : volume registration (default to third volume)
    blur        : blur each volume (default is 4mm fwhm)
    mask        : create a 'brain' mask from the EPI data
    scale       : scale each run mean to 100, for each voxel (max of 200)
    regress     : regression analysis (default is GAM, peak 1, with motion
                  params)

optional blocks (the default is to _not_ apply these blocks) ~2~

    align       : align EPI anat anatomy (via align_epi_anat.py)
    combine     : combine echoes into one
    despike     : truncate spikes in each voxel's time series
    empty       : placeholder for some user command (uses 3dTcat as sample)
    ricor       : RETROICOR - removal of cardiac/respiratory regressors
    surf        : project volumetric data into the surface domain
    tlrc        : warp anat to a standard space/specified template

implicit blocks (controlled by program, added when appropriate) ~2~

    blip        : perform B0 distortion correction
    outcount    : temporal outlier detection
    QC review   : generate QC review scripts and HTML report
    anat_unif   : anatomical uniformity correction

==================================================
DEFAULTS: basic defaults for each block (blocks listed in default order) ~1~

    A : denotes automatic block that is not a 'processing' option
    D : denotes a default processing block (others must be requested)

A   setup:    - use 'SUBJ' for the subject id
                    (option: -subj_id SUBJ)
              - create a t-shell script called 'proc_subj'
                    (option: -script proc_subj)
              - use results directory 'SUBJ.results'
                    (option: -out_dir SUBJ.results)

A   tcat:     - do not remove any of the first TRs

    despike:  - NOTE: by default, this block is _not_ used
              - automasking is not done (requires -despike_mask)

    ricor:    - NOTE: by default, this block is _not_ used
              - polort based on twice the actual run length
              - solver is OLSQ, not REML
              - do not remove any first TRs from the regressors

D   tshift:   - align slices to the beginning of the TR
              - use quintic interpolation for time series resampling
                    (option: -tshift_interp -quintic)

    align:    - align the anatomy to match the EPI
                (also required for the option of aligning EPI to anat)

    tlrc:     - use TT_N27+tlrc as the base (-tlrc_base TT_N27+tlrc)
              - no additional suffix (-tlrc_suffix NONE)
              - use affine registration (no -tlrc_NL_warp)

D   volreg:   - align to third volume of first run, -zpad 1
                    (option: -volreg_align_to third)
                    (option: -volreg_zpad 1)
              - use cubic interpolation for volume resampling
                    (option: -volreg_interp -cubic)
              - apply motion params as regressors across all runs at once
              - do not align EPI to anat
              - do not warp to standard space

    combine:  - combine methods using OC (optimally combined)

D   blur:     - blur data using a 4 mm FWHM filter with 3dmerge
                    (option: -blur_filter -1blur_fwhm)
                    (option: -blur_size 4)
                    (option: -blur_in_mask no)

D   mask:     - create a union of masks from 3dAutomask on each run
              - not applied in regression without -regress_apply_mask
              - if possible, create a subject anatomy mask
              - if possible, create a group anatomy mask (tlrc base)

D   scale:    - scale each voxel to mean of 100, clip values at 200

D   regress:  - use GAM regressor for each stim
                    (option: -regress_basis)
              - compute the baseline polynomial degree, based on run length
                    (e.g. option: -regress_polort 2)
              - do not censor large motion
              - output fit time series
              - output ideal curves for GAM/BLOCK regressors
              - output iresp curves for non-GAM/non-BLOCK regressors

    empty:    - do nothing (just copy the data using 3dTcat)


==================================================
EXAMPLES (options can be provided in any order): ~1~

        Example 1. Minimum use. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              merely shows how simple a command can be)

           Provide datasets and stim files (or stim_times files).  Note that a
           dataset suffix (e.g. HEAD) must be used with wildcards, so that
           datasets are not applied twice.  In this case, a stim_file with many
           columns is given, where the script to changes it to stim_times files.
           
        --------------------------
        last mod date : 2008.12.10
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -dsets               epiRT*.HEAD                                 \
            -regress_stim_files  stims.1D
 

        Example 2. Very simple. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)

           Use all defaults, except remove 3 TRs and use basis
           function BLOCK(30,1).  The default basis function is GAM.
            
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                sb23.e2.simple                           \
            -dsets                  sb23/epi_r??+orig.HEAD                   \
            -tcat_remove_first_trs  3                                        \
            -regress_stim_times     sb23/stim_files/blk_times.*.1D           \
            -regress_basis          'BLOCK(30,1)'
 

        Example 3. Formerly a simple class example. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)

           Copy the anatomy into the results directory, register EPI data to
           the last TR, specify stimulus labels, compute blur estimates, and
           provide GLT options directly to 3dDeconvolve.  The GLTs will be
           ignored after this, as they take up too many lines.
            
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.blk                                \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -copy_anat               sb23/sb23_mpra+orig                     \
            -tcat_remove_first_trs   3                                       \
            -volreg_align_to         last                                    \
            -regress_stim_times      sb23/stim_files/blk_times.*.1D          \
            -regress_stim_labels     tneg tpos tneu eneg epos eneu fneg fpos \
                                     fneu                                    \
            -regress_basis           'BLOCK(30,1)'                           \
            -regress_opts_3dD        -gltsym 'SYM: +eneg -fneg'              \
                                     -glt_label 1 eneg_vs_fneg               \
                                     -gltsym                                 \
                                     'SYM: 0.5*fneg 0.5*fpos -1.0*fneu'      \
                                     -glt_label 2 face_contrast              \
                                     -gltsym                                 \
                                     'SYM: tpos epos fpos -tneg -eneg -fneg' \
                                     -glt_label 3 pos_vs_neg                 \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 4. Similar to 3, but specify the processing blocks. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)

           Adding despike and tlrc, and removing tshift.  Note that
           the tlrc block is to run @auto_tlrc on the anat.  Ignore the GLTs.
           
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.e4.blocks                          \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -blocks                  despike volreg blur mask scale regress  \
                                     tlrc                                    \
            -copy_anat               sb23/sb23_mpra+orig                     \
            -tcat_remove_first_trs   3                                       \
            -regress_stim_times      sb23/stim_files/blk_times.*.1D          \
            -regress_stim_labels     tneg tpos tneu eneg epos eneu fneg fpos \
                                     fneu                                    \
            -regress_basis           'BLOCK(30,1)'                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 5a. RETROICOR, resting state data. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              just a terribly simple example using ricor)

           Assuming the class data is for resting-state and that we have the
           appropriate slice-based regressors from RetroTS.py, apply the
           despike and ricor processing blocks.  Note that '-do_block' is used
           to add non-default blocks into their default positions.  Here the
           'despike' and 'ricor' processing blocks would come before 'tshift'.

           Remove 3 TRs from the ricor regressors to match the EPI data.  Also,
           since degrees of freedom are not such a worry, regress the motion
           parameters per-run (each run gets a separate set of 6 regressors).

           The regression will use 81 basic regressors (all of "no interest"),
           with 13 retroicor regressors being removed during preprocessing:

                 27 baseline  regressors ( 3 per run * 9 runs)
                 54 motion    regressors ( 6 per run * 9 runs)

           To example #3, add -do_block, -ricor_* and -regress_motion_per_run.
           
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, physio, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.e5a.ricor                          \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -do_block                despike ricor                           \
            -tcat_remove_first_trs   3                                       \
            -ricor_regs_nfirst       3                                       \
            -ricor_regs              sb23/RICOR/r*.slibase.1D                \
            -regress_motion_per_run

           If tshift, blurring and masking are not desired, consider replacing
           the -do_block option with an explicit list of blocks:

                -blocks despike ricor volreg regress
           

        Example 5b. RETROICOR, while running a normal regression. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              another overly simple example using ricor)

           Add the ricor regressors to a normal regression-based processing
           stream.  Apply the RETROICOR regressors across runs (so using 13
           concatenated regressors, not 13*9).  Note that concatenation is
           normally done with the motion regressors too.

           To example #3, add -do_block and three -ricor options.
           
        --------------------------
        last mod date : 2009.05.28
        keywords      : obsolete, physio, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 sb23.e5b.ricor                          \
            -dsets                   sb23/epi_r??+orig.HEAD                  \
            -do_block                despike ricor                           \
            -copy_anat               sb23/sb23_mpra+orig                     \
            -tcat_remove_first_trs   3                                       \
            -ricor_regs_nfirst       3                                       \
            -ricor_regs              sb23/RICOR/r*.slibase.1D                \
            -ricor_regress_method    across-runs                             \
            -volreg_align_to         last                                    \
            -regress_stim_times      sb23/stim_files/blk_times.*.1D          \
            -regress_stim_labels     tneg tpos tneu eneg epos eneu fneg fpos \
                                     fneu                                    \
            -regress_basis           'BLOCK(30,1)'                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts

           Also consider adding -regress_bandpass.
           

        Example 5c. RETROICOR: censor and band pass. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper, no BP)

           This is an example of how we might currently suggest analyzing
           resting state data.  If no RICOR regressors exist, see example 9
           (or just remove any ricor options).

           Censoring due to motion has long been considered appropriate in
           BOLD FMRI analysis, but is less common for those doing bandpass
           filtering in RS FMRI because the FFT requires one to either break
           the time axis (evil) or to replace the censored data with something
           probably inappropriate.

           Instead, it is slow (no FFT, but maybe SFT :) but effective to
           regress frequencies within the regression model, where censoring
           is simple.

           Note: band passing in the face of RETROICOR is questionable.  It may
                 be questionable in general.  To skip bandpassing, remove the
                 -regress_bandpass option line.

           Also, align EPI to anat and warp to standard space.
           
        --------------------------
        last mod date : 2016.05.03
        keywords      : obsolete, physio, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  sb23.e5a.ricor                         \
            -dsets                    sb23/epi_r??+orig.HEAD                 \
            -blocks                   despike ricor tshift align tlrc volreg \
                                      blur mask regress                      \
            -copy_anat                sb23/sb23_mpra+orig                    \
            -tcat_remove_first_trs    3                                      \
            -ricor_regs_nfirst        3                                      \
            -ricor_regs               sb23/RICOR/r*.slibase.1D               \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -blur_size                6                                      \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.2                                    \
            -regress_run_clustsim     no                                     \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 6. A simple task example, based on AFNI_data6. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              meant to be fast, but not complete, e.g. NL warp)
              (              prefer: see Example 6b)

           This example has changed to more closely correspond with the
           the class analysis example, AFNI_data6/FT_analysis/s05.ap.uber.

           The tshift block will interpolate each voxel time series to adjust
           for differing slice times, where the result is more as if each
           entire volume were acquired at the beginning of the TR.

           The 'align' block implies using align_epi_anat.py to align the
           anatomy with the EPI.  Here, the EPI base is first unifized locally.
           Additional epi/anat alignment options specify using lpc+ZZ for the
           cost function (more robust than simply lpc), -giant_move (in case
           the anat and EPI start a bit far apart), and -check_flip, to try to
           verify whether EPI left and right agree with the anatomy.
           This block computes the anat to EPI transformation matrix, which
           will be inverted in the volreg block, based on -volreg_align_e2a.

           Also, compute the transformation of the anatomy to MNI space, using
           affine registration (for speed in this simple example) to align to
           the 2009c template.

           In the volreg block, align the EPI to the MIN_OUTLIER volume (a
           low-motion volume, determined based on the data).  Then concatenate
           all EPI transformations, warping the EPI to standard space in one
           step (without multiple resampling operations), combining:

              EPI  ->  EPI base  ->  anat  ->  MNI 2009c template

           The standard space transformation is included by specifying option
           -volreg_tlrc_warp.

           A 4 mm blur is applied, to keep it very light (about 1.5 times the
           voxel size).

           The regression model is based on 2 conditions, each lasting 20 s
           per event, modeled by convolving a 20 s boxcar function with the
           BLOCK basis function, specified as BLOCK(20,1) to make the regressor
           unit height (height 1).

           One extra general linear test (GLT) is included, contrasting the
           visual reliable condition (vis) with auditory reliable (aud).

           Motion regression will be per run (using one set of 6 regressors for
           each run, i.e. 18 regressors in this example).

           The regression includes censoring of large motion (>= 0.3 ~mm
           between successive time points, based on the motion parameters),
           as well as censoring of outlier time points, where at least 5% of
           the brain voxels are computed as outliers.

           The regression model starts as a full time series, for time
           continuity, before censored time points are removed.  The output
           errts will be zero at censored time points (no error there), and so
           the output fit times series (fitts) will match the original data.

           The model fit time series (fitts) will be computed AFTER the linear
           regression, to save RAM on class laptops.

           Create sum_ideal.1D, as the sum of all non-baseline regressors, for
           quality control.

           Estimate the blur in the residual time series.  The resulting 3 ACF
           parameters can be averaged across subjects for cluster correction at
           the group level.

           Skip running the Monte Carlo cluster simulation example (which would
           specify minimum cluster sizes for cluster significance, based on the
           ACF parameters and mask), for speed.

           Once the proc script is created, execute it.
           
        --------------------------
        last mod date : 2020.02.15
        keywords      : task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.e6                                  \
            -copy_anat                FT/FT_anat+orig                        \
            -dsets                    FT/FT_epi_r?+orig.HEAD                 \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_compute_tsnr      yes                                    \
            -mask_epi_anat            yes                                    \
            -blur_size                4.0                                    \
            -regress_stim_times       FT/AV1_vis.txt FT/AV2_aud.txt          \
            -regress_stim_labels      vis aud                                \
            -regress_basis            'BLOCK(20,1)'                          \
            -regress_opts_3dD         -jobs 2                                \
                                      -gltsym 'SYM: vis -aud'                \
                                      -glt_label 1 V-A                       \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_compute_fitts                                           \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     no                                     \
            -html_review_style        pythonic                               \
            -execute

         * One could also use ANATICOR with task (e.g. -regress_anaticor_fast)
           in the case of -regress_reml_exec.  3dREMLfit supports voxelwise
           regression, but 3dDeconvolve does not.
             

        Example 6b. A modern task example, with preferable options. ~2~

              (recommended?  yes, reasonable for a complete analysis)

           GOOD TO CONSIDER

           This is based on Example 6, but is more complete.
           Example 6 is meant to run quickly, as in an AFNI bootcamp setting.
           Example 6b is meant to process more as we might suggest.

              - apply -check_flip in align_epi_anat.py, to monitor consistency
              - apply non-linear registration to MNI template, using output
                from @SSwarper:
                  o apply skull-stripped anat in -copy_anat
                  o apply original anat as -anat_follower (QC, for comparison)
                  o pass warped anat and transforms via -tlrc_NL_warped_dsets,
                    to apply those already computed transformations
              - use -mask_epi_anat to tighten the EPI mask (for QC),
                intersecting it (full_mask) with the anat mask (mask_anat)
              - use 3dREMLfit for the regression, to account for temporal
                autocorrelation in the noise
                (-regress_3dD_stop, -regress_reml_exec)
              - generate the HTML QC report using the nicer pythonic functions
                (requires matplotlib)
           
        --------------------------
        last mod date : 2020.02.15
        keywords      : complete, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.e6b                                 \
            -copy_anat                Qwarp/anat_warped/anatSS.FT.nii        \
            -anat_has_skull           no                                     \
            -anat_follower            anat_w_skull anat FT/FT_anat+orig      \
            -dsets                    FT/FT_epi_r?+orig.HEAD                 \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template_SSW.nii.gz        \
            -tlrc_NL_warp                                                    \
            -tlrc_NL_warped_dsets     Qwarp/anat_warped/anatQQ.FT.nii        \
                                      Qwarp/anat_warped/anatQQ.FT.aff12.1D   \
                                      Qwarp/anat_warped/anatQQ.FT_WARP.nii   \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_compute_tsnr      yes                                    \
            -mask_epi_anat            yes                                    \
            -blur_size                4.0                                    \
            -regress_stim_times       FT/AV1_vis.txt FT/AV2_aud.txt          \
            -regress_stim_labels      vis aud                                \
            -regress_basis            'BLOCK(20,1)'                          \
            -regress_opts_3dD         -jobs 2                                \
                                      -gltsym 'SYM: vis -aud'                \
                                      -glt_label 1 V-A                       \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_3dD_stop                                                \
            -regress_reml_exec                                               \
            -regress_compute_fitts                                           \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     no                                     \
            -html_review_style        pythonic                               \
            -execute

           To compare one's own command against this one, consider adding
                -compare_opts 'example 6b'
           to the end of (or anywhere in) the current command, as in:

                afni_proc.py ... my options ...   -compare_opts 'example 6b'
           

        Example 7. Apply some esoteric options. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. NL warp without @SSwarper)
              (              prefer: see Example 6b)

           a. Blur only within the brain, as far as an automask can tell.  So
              add -blur_in_automask to blur only within an automatic mask
              created internally by 3dBlurInMask (akin to 3dAutomask).

           b. Let the basis functions vary.  For some reason, we expect the
              BOLD responses to the telephone classes to vary across the brain.
              So we have decided to use TENT functions there.  Since the TR is
              3.0s and we might expect up to a 45 second BOLD response curve,
              use 'TENT(0,45,16)' for those first 3 out of 9 basis functions.

              This means using -regress_basis_multi instead of -regress_basis,
              and specifying all 9 basis functions appropriately.

           c. Use amplitude modulation.

              We expect responses to email stimuli to vary proportionally with
              the number of punctuation characters used in the message (in
              certain brain regions).  So we will use those values as auxiliary
              parameters 3dDeconvolve by marrying the parameters to the stim
              times (using 1dMarry).

              Use -regress_stim_types to specify that the epos/eneg/eneu stim
              classes should be passed to 3dDeconvolve using -stim_times_AM2.

           d. Not only censor motion, but censor TRs when more than 10% of the
              automasked brain are outliers.  So add -regress_censor_outliers.

           e. Include both de-meaned and derivatives of motion parameters in
              the regression.  So add '-regress_apply_mot_types demean deriv'.

           f. Output baseline parameters so we can see the effect of motion.
              So add -bout under option -regress_opts_3dD.

           g. Save on RAM by computing the fitts only after 3dDeconvolve.
              So add -regress_compute_fitts.

           h. Speed things up.  Have 3dDeconvolve use 4 CPUs and skip the
              single subject 3dClustSim execution.  So add '-jobs 4' to the
              -regress_opts_3dD option and add '-regress_run_clustsim no'.
           
        --------------------------
        last mod date : 2020.01.08
        keywords      : task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  sb23.e7.esoteric                       \
            -dsets                    sb23/epi_r??+orig.HEAD                 \
            -blocks                   tshift align tlrc volreg blur mask     \
                                      scale regress                          \
            -copy_anat                sb23/sb23_mpra+orig                    \
            -tcat_remove_first_trs    3                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -blur_in_automask                                                \
            -regress_stim_times       sb23/stim_files/blk_times.*.1D         \
            -regress_stim_types       times times times AM2 AM2 AM2 times    \
                                      times times                            \
            -regress_stim_labels      tneg tpos tneu eneg epos eneu fneg     \
                                      fpos fneu                              \
            -regress_basis_multi      'BLOCK(30,1)' 'TENT(0,45,16)'          \
                                      'BLOCK(30,1)' 'BLOCK(30,1)'            \
                                      'TENT(0,45,16)' 'BLOCK(30,1)'          \
                                      'BLOCK(30,1)' 'TENT(0,45,16)'          \
                                      'BLOCK(30,1)'                          \
            -regress_opts_3dD         -bout -gltsym 'SYM: +eneg -fneg'       \
                                      -glt_label 1 eneg_vs_fneg              \
                                      -jobs 4                                \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.1                                    \
            -regress_compute_fitts                                           \
            -regress_run_clustsim     no                                     \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 8. Surface-based analysis. ~2~

              (recommended?  yes, reasonable for a complete analysis)

           This example is intended to be run from AFNI_data6/FT_analysis.
           It is provided with the class data in file s03.ap.surface.

           Add -surf_spec and -surf_anat to provide the required spec and
           surface volume datasets.  The surface volume will be aligned to
           the current anatomy in the processing script.  Two spec files
           (lh and rh) are provided, one for each hemisphere (via wildcard).

           Also, specify a (resulting) 6 mm FWHM blur via -blur_size.  This
           does not add a blur, but specifies a resulting blur level.  So
           6 mm can be given directly for correction for multiple comparisons
           on the surface.

           Censor per-TR motion above 0.3 mm.

           Note that no -regress_est_blur_errts option is given, since that
           applies to the volume only (and since the 6 mm blur is a resulting
           blur level, so the estimates are not needed).

           The -blocks option is provided, but it is the same as the default
           for surface-based analysis, so is not really needed here.  Note that
           the 'surf' block is added and the 'mask' block is removed from the
           volume-based defaults.

           important options:

                -blocks         : includes surf, but no mask
                                  (default blocks for surf, so not needed)
                -surf_anat      : volume aligned with surface
                -surf_spec      : spec file(s) for surface

           Note: one would probably want to use standard mesh surfaces here.
                 This example will be updated with them in the future.
            
        --------------------------
        last mod date : 2017.09.12
        keywords      : complete, surface, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 FT.surf                                 \
            -blocks                  tshift align volreg surf blur scale     \
                                     regress                                 \
            -copy_anat               FT/FT_anat+orig                         \
            -dsets                   FT/FT_epi_r?+orig.HEAD                  \
            -surf_anat               FT/SUMA/FTmb_SurfVol+orig               \
            -surf_spec               FT/SUMA/FTmb_?h.spec                    \
            -tcat_remove_first_trs   2                                       \
            -align_opts_aea          -cost lpc+ZZ                            \
                                     -giant_move                             \
            -volreg_align_to         MIN_OUTLIER                             \
            -volreg_align_e2a                                                \
            -blur_size               6                                       \
            -regress_stim_times      FT/AV1_vis.txt FT/AV2_aud.txt           \
            -regress_stim_labels     vis aud                                 \
            -regress_basis           'BLOCK(20,1)'                           \
            -regress_opts_3dD        -jobs 2                                 \
                                     -gltsym 'SYM: vis -aud'                 \
                                     -glt_label 1 V-A                        \
            -regress_motion_per_run                                          \
            -regress_censor_motion   0.3
 

        Example 9. Resting state analysis with censoring and band passing. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. has band pass, no @SSwarper)
              (              prefer: see Example 11)

           With censoring and bandpass filtering.

           This is our suggested way to do preprocessing for resting state
           analysis, under the assumption that no cardio/physio recordings
           were made (see example 5 for cardio files).

           Censoring due to motion has long been considered appropriate in
           BOLD FMRI analysis, but is less common for those doing bandpass
           filtering in RS FMRI because the FFT requires one to either break
           the time axis (evil) or to replace the censored data with something
           probably inappropriate.

           Instead, it is slow (no FFT, but maybe SFT :) but effective to
           regress frequencies within the regression model, where censoring
           is simple.

           inputs: anat, EPI
           output: errts dataset (to be used for correlation)

           special processing:
              - despike, as another way to reduce motion effect
                 (see block despike)
              - censor motion TRs at the same time as bandpassing data
                 (see -regress_censor_motion, -regress_bandpass)
              - regress motion parameters AND derivatives
                 (see -regress_apply_mot_types)

           Note: for resting state data, a more strict threshold may be a good
                 idea, since motion artifacts should play a bigger role than in
                 a task-based analysis.

                 So the typical suggestion of motion censoring at 0.3 for task
                 based analysis has been changed to 0.2 for this resting state
                 example, and censoring of outliers has also been added, at a
                 value of 5% of the brain mask.

                 Outliers are typically due to motion, and may capture motion
                 in some cases where the motion parameters do not, because
                 motion is not generally a whole-brain-between-TRs event.

           Note: if regressing out regions of interest, either create the ROI
                 time series before the blur step, or remove blur from the list
                 of blocks (and apply any desired blur after the regression).

           Note: it might be reasonable to estimate the blur using epits rather
                 than errts in the case of bandpassing.  Both options are
                 included here.

           Note: scaling is optional here.  While scaling has no direct effect
                 on voxel correlations, it does have an effect on ROI averages
                 used for correlations.

           Other options to consider: -tlrc_NL_warp, -anat_uniform_method
            
        --------------------------
        last mod date : 2019.02.26
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -tcat_remove_first_trs    3                                      \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 9b. Resting state analysis with ANATICOR. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. has band pass, no @SSwarper)
              (              prefer: see Example 11)

           Like example #9, but also regress out the signal from locally
           averaged white matter.  The only change is adding the option
           -regress_anaticor.

           Note that -regress_anaticor implies options -mask_segment_anat and
           -mask_segment_erode.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -tcat_remove_first_trs    3                                      \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_anaticor                                                \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 10. Resting state analysis, with tissue-based regressors. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              e.g. missing @SSwarper)
              (              prefer: see Example 11)

           Like example #9, but also regress the eroded white matter averages.
           The WMe mask come from the Classes dataset, created by 3dSeg via the
           -mask_segment_anat and -mask_segment_erode options.

        ** While -mask_segment_anat also creates a CSF mask, that mask is ALL
           CSF, not just restricted to the ventricles, for example.  So it is
           probably not appropriate for use in tissue-based regression.

           CSFe was previously used as an example of what one could do, but as
           it is not advised, it has been removed.

           Also, align to minimum outlier volume, and align to the anatomy
           using cost function lpc+ZZ.

           Note: it might be reasonable to estimate the blur using epits rather
                 than errts in the case of bandpassing.  Both options are
                 included here.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -tcat_remove_first_trs    3                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -blur_size                4                                      \
            -mask_epi_anat            yes                                    \
            -mask_segment_anat        yes                                    \
            -mask_segment_erode       yes                                    \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_ROI              WMe                                    \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts
 

        Example 10b. Resting state analysis, as 10a with 3dRSFC. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              prefer: see Example 11)
              (         ***        : use censoring and 3dLombScargle)

            This is for band passing and computation of ALFF, etc.

          * This will soon use a modified 3dRSFC.

            Like example #10, but add -regress_RSFC to bandpass via 3dRSFC.
            Skip censoring and regression band passing because of the bandpass
            operation in 3dRSFC.

            To correspond to common tractography, this example stays in orig
            space (no 'tlrc' block, no -volreg_tlrc_warp option).  Of course,
            going to standard space is an option.
            
        --------------------------
        last mod date : 2019.02.13
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  subj123                                \
            -dsets                    epi_run1+orig.HEAD                     \
            -copy_anat                anat+orig                              \
            -blocks                   despike tshift align volreg blur mask  \
                                      scale regress                          \
            -tcat_remove_first_trs    3                                      \
            -volreg_align_e2a                                                \
            -blur_size                6.0                                    \
            -mask_apply               epi                                    \
            -mask_segment_anat        yes                                    \
            -mask_segment_erode       yes                                    \
            -regress_bandpass         0.01 0.1                               \
            -regress_apply_mot_types  demean deriv                           \
            -regress_ROI              WMe                                    \
            -regress_RSFC                                                    \
            -regress_run_clustsim     no                                     \
            -regress_est_blur_errts
 

        Example 11. Resting state analysis (now even more modern :). ~2~

              (recommended?  yes, reasonable for a complete analysis)

         o Yes, censor (outliers and motion) and despike.
         o Align the anatomy and EPI using the lpc+ZZ cost function, rather
           than the default lpc one.  Apply -giant_move, in case the datasets
           do not start off well-aligned.  Include -check_flip for good measure.
           A locally unifized EPI base is used for anatomical registration.
         o Register EPI volumes to the one which has the minimum outlier
              fraction (so hopefully the least motion).
         o Use non-linear registration to MNI template (non-linear 2009c).
           * This adds a lot of processing time.
           * Let @SSwarper align to template MNI152_2009_template_SSW.nii.gz.
             Then use the resulting datasets in the afni_proc.py command below
             via -tlrc_NL_warped_dsets.
                  @SSwarper -input FT_anat+orig        \
                            -subid FT                  \
                            -odir  FT_anat_warped      \
                            -base  MNI152_2009_template_SSW.nii.gz

            - The SS (skull-stripped) can be given via -copy_anat, and the
              with-skull unifized anatU can be given as a follower.
         o No bandpassing.
         o Use fast ANATICOR method (slightly different from default ANATICOR).
         o Use FreeSurfer segmentation for:
             - regression of first 3 principal components of lateral ventricles
             - ANATICOR white matter mask (for local white matter regression)
           * For details on how these masks were created, see "FREESURFER NOTE"
             in the help, as it refers to this "Example 11".
         o Erode FS white matter and ventricle masks before application.
         o Bring along FreeSurfer parcellation datasets:
             - aaseg : NN interpolated onto the anatomical grid
             - aeseg : NN interpolated onto the EPI        grid
           * These 'aseg' follower datasets are just for visualization,
             they are not actually required for the analysis.
         o Compute average correlation volumes of the errts against the
           the gray matter (aeseg) and ventricle (FSVent) masks.
         o Run @radial_correlate at the ends of the tcat, volreg and regress
           blocks.  If ANATICOR is being used to remove a scanner artifact,
           the errts radcor images might show the effect of this.

           Note: it might be reasonable to use either set of blur estimates
                 here (from epits or errts).  The epits (uncleaned) dataset
                 has all of the noise (though what should be considered noise
                 in this context is not clear), while the errts is motion
                 censored.  For consistency in resting state, it would be
                 reasonable to stick with epits.  They will likely be almost
                 identical.
            
        --------------------------
        last mod date : 2022.10.06
        keywords      : complete, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.11.rest                             \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -radial_correlate_blocks  tcat volreg regress                    \
            -copy_anat                anatSS.FT.nii                          \
            -anat_has_skull           no                                     \
            -anat_follower            anat_w_skull anat anatU.FT.nii         \
            -anat_follower_ROI        aaseg anat                             \
                                      aparc.a2009s+aseg_REN_all.nii.gz       \
            -anat_follower_ROI        aeseg epi                              \
                                      aparc.a2009s+aseg_REN_all.nii.gz       \
            -anat_follower_ROI        FSvent epi fs_ap_latvent.nii.gz        \
            -anat_follower_ROI        FSWe epi fs_ap_wm.nii.gz               \
            -anat_follower_erode      FSvent FSWe                            \
            -dsets                    FT_epi_r?+orig.HEAD                    \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template_SSW.nii.gz        \
            -tlrc_NL_warp                                                    \
            -tlrc_NL_warped_dsets     anatQQ.FT.nii anatQQ.FT.aff12.1D       \
                                      anatQQ.FT_WARP.nii                     \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_anaticor_fast                                           \
            -regress_anaticor_label   FSWe                                   \
            -regress_ROI_PC           FSvent 3                               \
            -regress_ROI_PC_per_run   FSvent                                 \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_make_corr_vols   aeseg FSvent                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -html_review_style        pythonic
 

        Example 11b. Similar to 11, but without FreeSurfer. ~2~

              (recommended?  yes, reasonable for a complete analysis)
              (              if this ventricle extraction method seems okay)

         AFNI currently does not have a good program to extract ventricles.
         But it can make a CSF mask that includes them.  So without FreeSurfer,
         one could import a ventricle mask from the template (e.g. for TT space,
         using TT_desai_dd_mpm+tlrc).  For example, assuming Talairach space
         (and a 2.5 mm^3 final voxel grid) for the analysis, one could create a
         ventricle mask as follows:

                3dcalc -a ~/abin/TT_desai_dd_mpm+tlrc                       \
                       -expr 'amongst(a,152,170)' -prefix template_ventricle
                3dresample -dxyz 2.5 2.5 2.5 -inset template_ventricle+tlrc \
                       -prefix template_ventricle_2.5mm

         o Be explicit with 2.5mm, using '-volreg_warp_dxyz 2.5'.
         o Use template TT_N27+tlrc, to be aligned with the desai atlas.
         o No -anat_follower options, but use -mask_import to import the
           template_ventricle_2.5mm dataset (and call it Tvent).
         o Use -mask_intersect to intersect ventricle mask with the subject's
           CSFe mask, making a more reliable subject ventricle mask (Svent).
         o Ventricle principle components are created as per-run regressors.
         o Make WMe and Svent correlation volumes, which are just for
           entertainment purposes anyway.
         o Run the cluster simulation.
            
        --------------------------
        last mod date : 2020.01.17
        keywords      : complete, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.11b.rest                            \
            -blocks                   despike tshift align tlrc volreg blur  \
                                      mask scale regress                     \
            -copy_anat                FT_anat+orig                           \
            -dsets                    FT_epi_r?+orig.HEAD                    \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                TT_N27+tlrc                            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_warp_dxyz         2.5                                    \
            -blur_size                4                                      \
            -mask_segment_anat        yes                                    \
            -mask_segment_erode       yes                                    \
            -mask_import              Tvent template_ventricle_2.5mm+tlrc    \
            -mask_intersect           Svent CSFe Tvent                       \
            -mask_epi_anat            yes                                    \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_anaticor_fast                                           \
            -regress_ROI_PC           Svent 3                                \
            -regress_ROI_PC_per_run   Svent                                  \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_make_corr_vols   WMe Svent                              \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     yes
 

        Example 12. background: Multi-echo data processing. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              incomplete - just shows basic ME options)
              (              prefer: see Example 13)

         Processing multi-echo data should be similar to single echo data,
         except for perhaps:

            combine         : the addition of a 'combine' block
            -dsets_me_echo  : specify ME data, per echo
            -dsets_me_run   : specify ME data, per run (alternative to _echo)
            -echo_times     : specify echo times (if needed)
            -combine_method : specify method to combine echoes (if any)

         An afni_proc.py command might be updated to include something like:
            
        --------------------------
        last mod date : 2018.02.27
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -blocks          tshift align tlrc volreg mask combine blur      \
                             scale regress                                   \
            -dsets_me_echo   epi_run*_echo_01.nii                            \
            -dsets_me_echo   epi_run*_echo_02.nii                            \
            -dsets_me_echo   epi_run*_echo_03.nii                            \
            -echo_times      15 30.5 41                                      \
            -mask_epi_anat   yes                                             \
            -combine_method  OC
 

        Example 12a. Multi-echo data processing - very simple. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)
              (              prefer: see Example 13)

         Keep it simple and just focus on the basic ME options, plus a few
         for controlling registration.

         o This example uses 3 echoes of data across just 1 run.
            - so use a single -dsets_me_run option to input EPI datasets
         o Echo 2 is used to drive registration for all echoes.
            - That is the default, but it is good to be explicit.
         o The echo times are not needed, as the echoes are never combined.
         o The echo are never combined (in this example), so that there
           are always 3 echoes, even until the end.
            - Note that the 'regress' block is not valid for multiple echoes.
            
        --------------------------
        last mod date : 2018.02.27
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                FT.12a.ME                                \
            -blocks                 tshift align tlrc volreg mask blur       \
            -copy_anat              FT_anat+orig                             \
            -dsets_me_run           epi_run1_echo*.nii                       \
            -reg_echo               2                                        \
            -tcat_remove_first_trs  2                                        \
            -volreg_align_to        MIN_OUTLIER                              \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp
 

        Example 12b. Multi-echo data processing - OC resting state. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)
              (              prefer: see Example 13)

         Still keep this simple, mostly focusing on ME options, plus standard
         ones for resting state.

         o This example uses 3 echoes of data across just 1 run.
            - so use a single -dsets_me_run option to input EPI datasets
         o Echo 2 is used to drive registration for all echoes.
            - That is the default, but it is good to be explicit.
         o The echoes are combined via the 'combine' block.
         o So -echo_times is used to provided them.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.12a.ME                              \
            -blocks                   tshift align tlrc volreg mask combine  \
                                      blur scale regress                     \
            -copy_anat                FT_anat+orig                           \
            -dsets_me_run             epi_run1_echo*.nii                     \
            -echo_times               15 30.5 41                             \
            -reg_echo                 2                                      \
            -tcat_remove_first_trs    2                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -combine_method           OC                                     \
            -blur_size                4                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits
 

        Example 12c. Multi-echo data processing - ME-ICA resting state. ~2~

              (recommended?  no, not intended for a complete analysis)
              (              many missing preferences, e.g. @SSwarper)
              (              prefer: see Example 13)

         As above, but run tedana.py for MEICA denoising.

         o Since tedana.py will mask the data, it may be preferable to
           blur only within that mask (-blur_in_mask yes).
         o A task analysis using tedana might look much the same,
           but with the extra -regress options for the tasks.
            
        --------------------------
        last mod date : 2020.01.08
        keywords      : ME, rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT.12a.ME                              \
            -blocks                   tshift align tlrc volreg mask combine  \
                                      blur scale regress                     \
            -copy_anat                FT_anat+orig                           \
            -dsets_me_run             epi_run1_echo*.nii                     \
            -echo_times               15 30.5 41                             \
            -reg_echo                 2                                      \
            -tcat_remove_first_trs    2                                      \
            -align_opts_aea           -cost lpc+ZZ                           \
            -tlrc_base                MNI152_2009_template.nii.gz            \
            -tlrc_NL_warp                                                    \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -combine_method           tedana                                 \
            -blur_size                4                                      \
            -blur_in_mask             yes                                    \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.2                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits

         Consider an alternative combine method, 'tedana_OC_tedort'.
           

        Example 13. Complicated ME, surface-based resting state example. ~2~

              (recommended?  yes, reasonable for a complete analysis)

         Example 'publish 3d' might be preferable.

         Key aspects of this example:

            - multi-echo data, using "optimally combined" echoes
            - resting state analysis (without band passing)
            - surface analysis
            - blip up/blip down distortion correction
            - slice-wise regression of physiological parameters (RETROICOR)
            - ventricle principal component regression (3 PCs)
            - EPI volreg to per-run MIN_OUTLIER, with across-runs allineate
            - QC: @radial_correlate on tcat and volreg block results
            - QC: pythonic html report

            * since this is a surface-based example, the are no tlrc options

         Minor aspects:

            - a FWHM=6mm blur is applied, since blur on surface is TO is size

         Note: lacking good sample data for this example, it is simply faked
               for demonstration (echoes are identical, fake ricor parameters
               are not part of this data tree).
            
        --------------------------
        last mod date : 2019.09.06
        keywords      : complete, ME, physio, rest, surface
        --------------------------

        afni_proc.py                                                         \
            -subj_id                   FT.complicated                        \
            -dsets_me_echo             FT/FT_epi_r?+orig.HEAD                \
            -dsets_me_echo             FT/FT_epi_r?+orig.HEAD                \
            -dsets_me_echo             FT/FT_epi_r?+orig.HEAD                \
            -echo_times                11 22.72 34.44                        \
            -blip_forward_dset         'FT/FT_epi_r1+orig.HEAD[0]'           \
            -blip_reverse_dset         'FT/FT_epi_r1+orig.HEAD[0]'           \
            -copy_anat                 FT/FT_anat+orig                       \
            -anat_follower_ROI         FSvent epi FT/SUMA/FT_vent.nii        \
            -anat_follower_erode       FSvent                                \
            -blocks                    despike ricor tshift align volreg     \
                                       mask combine surf blur scale regress  \
            -radial_correlate_blocks   tcat volreg                           \
            -tcat_remove_first_trs     2                                     \
            -ricor_regs_nfirst         2                                     \
            -ricor_regs                FT/fake.slibase.FT.r?.1D              \
            -ricor_regress_method      per-run                               \
            -tshift_interp             -wsinc9                               \
            -align_unifize_epi         local                                 \
            -align_opts_aea            -cost lpc+ZZ                          \
                                       -giant_move                           \
            -volreg_align_to           MIN_OUTLIER                           \
            -volreg_align_e2a                                                \
            -volreg_post_vr_allin      yes                                   \
            -volreg_pvra_base_index    MIN_OUTLIER                           \
            -volreg_warp_final_interp  wsinc5                                \
            -mask_epi_anat             yes                                   \
            -combine_method            OC                                    \
            -surf_anat                 FT/SUMA/FT_SurfVol.nii                \
            -surf_spec                 FT/SUMA/std.141.FT_?h.spec            \
            -blur_size                 6                                     \
            -regress_apply_mot_types   demean deriv                          \
            -regress_motion_per_run                                          \
            -regress_ROI_PC            FSvent 3                              \
            -regress_ROI_PC_per_run    FSvent                                \
            -regress_make_corr_vols    FSvent                                \
            -regress_censor_motion     0.2                                   \
            -regress_censor_outliers   0.05                                  \
            -html_review_style         pythonic
 

        AP class 3. s03.ap.surface - basic surface analysis ~2~

              (recommended?  yes, reasonable for a complete analysis)
                             (though it is a very simple example)

           This is the surface analysis run during an AFNI bootcamp.
            
        --------------------------
        last mod date : 2022.11.23
        keywords      : complete, surface, task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                 FT.surf                                 \
            -dsets                   FT/FT_epi_r?+orig.HEAD                  \
            -copy_anat               FT/FT_anat+orig                         \
            -blocks                  tshift align volreg surf blur scale     \
                                     regress                                 \
            -tcat_remove_first_trs   2                                       \
            -align_unifize_epi       local                                   \
            -align_opts_aea          -cost lpc+ZZ                            \
                                     -giant_move                             \
                                     -check_flip                             \
            -volreg_align_to         MIN_OUTLIER                             \
            -volreg_align_e2a                                                \
            -surf_anat               FT/SUMA/FT_SurfVol.nii                  \
            -surf_spec               FT/SUMA/std.60.FT_?h.spec               \
            -blur_size               6                                       \
            -regress_stim_times      FT/AV1_vis.txt FT/AV2_aud.txt           \
            -regress_stim_labels     vis aud                                 \
            -regress_basis           'BLOCK(20,1)'                           \
            -regress_opts_3dD        -jobs 2                                 \
                                     -gltsym 'SYM: vis -aud'                 \
                                     -glt_label 1 V-A                        \
            -regress_motion_per_run                                          \
            -regress_censor_motion   0.3
 

        AP class 5. s05.ap.uber - basic task analysis ~2~

              (recommended?  no, not intended for a complete analysis)
              (              prefer: see Example 6b)

           A basic task analysis with a pair of visual and auditory tasks.

           notable options include :
                - affine registration to the (default) TT_N27+tlrc template
                - censoring based on both motion params and outliers
                - '-regress_compute_fitts' to reduce RAM needs in 3dD
                - mask_epi_anat - intersect full_mask (epi) with mask_anat
                - QC: computing radial correlation volumes at the end
                      of the tcat (initial) and volreg processing blocks
                - QC: include -check_flip left/right consistency check
                - QC: compute sum of ideals, for evaluation
            
        --------------------------
        last mod date : 2024.08.29
        keywords      : task
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT                                     \
            -dsets                    FT/FT_epi_r1+orig.HEAD                 \
                                      FT/FT_epi_r2+orig.HEAD                 \
                                      FT/FT_epi_r3+orig.HEAD                 \
            -copy_anat                FT/FT_anat+orig                        \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -mask_epi_anat            yes                                    \
            -blur_size                4.0                                    \
            -regress_stim_times       FT/AV1_vis.txt FT/AV2_aud.txt          \
            -regress_stim_labels      vis aud                                \
            -regress_basis            'BLOCK(20,1)'                          \
            -regress_opts_3dD         -jobs 2                                \
                                      -gltsym 'SYM: vis -aud'                \
                                      -glt_label 1 V-A                       \
                                      -gltsym 'SYM: 0.5*vis +0.5*aud'        \
                                      -glt_label 2 mean.VA                   \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.3                                    \
            -regress_censor_outliers  0.05                                   \
            -regress_compute_fitts                                           \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_run_clustsim     no                                     \
            -execute
 

        AP demo 1a. for QC, ap_run_simple_rest.tcsh with EPI and anat ~2~

              (recommended?  yes, for quick quality control)

         This example was generated by running ap_run_simple_rest.tcsh,
         providing a single subject anat and (3 runs of) EPI.  It could
         be generated (and run) using the following:

            cd AFNI_data6/FT_analysis/FT
            ap_run_simple_rest.tcsh -subjid FT -run_proc \
              -anat FT_anat+orig -epi FT_epi_r*.HEAD

         This is highly recommended as a tool for quick quality control to be
         run on all EPI data right out of the scanner.  It is fine to run on
         task data, but without worrying about the actual task regression.

            
        --------------------------
        last mod date : 2024.02.20
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT                                     \
            -dsets                    FT/FT_epi_r1+orig.HEAD                 \
                                      FT/FT_epi_r2+orig.HEAD                 \
                                      FT/FT_epi_r3+orig.HEAD                 \
            -copy_anat                FT_anat+orig                           \
            -blocks                   tshift align tlrc volreg mask blur     \
                                      scale regress                          \
            -radial_correlate_blocks  tcat volreg regress                    \
            -tcat_remove_first_trs    2                                      \
            -align_unifize_epi        local                                  \
            -align_opts_aea           -cost lpc+ZZ                           \
                                      -giant_move                            \
                                      -check_flip                            \
            -tlrc_base                MNI152_2009_template_SSW.nii.gz        \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_compute_tsnr      yes                                    \
            -mask_epi_anat            yes                                    \
            -blur_size                6                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.25                                   \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -html_review_style        pythonic
 

        AP demo 1b. for QC, ap_run_simple_rest.tcsh with no anat ~2~

              (recommended?  yes, for quick quality control of EPI)

         This example was generated by running ap_run_simple_rest.tcsh,
         providing only 3 runs of EPI data.  It could be generated (and run)
         using the following:

            cd AFNI_data6/FT_analysis/FT
            ap_run_simple_rest.tcsh -subjid FT -run_proc -epi FT_epi_r*.HEAD

         No anatomical volume is included, excluding many options from
         example simple_rest_QC.

            
        --------------------------
        last mod date : 2022.11.23
        keywords      : rest
        --------------------------

        afni_proc.py                                                         \
            -subj_id                  FT                                     \
            -script                   proc.FT                                \
            -out_dir                  FT.results                             \
            -dsets                    FT/FT_epi_r1+orig.HEAD                 \
                                      FT/FT_epi_r2+orig.HEAD                 \
                                      FT/FT_epi_r3+orig.HEAD                 \
            -blocks                   tshift volreg mask blur scale regress  \
            -radial_correlate_blocks  tcat volreg                            \
            -tcat_remove_first_trs    2                                      \
            -volreg_align_to          MIN_OUTLIER                            \
            -volreg_compute_tsnr      yes                                    \
            -blur_size                6                                      \
            -regress_apply_mot_types  demean deriv                           \
            -regress_motion_per_run                                          \
            -regress_censor_motion    0.25                                   \
            -regress_censor_outliers  0.05                                   \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_make_ideal_sum   sum_ideal.1D                           \
            -html_review_style        pythonic
 

        AP demo 1c. for QC, ap_run_simple_rest_me.tcsh with ME EPI and anat ~2~

              (recommended?  yes, for quick quality control)

         This example was generated by running ap_run_simple_rest_me.tcsh,
         providing a single subject anat, EPI (1 run of 3 echoes), and
         the 3 echo times.

         It could be generated using the following, where the dataset names
         have been slightly truncated to save screen space:

            cd data_00_basic/sub-005/ses-01
            ap_run_simple_rest_me.tcsh                                  \
                -run_ap                                                 \
                -subjid      sub-005                                    \
                -nt_rm       4                                          \
                -anat        anat/sub-005*mprage_run-1_T1w.nii.gz       \
                -epi_me_run  func/sub-005*rest*bold.nii.gz              \
                -echo_times  12.5 27.6 42.7                             \
                -template    MNI152_2009_template_SSW.nii.gz

         This is highly recommended as a tool for quick quality control to be
         run on all EPI data right out of the scanner.

            
        --------------------------
        last mod date : 2024.08.09
        keywords      : rest, ME
        --------------------------

        afni_proc.py                                                         \
            -subj_id                   sub-005                               \
            -dsets_me_run              func/sub-005_rest_r1_e1_bold.nii.gz   \
                                       func/sub-005_rest_r1_e2_bold.nii.gz   \
                                       func/sub-005_rest_r1_e3_bold.nii.gz   \
            -echo_times                12.5 27.6 42.7                        \
            -reg_echo                  2                                     \
            -copy_anat                 anat/sub-005_mprage_run-1_T1w.nii.gz  \
            -blocks                    tshift align tlrc volreg mask combine \
                                       blur scale regress                    \
            -radial_correlate_blocks   tcat volreg regress                   \
            -tcat_remove_first_trs     4                                     \
            -tshift_interp             -wsinc9                               \
            -align_unifize_epi         local                                 \
            -align_opts_aea            -cost lpc+ZZ                          \
                                       -giant_move                           \
                                       -check_flip                           \
            -tlrc_base                 MNI152_2009_template_SSW.nii.gz       \
            -volreg_align_to           MIN_OUTLIER                           \
            -volreg_align_e2a                                                \
            -volreg_tlrc_warp                                                \
            -volreg_warp_final_interp  wsinc5                                \
            -volreg_compute_tsnr       yes                                   \
            -mask_epi_anat             yes                                   \
            -combine_method            OC                                    \
            -blur_size                 4                                     \
            -regress_apply_mot_types   demean deriv                          \
            -regress_motion_per_run                                          \
            -regress_censor_motion     0.25                                  \
            -regress_censor_outliers   0.05                                  \
            -regress_est_blur_epits                                          \
            -regress_est_blur_errts                                          \
            -regress_make_

... Output truncated due to size limit ...
