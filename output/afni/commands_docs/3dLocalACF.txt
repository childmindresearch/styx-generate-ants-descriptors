
=== Output of '3dLocalACF --help' ===

++ 3dLocalACF: AFNI version=AFNI_24.2.06 (Sep 12 2024) [64-bit]
++ Authored by: Emperor Zhark the Autocorrelator
[7m** FATAL ERROR:[0m Unknown option '--help'
** Program compile date = Sep 12 2024

=== Output of '3dLocalACF -help' ===


Usage: 3dLocalACF [options] inputdataset

Options:
--------
 -prefix   ppp
 -input    inputdataset
 -nbhd     nnn
 -mask     maskdataset
 -automask

Notes:
------
* This program estimates the spatial AutoCorrelation Function (ACF)
  locally in a neighborhood around each voxel, unlike '3FWHMx -acf',
  which produces an average over the whole volume.

* The input dataset must be a time series dataset, and must have
  been detrended, despiked, etc. already.  The 'errts' output from
  afni_proc.py is recommended!

* A brain mask is highly recommended as well.

* I typically use 'SPHERE(25)' for the neighborhood.  YMMV.

* This program is very slow.
   This copy of it uses multiple threads (OpenMP), so it is
   somewhat tolerable to use.

***** This program is experimental *****


++ Compile date = Sep 12 2024 {AFNI_24.2.06:linux_ubuntu_16_64_glw_local_shared}


=== Output of '3dLocalACF' (no arguments) ===


Usage: 3dLocalACF [options] inputdataset

Options:
--------
 -prefix   ppp
 -input    inputdataset
 -nbhd     nnn
 -mask     maskdataset
 -automask

Notes:
------
* This program estimates the spatial AutoCorrelation Function (ACF)
  locally in a neighborhood around each voxel, unlike '3FWHMx -acf',
  which produces an average over the whole volume.

* The input dataset must be a time series dataset, and must have
  been detrended, despiked, etc. already.  The 'errts' output from
  afni_proc.py is recommended!

* A brain mask is highly recommended as well.

* I typically use 'SPHERE(25)' for the neighborhood.  YMMV.

* This program is very slow.
   This copy of it uses multiple threads (OpenMP), so it is
   somewhat tolerable to use.

***** This program is experimental *****


++ Compile date = Sep 12 2024 {AFNI_24.2.06:linux_ubuntu_16_64_glw_local_shared}

