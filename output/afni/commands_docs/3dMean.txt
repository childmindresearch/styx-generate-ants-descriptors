
=== Output of '3dMean --help' ===

++ 3dMean: AFNI version=AFNI_24.2.06 (Sep 12 2024) [64-bit]
** ERROR: unknown option --help
   Here's hoping these excerpts from '/opt/afni/src/../install/3dMean -help' enlighten:
        '-stdev         of the mean (cannot be used with -sqr, -sum or -non_zero).'
        '-prefix ppp = Sets the prefix of the output dataset.'
        '-fscale     = Force scaling of the output to the maximum integer range.'

=== Output of '3dMean -help' ===

Usage: 3dMean [options] dset dset ...
Takes the voxel-by-voxel mean of all input datasets;
the main reason is to be faster than 3dcalc.

Options [see 3dcalc -help for more details on these]:
  -verbose    = Print out some information along the way.
  -prefix ppp = Sets the prefix of the output dataset.
  -datum ddd  = Sets the datum of the output dataset.
  -fscale     = Force scaling of the output to the maximum integer range.
  -gscale     = Same as '-fscale', but also forces each output sub-brick to
                  to get the same scaling factor.
  -nscale     = Don't do any scaling on output to byte or short datasets.
                  ** Only use this option if you are sure you
                     want the output dataset to be integer-valued!
  -non_zero   = Use only non-zero values for calculation of mean,min,max,sum,squares

  -sd *OR*    = Calculate the standard deviation, sqrt(variance), instead
  -stdev         of the mean (cannot be used with -sqr, -sum or -non_zero).

  -sqr        = Average the squares, instead of the values.
  -sum        = Just take the sum (don't divide by number of datasets).
  -count      = compute only the count of non-zero voxels.
  -max        = find the maximum at each voxel
  -min        = find the minimum at each voxel
  -absmax     = find maximum absolute value at each voxel
  -signed_absmax = find extremes with maximum absolute value
                but preserve sign

  -mask_inter = Create a simple intersection mask.
  -mask_union = Create a simple union mask.

                The masks will be set by any non-zero voxels in
                the input datasets.

  -weightset WSET = Sum of N dsets will be weighted by N volume WSET.
                    e.g. -weightset opt_comb_weights+tlrc
                This weight dataset must be of type float.

N.B.: All input datasets must have the same number of voxels along
       each axis (x,y,z,t).
    * At least 2 input datasets are required.
    * Dataset sub-brick selectors [] are allowed.
    * The output dataset origin, time steps, etc., are taken from the
       first input dataset.
    * Both absmax and signed_absmax are not really appropriate for byte data
      because that format does not allow for negative values
*** If you are trying to compute the mean (or some other statistic)
    across time for a 3D+time dataset (not across datasets), use
    3dTstat instead.

++ Compile date = Sep 12 2024 {AFNI_24.2.06:linux_ubuntu_16_64_glw_local_shared}


=== Output of '3dMean' (no arguments) ===

Usage: 3dMean [options] dset dset ...
Takes the voxel-by-voxel mean of all input datasets;
the main reason is to be faster than 3dcalc.

Options [see 3dcalc -help for more details on these]:
  -verbose    = Print out some information along the way.
  -prefix ppp = Sets the prefix of the output dataset.
  -datum ddd  = Sets the datum of the output dataset.
  -fscale     = Force scaling of the output to the maximum integer range.
  -gscale     = Same as '-fscale', but also forces each output sub-brick to
                  to get the same scaling factor.
  -nscale     = Don't do any scaling on output to byte or short datasets.
                  ** Only use this option if you are sure you
                     want the output dataset to be integer-valued!
  -non_zero   = Use only non-zero values for calculation of mean,min,max,sum,squares

  -sd *OR*    = Calculate the standard deviation, sqrt(variance), instead
  -stdev         of the mean (cannot be used with -sqr, -sum or -non_zero).

  -sqr        = Average the squares, instead of the values.
  -sum        = Just take the sum (don't divide by number of datasets).
  -count      = compute only the count of non-zero voxels.
  -max        = find the maximum at each voxel
  -min        = find the minimum at each voxel
  -absmax     = find maximum absolute value at each voxel
  -signed_absmax = find extremes with maximum absolute value
                but preserve sign

  -mask_inter = Create a simple intersection mask.
  -mask_union = Create a simple union mask.

                The masks will be set by any non-zero voxels in
                the input datasets.

  -weightset WSET = Sum of N dsets will be weighted by N volume WSET.
                    e.g. -weightset opt_comb_weights+tlrc
                This weight dataset must be of type float.

N.B.: All input datasets must have the same number of voxels along
       each axis (x,y,z,t).
    * At least 2 input datasets are required.
    * Dataset sub-brick selectors [] are allowed.
    * The output dataset origin, time steps, etc., are taken from the
       first input dataset.
    * Both absmax and signed_absmax are not really appropriate for byte data
      because that format does not allow for negative values
*** If you are trying to compute the mean (or some other statistic)
    across time for a 3D+time dataset (not across datasets), use
    3dTstat instead.

++ Compile date = Sep 12 2024 {AFNI_24.2.06:linux_ubuntu_16_64_glw_local_shared}

