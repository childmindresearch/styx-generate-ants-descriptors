
=== Output of 'mri_binarize --help' ===

USAGE: /usr/local/freesurfer/bin/mri_binarize 

   --i invol  : input volume 
   
   --min min  : min thresh (def is -inf)
   --max max  : max thresh (def is +inf)
   --pct P : set threshold to capture top P% (in mask or total volume)
   --rmin rmin  : compute min based on rmin*globalmean
   --rmax rmax  : compute max based on rmax*globalmean
   --fdr fdrthresh : compute min based on FDR (assuming -log10(p) input)
     --fdr-pos, --fdr-neg, --fdr-abs (use only pos, neg, or abs; abs is default)
   --match matchval <matchval2 ...>  : match instead of threshold
   --match-ctab colortable  : match all entries in the given color table
   --replace V1 V2 : replace voxels=V1 with V2
   --replaceonly V1 V2 : replace voxels=V1 with V2 and propagate other src voxels instead of binarizing
   --replace-nn V1 W : replace voxels=V1 with their nearest neighbor within a window of W voxels
   --replaceonly-nn V1 W : replace voxels=V1 with their nearest neighbor within a window of W voxels and propagate other src voxels instead of binarizing
   --ctx-wm : set match vals to 2, 41, 77, 251-255 (aseg for cerebral WM)
   --all-wm : set match vals to 2, 41, 77, 251-255, 7, and 46, (aseg for all WM)
   --ventricles : set match vals those for aseg ventricles+choroid (not 4th)
   --wm+vcsf : WM and ventricular CSF, including choroid (not 4th)
   --gm : match for all WM and VCSF and background, then invert
   --subcort-gm : subcortical gray matter
   --scm-lh, --scm-rh : subcortical mass (includes filling holes and removing islands)
   
   --o outvol : output volume 
   --count countfile : save number of hits in ascii file (hits,ntotvox,pct)
   --no-count : turn off counting number of voxels in the first frame -- good for large volumes
   
   --binval    val    : set vox within thresh to val (default is 1) 
   --binvalnot notval : set vox outside range to notval (default is 0) 
   --inv              : set binval=0, binvalnot=1
   --frame frameno    : use 0-based frame of input (default is 0) 
   --frame-sum : sum frames together before binarizing
   --frame-and : take intersection (AND) of frames. No --min needed.
   --merge mergevol   : merge with mergevolume 
   --mask maskvol       : must be within mask 
   --mask-thresh thresh : set thresh for mask (def is 0.5) 
   --abs : take abs of invol first (ie, make unsigned)
   --bincol : set binarized voxel value to its column number
   --zero-edges : zero the edge voxels
   --zero-slice-edges : zero the edge slice voxels
   --dilate ndilate: dilate binarization in 3D
   --erode  nerode: erode binarization in 3D (after any dilation)
   --erode2d nerode2d: erode binarization in 2D (after any 3D erosion)
   --erode-face   nerode: erode binarization using 'face' nearest neighbors
   --erode-edge   nerode: erode binarization using 'edge' nearest neighbors
   --erode-corner nerode: erode binarization using 'corner' nearest neighbors (same as --erode)
   --remove-islands, --no-remove-islands : remove islands in the mask
   --fill-holes, --no-fill-holes : remove holes in the mask (after removing islands if specified)
   --bb npad : reduce dim of output to the minimum volume of non-zero voxels with npad boundary
   --surf surfname : create a surface mesh from the binarization
   --surf-smooth niterations : iteratively smooth the surface mesh
   --threads nthreads (won't apply to replace)
   --noverbose (default *verbose*) 
   --dilate-vertex vno surf radius outmask : dilate vertex to a target area =pi*R^2 (stand-alone option)

   --debug     turn on debugging
   --checkopts don't run anything, just check options and exit
   --help      print out information on how to use this program
   --version   print out version and exit

7.4.1


Program to binarize a volume (or volume-encoded surface file). Can also
be used to merge with other binarizations. Binarization can be done
based on threshold or on matched values.

--i invol

Input volume to be binarized.

--min min
--max max
--rmin rmin
--rmax rmax

--noverbose (default is *verbose*) 

Minimum and maximum thresholds. If the value at a voxel is >= min and
<= max, then its value in the output will be 1 (or --binval),
otherwise it is 0 (or --binvalnot) or the value of the merge volume at
that voxel.  By default, min = -infinity and max = +infinity, but you
must set one of the thresholds. Cannot be used with --match. If --rmin
or --rmax are specified, then min (or max) is computed as rmin (or
rmax) times the global mean of the input.

--pct P

Set min threshold so that the top P percent of the voxels are captured
in the output mask. The percent will be computed based on the number of
voxels in the volume (if not input mask is specified) or within the
input mask.

--fdr fdrthreshold

Set min threshold to achieve a given FDR. By default, it uses the
absolute value but this can be changed with --fdr-pos and
--fdr-neg. If a mask is passed, it will compute the voxel-wise
threshold only with in the places where mask > 0.5.  The mask
threshold will be ignored.

--match matchvalue <matchvalue2 ...>

Binarize based on matching values. Any number of match values can be 
specified. Cannot be used with --min/--max.

--o outvol

Path to output volume.

--count countfile

Save number of voxels that meet match criteria in ascii
countefile. Four numbers are saved: the number of voxels that match
(nhits), the volume of the voxels that match, the total number of
voxels in the volume (nvoxtot), and the percent matching
(100*nhits/nvoxtot).

--binval    binval
--binvalnot binvalnot

Value to use for those voxels that are in the threshold/match
(--binval) or out of the range (--binvalnot). These must be integer
values. binvalnot only applies when a merge volume is NOT specified.

--replace V1 V2

Replace every occurrence of (int) value V1 with value V2. Multiple 
--replace args are possible.

--replaceonly V1 V2

Replace every occurrence of (int) value V1 with value V2. Multiple
--replaceonly args are possible. Other locations in the source volume
will be propagated to the output (unlike --replace which masks those
locations).

--replace-nn V1 W

Replace every occurrence of (int) value V1 with that of its nearest
neighbor voxel within a window of W voxels. Multiple --replace-nn args
are possible.

--replaceonly-nn V1 W

Replace every occurrence of (int) value V1 with that of its nearest
neighbor voxel within a window of W voxels. Multiple --replaceonly-nn
args are possible. Other locations in the source volume will be propagated
to the output (unlike --replace-nn which masks those locations).

--frame frameno

Use give frame of the input. 0-based. Default is 0.

--frame-sum

Sum the frames together before applying threshold.

--frame-and

Treat the multi-frame volume as binary 'AND' the frames together. This
takes an intersection of the individual frames. You do not need to 
specify a --min (the min will be set to nframes-0.5).

--merge mergevol

Merge binarization with the mergevol. If the voxel is within the threshold
range (or matches), then its value will be binval. If not, then it will 
inherit its value from the value at that voxel in mergevol. mergevol must 
be the same dimension as the input volume. Combining this with --binval 
allows you to construct crude segmentations.

--mask maskvol
--mask-thresh thresh

Mask input with mask. The mask volume is itself binarized at thresh
(default is 0.5). If a voxel is not in the mask, then it will be assigned
binvalnot or the value from the merge volume.

--zero-edges

Set the first and last planes in all dimensions to 0 (or --binvalnot). This
makes sure that all the voxels on the edge of the imaging volume are 0.

--zero-slice-edges

Same as --zero-edges, but only for slices.

--uchar

Save output file in 'uchar' format.


=== Output of 'mri_binarize -help' ===

ERROR: Option -help unknown
       Did you really mean --help ?

=== Output of 'mri_binarize' (no arguments) ===

USAGE: /usr/local/freesurfer/bin/mri_binarize 

   --i invol  : input volume 
   
   --min min  : min thresh (def is -inf)
   --max max  : max thresh (def is +inf)
   --pct P : set threshold to capture top P% (in mask or total volume)
   --rmin rmin  : compute min based on rmin*globalmean
   --rmax rmax  : compute max based on rmax*globalmean
   --fdr fdrthresh : compute min based on FDR (assuming -log10(p) input)
     --fdr-pos, --fdr-neg, --fdr-abs (use only pos, neg, or abs; abs is default)
   --match matchval <matchval2 ...>  : match instead of threshold
   --match-ctab colortable  : match all entries in the given color table
   --replace V1 V2 : replace voxels=V1 with V2
   --replaceonly V1 V2 : replace voxels=V1 with V2 and propagate other src voxels instead of binarizing
   --replace-nn V1 W : replace voxels=V1 with their nearest neighbor within a window of W voxels
   --replaceonly-nn V1 W : replace voxels=V1 with their nearest neighbor within a window of W voxels and propagate other src voxels instead of binarizing
   --ctx-wm : set match vals to 2, 41, 77, 251-255 (aseg for cerebral WM)
   --all-wm : set match vals to 2, 41, 77, 251-255, 7, and 46, (aseg for all WM)
   --ventricles : set match vals those for aseg ventricles+choroid (not 4th)
   --wm+vcsf : WM and ventricular CSF, including choroid (not 4th)
   --gm : match for all WM and VCSF and background, then invert
   --subcort-gm : subcortical gray matter
   --scm-lh, --scm-rh : subcortical mass (includes filling holes and removing islands)
   
   --o outvol : output volume 
   --count countfile : save number of hits in ascii file (hits,ntotvox,pct)
   --no-count : turn off counting number of voxels in the first frame -- good for large volumes
   
   --binval    val    : set vox within thresh to val (default is 1) 
   --binvalnot notval : set vox outside range to notval (default is 0) 
   --inv              : set binval=0, binvalnot=1
   --frame frameno    : use 0-based frame of input (default is 0) 
   --frame-sum : sum frames together before binarizing
   --frame-and : take intersection (AND) of frames. No --min needed.
   --merge mergevol   : merge with mergevolume 
   --mask maskvol       : must be within mask 
   --mask-thresh thresh : set thresh for mask (def is 0.5) 
   --abs : take abs of invol first (ie, make unsigned)
   --bincol : set binarized voxel value to its column number
   --zero-edges : zero the edge voxels
   --zero-slice-edges : zero the edge slice voxels
   --dilate ndilate: dilate binarization in 3D
   --erode  nerode: erode binarization in 3D (after any dilation)
   --erode2d nerode2d: erode binarization in 2D (after any 3D erosion)
   --erode-face   nerode: erode binarization using 'face' nearest neighbors
   --erode-edge   nerode: erode binarization using 'edge' nearest neighbors
   --erode-corner nerode: erode binarization using 'corner' nearest neighbors (same as --erode)
   --remove-islands, --no-remove-islands : remove islands in the mask
   --fill-holes, --no-fill-holes : remove holes in the mask (after removing islands if specified)
   --bb npad : reduce dim of output to the minimum volume of non-zero voxels with npad boundary
   --surf surfname : create a surface mesh from the binarization
   --surf-smooth niterations : iteratively smooth the surface mesh
   --threads nthreads (won't apply to replace)
   --noverbose (default *verbose*) 
   --dilate-vertex vno surf radius outmask : dilate vertex to a target area =pi*R^2 (stand-alone option)

   --debug     turn on debugging
   --checkopts don't run anything, just check options and exit
   --help      print out information on how to use this program
   --version   print out version and exit

7.4.1

