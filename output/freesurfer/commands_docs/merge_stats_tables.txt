
=== Output of 'merge_stats_tables --help' ===

Usage: 

SUMMARY

Merges a set of stats table files into a single stats table.
A stats table is a file where each line is a subject and each column 
is a segmentation or parcellation. The first row is the name of the
table (measure) and a list of the ROI names. The first column is
the subject name.

The subjects list can be specified in one of four ways:
  1. Specify each subject after -s 
  
          -s subject1 -s subject2 ..
  
  2. specify all subjects after --subjects.  
     --subjects does not have to be the last argument. Eg:
     
          --subjects subject1 subject2 ... 

  3. Specify each input file after -i 

          -i subject1/stats/aseg.stats -i subject2/stat/aseg.stats ...
  
  4. Specify all the input stat files after --inputs. --inputs does not have
     to be the last argument. Eg:
       
          --inputs subject1/stats/aseg.stats subject2/stats/aseg.stats ...

The first two methods assume the freesurfer directory structure. The
last two are general and can be used with any stats table input file.
However for inputs, the subject name is not printed in the file (just the
row number). Note that the first two and last two are mutually exclusive.
i.e don't specify --subjects when you are providing --inputs and vice versa.

The --common-segs flag outputs only the segmentations which are common to *all*
the statsfiles. This option is helpful if one or more statsfile contains
segmentations different from the segs of other files ( which results in the
script exiting which is the default behavior ). This option makes the
script to continue.

The --all-segs flag outputs segmentations which are the union of all
segmentations in all statsfiles. This option is helpful if one or more statsfile
contains segs different from the segs of other files ( which results in the
script exiting, the default behavior ). Subjects which don't have a certain
segmentation show a value of 0.

The --segids-from-file <file> option outputs only the segmentations present in the file.
There has to be one segmentation id per line in the file. The output table will maintain the 
order of the segmentation ids

The --segno option outputs only the segmentation id requested.
This is useful because if the number of segmentations is large,
the table becomes huge. The order of the specified seg ids is maintained. 

The --no-segno options doesn't output the segmentations. 
This can be convenient for removing segs that are always empty.

The --transpose flag writes the transpose of the table. 
This might be a useful way to see the table when the number of subjects is
relatively less than the number of segmentations.

The --delimiter option controls what character comes between the measures
in the table. Valid options are 'tab' ( default), 'space', 'comma' and  'semicolon'.

The --skip option skips if it can't find a .stats file. Default behavior is
exit the program.



Options:
  -h, --help            show this help message and exit
  --subjects            (REQUIRED) subject1 <subject2 subject3..>
  -s SUBJECTS            subjectname
  --subjectsfile=SUBJECTSFILE
                        name of the file which has the list of subjects ( one
                        subject per line)
  --inputs               input1 <input2 input3..>
  -i INPUTS              inputname
  -t OUTPUTFILE, --tablefile=OUTPUTFILE
                        (REQUIRED) the output tablefile
  -m MEAS, --meas=MEAS  (REQUIRED) measure to write in output table
  --common-segs         output only the common segmentations of all the
                        statsfiles given
  --all-segs            output all the segmentations of the statsfiles given
  --intable=INTABLE     use `fname` as input (REQUIRED when passing subject
                        ids)
  --subdir=SUBDIR       use `subdir` instead of default "stats/" when passing
                        subject ids
  -d DELIMITER, --delimiter=DELIMITER
                        delimiter between measures in the table. default is
                        space (alt comma, space, semicolon )
  --transpose           transpose the table (default is subjects in rows and
                        segmentations in cols)
  --skip                if a subject does not have stats file, skip it
  -v, --debug           increase verbosity

=== Output of 'merge_stats_tables -help' ===

Usage: 

SUMMARY

Merges a set of stats table files into a single stats table.
A stats table is a file where each line is a subject and each column 
is a segmentation or parcellation. The first row is the name of the
table (measure) and a list of the ROI names. The first column is
the subject name.

The subjects list can be specified in one of four ways:
  1. Specify each subject after -s 
  
          -s subject1 -s subject2 ..
  
  2. specify all subjects after --subjects.  
     --subjects does not have to be the last argument. Eg:
     
          --subjects subject1 subject2 ... 

  3. Specify each input file after -i 

          -i subject1/stats/aseg.stats -i subject2/stat/aseg.stats ...
  
  4. Specify all the input stat files after --inputs. --inputs does not have
     to be the last argument. Eg:
       
          --inputs subject1/stats/aseg.stats subject2/stats/aseg.stats ...

The first two methods assume the freesurfer directory structure. The
last two are general and can be used with any stats table input file.
However for inputs, the subject name is not printed in the file (just the
row number). Note that the first two and last two are mutually exclusive.
i.e don't specify --subjects when you are providing --inputs and vice versa.

The --common-segs flag outputs only the segmentations which are common to *all*
the statsfiles. This option is helpful if one or more statsfile contains
segmentations different from the segs of other files ( which results in the
script exiting which is the default behavior ). This option makes the
script to continue.

The --all-segs flag outputs segmentations which are the union of all
segmentations in all statsfiles. This option is helpful if one or more statsfile
contains segs different from the segs of other files ( which results in the
script exiting, the default behavior ). Subjects which don't have a certain
segmentation show a value of 0.

The --segids-from-file <file> option outputs only the segmentations present in the file.
There has to be one segmentation id per line in the file. The output table will maintain the 
order of the segmentation ids

The --segno option outputs only the segmentation id requested.
This is useful because if the number of segmentations is large,
the table becomes huge. The order of the specified seg ids is maintained. 

The --no-segno options doesn't output the segmentations. 
This can be convenient for removing segs that are always empty.

The --transpose flag writes the transpose of the table. 
This might be a useful way to see the table when the number of subjects is
relatively less than the number of segmentations.

The --delimiter option controls what character comes between the measures
in the table. Valid options are 'tab' ( default), 'space', 'comma' and  'semicolon'.

The --skip option skips if it can't find a .stats file. Default behavior is
exit the program.



Options:
  -h, --help            show this help message and exit
  --subjects            (REQUIRED) subject1 <subject2 subject3..>
  -s SUBJECTS            subjectname
  --subjectsfile=SUBJECTSFILE
                        name of the file which has the list of subjects ( one
                        subject per line)
  --inputs               input1 <input2 input3..>
  -i INPUTS              inputname
  -t OUTPUTFILE, --tablefile=OUTPUTFILE
                        (REQUIRED) the output tablefile
  -m MEAS, --meas=MEAS  (REQUIRED) measure to write in output table
  --common-segs         output only the common segmentations of all the
                        statsfiles given
  --all-segs            output all the segmentations of the statsfiles given
  --intable=INTABLE     use `fname` as input (REQUIRED when passing subject
                        ids)
  --subdir=SUBDIR       use `subdir` instead of default "stats/" when passing
                        subject ids
  -d DELIMITER, --delimiter=DELIMITER
                        delimiter between measures in the table. default is
                        space (alt comma, space, semicolon )
  --transpose           transpose the table (default is subjects in rows and
                        segmentations in cols)
  --skip                if a subject does not have stats file, skip it
  -v, --debug           increase verbosity

=== Output of 'merge_stats_tables' (no arguments) ===

ERROR: Specify one of --subjects, --inputs or --subjectsfile
       or run with --help for help.
