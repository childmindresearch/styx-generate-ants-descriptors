
=== Output of 'mri_vol2surf --help' ===

USAGE: /usr/local/freesurfer/bin/mri_vol2surf 

   --mov input volume path (or --src)
   --ref reference volume name (default=orig.mgz
   --reg source registration (can be reg.dat or lta) 
   --regheader subject
   --mni152reg : $FREESURFER_HOME/average/mni152.register.dat
   --rot   Ax Ay Az : rotation angles (deg) to apply to reg matrix
   --trans Tx Ty Tz : translation (mm) to apply to reg matrix
   --float2int float-to-int conversion method (<round>, tkregister )
   --fixtkreg : make make registration matrix round-compatible
   --fwhm fwhm : smooth input volume (mm)
   --surf-fwhm fwhm : smooth output surface (mm)

   --trgsubject target subject (if different than reg)
   --hemi hemisphere (lh or rh) 
   --surf target surface (default = white) DO NOT USE 'inflated' 
      If you want to display on the inflated, sample it on 
      the white surface, then display it on any surface, including inflated
   --srcsubject source subject (override that in reg)

 Options for use with --trgsubject
   --surfreg    surface registration (sphere.reg)  
   --icoorder   order of icosahedron when trgsubject=ico

 Options for projecting along the surface normal:
   --projfrac frac : (0->1)fractional projection along normal 
   --projfrac-avg min max del : average along normal
   --projfrac-max min max del : max along normal
   --projdist mmdist : distance projection along normal 
   --projdist-avg min max del : average along normal
   --projopt <fraction stem> : use optimal linear estimation and previously
computed volume fractions (see mri_compute_volume_fractions)
   --projdist-max min max del : max along normal
   --mask label : mask the output with the given label file (usually cortex)
   --cortex : use hemi.cortex.label from trgsubject

 Options for output
   --o         output path
   --out_type  output format
   --frame   nth :  save only 0-based nth frame 
   --noreshape do not save output as multiple 'slices'
   --rf R  integer reshaping factor, save as R 'slices'
   --srchit   volume to store the number of hits at each vox 
   --srchit_type  source hit volume format 
   --nvox nvoxfile : write number of voxels intersecting surface

 Other Options
   --reshape : so dims fit in nifti or analyze
   --noreshape : do not reshape (default)
   --reshape3d : reshape fsaverage (ico7) into 42 x 47 x 83
   --scale scale : multiply all intensities by scale.
   --v vertex no : debug mapping of vertex.
   --srcsynth seed : synthesize source volume
   --srcsynth-index : synthesize source volume with volume index no
   --seedfile fname : save synth seed to fname
   --copy-ctab : setenv FS_COPY_HEADER_CTAB to copy any ctab in the mov header
   --sd SUBJECTS_DIR 
   --profile surf vol dist delta sigma interpname output
     Computes intensity profile from -dist:delta:+dist
     If delta is <= 0, then xsize/2 is used
     If sigma >= 0, then the gradient is estimated with smoothing parameter sigma
   --norm-pointset surf vtxno dist delta output
     Creates a freeview pointset using points along the normal


   --help      print out information on how to use this program
   --version   print out version and exit

   --interp    interpolation method (<nearest> or trilinear)
   --vg-thresh thrshold : threshold for  'ERROR: LTAconcat(): LTAs 0 and 1 do not match'

   --vol2surf vol surf projtype projdist projmap reg vsm interp output
    This is an alternative way to run vol2surf that does not rely on the recon-all
    directory structure. Generates the same output as standard invocation as long 
    as --use-new is added. --vol2surf does not have all the functionality. 
      projtype 0=absdist, 1=frac (if 0, projmap arg will be ignored)
      projmap : map to get the values for projection (usually thickness)
      reg : LTA registration file (or 'regheader', surf must have vol geom) 
        LTA files can go in either direction if surf has a valid vol geom
      vsm : voxel shift map for B0 correction (or 'novsm')

      interp 0=nearest, 1=trilin, 5=cubicbspline
   --closest-vertex x y z coords ltafile surf outfile (stand-alone)
    Stand-alone option to get the closest vertex to a given point    coords: 1=scanner,2=tkreg, ltafile=nofile for not using lta, outfile can be nofile too

7.4.1

This program will resample a volume onto a surface of a subject or the 
sphere. The output can be viewed on the surface (using tksurfer) or can 
be using for surface-based intersubject averaging. This program supersedes
paint.

OPTIONS

  --mov path to input volume (see below). Can also use --src

  --reg file : registration file as computed by tkregister,
    spmregister, bbregister, etc. This file
    can be an LTA (better) or a register.dat, in which case it has the following format:

        subjectname
        in-plane resolution(mm)
        between-plane resolution(mm)
        intensity
        m11 m12 m13 x0
        m21 m22 m33 y0
        m31 m22 m33 z0
          0   0   0  1
        <float2int_method>

    where subjectname is the name of the subject as found in 
    $SUBJECTS_DIR, in-plane resolution is the distance between
    adjacent rows or columes, between-plane resolution is the 
    distance between adjacent slices, intensity is ignored, and 
    the remainder is the 4x4 affine tranform that converts XYZ in
    the input volume to XYZ in the subject's anatomical space.
    The volume is mapped onto the surface of subject subjectname
    (unless --trgsubject is specified). There may or may not be 
    another line with the method used to convert voxel indices
    from floating to integer during registration. If tkregiser was
    used to register the volume, the method should be blank or 'tkregister'
    (no quotes), otherwise it should be 'round'. This can be overridden 
    with --float2int.

  --regheader subject 

    Compute registration from header information, ie, assume the
    volume geometry between the mov volume and the subject/mri/orig.mgz
    align the two volumes. This is the same as in tkregister2.

  --float2int method: override float2int method in registration file.
    See BUGS.

  --fixtkreg

    Attempt to convert the registration matrix so that it is round 
    (or nearest neighbor) compatible. Setting this flag will only have 
    an effect if the float2int method is tkregister. It will 'fix' the 
    matrix and change the float2int method to round. Don't use this flag 
    unless you know what you are doing. 

  --fwhm FWHM

    Smooth input volume with a gaussian kernal with FWHM mm.

  --trgsubject target subject name : resample volume onto this subject 
    instead of the one found in the registration file. The target subject 
    can be either a subject name (as found in $SUBJECTS_DIR) or ico 
    (to map onto the sphere). If the target subject is not the source 
    subject, then the surfaces are mapped using each subject's spherical
    surface registration (?h.sphere.reg or that specified with --surfreg).
    If the target subject is ico, then the volume is resampled onto an
    icosahedron, which is used to uniformly sample a sphere. This requires
    specifying the icosahedron order (see --icoorder).


  --hemi hemisphere : lh = left hemisphere, rh = right hemisphere

  --surf surfacename : the surface on which to resample. The default is
  white. It will look for $SUBJECTS_DIR/subjectname/surf/?h.surfacename
  DO NOT specify 'inflated'. If you want to display on the inflated surface,
  or any other surface, specify 'white' here then display it on any surface,
  including the inflated surface.

  --surfreg intersubject registration surface : default (sphere.reg).
    This is a representation of a subject's cortical surface after it
    has been registered/morphed with a template spherical surface.

  --icoorder icosahedron order number: this specifies the size of the
    icosahedron according to the following table: 
              Order  Number of Vertices
                0              12 
                1              42 
                2             162 
                3             642 
                4            2562 
                5           10242 
                6           40962 
                7          163842 
    In general, it is best to use the largest size available.

  --projfrac fraction : fraction (0,1) of the cortical thickness 
    at each vertex to project along the surface normal. Default 0. 
    When set at 0.5 with the white surface, this should sample in the
    middle of the cortical surface. This requires that a ?h.thickness file 
    exist for the source subject. Note, the faction can be less than
    zero, in which case it will project into the white matter. See also
    --projdist.

  --projdist mmdist

    Same as --projfrac but projects the given distance in mm at all
    points of the surface regardless of thickness.

  --projfrac-avg min max delta
  --projdist-avg min max delta

    Same idea as --projfrac and --projdist, but sample at each of the points
    between min and max at a spacing of delta. The samples are then averaged
    together. The idea here is to average along the normal.

  --o output path : location to store the data (see below)
  --out_type format of output (see below)

  --frame 0-based frame number : sample and save only the given frame 
    from the source volume (needed when out_type = paint). Default 0.

  --reshape : save the output as multiple 'slices'. This is 
    for logistical purposes (eg, in analyze and nifti formats
    the size of a dimension cannot exceed 2^15). This used to be
    the default behavior. This has no effect when the output type
    is paint.

  --rf R

    Explicity set the reshaping factor to R. R must be an integer factor 
    of the number of vertices. 

  --srchit volid

    Save a volume (the same size as the source) in which the value at
    each voxel is the number of surface vertices it maps to. The number of
    voxels hit at least once is printed to stdout as :
       'Number of source voxels hit' 

  --nvox nvoxfile

    Save the number of voxels intersecting the surface in the file
    nvoxfile.

  --version : print version and exit.


  --srcsynth seed

    Synthesize the source volume with white gaussian noise. seed
    is the seed to the random generator. Use -1 to have the seed
    automatically chosen based on time-of-day. See also --seedfile

  --seedfile fname

    Save random number generator seed in fname. Has no effect without
    --srcsynth. This is only useful for keeping track of the distribution
    of seeds for debugging purposes.


SPECIFYING THE INPUT/OUTPUT PATH and TYPE

  mri_vol2surf accepts all input/output types as mri_convert (see 
  mri_convert --help for more information). In addition, an output 
  type of 'paint' can be specified. This outputs data in a form
  that can be easily read by tksurfer (also known as a '.w file').
  See BUGS for more information on paint output.

NOTES

  The output will be a data set with Nv/R colums, 1 row, R slices, and Nf frames,
  where Nv is the number of verticies in the output surface, and Nf is the 
  number of frames in the input volume (unless the output format is paint, in
  which case only one frame is written out). R is the reshaping factor. R is 6 
  for the icosaheron. For non-ico, the prime factor of Nv closest to 6 is chosen. 
  Reshaping can be important for logistical reasons (eg, Nv can easily exceed 
  the maximum number of elements allowed in the analyze format). R can be forced 
  to 1 with --noreshape. The user can also explicity set R from the command-line
  using --rf. Any geometry information saved with the output file will 
  be bogus.

  When resampling for fixed-effects intersubject averaging, make sure
  to resample variance and not standard deviation. This is automatically
  accomplished when the input volume has been produced by the FS-FAST 
  selxavg program.

EXAMPLES:

  1. To paint the third frame of bfloat volume sig registered with tkregister
      onto a the left hemisphere of a surface

     mri_vol2surf --mov sig.bhdr --reg register.dat 
       --hemi lh --o ./sig-lh.mgh 

     This will create sig-lh.mgh in the current directory, which can then
     be loaded into tksurfer

  2. To convert an analyze volume onto fsaverage (right hemisphere)

     mri_vol2surf --mov sig.img  --reg register.dat 
       --hemi rh --o ./sig-rh.img --trgsubject fsaverage --icoorder 7

BUG REPORTS: send bugs to analysis-bugs@nmr.mgh.harvard.edu. Make sure 
  to include the version and full command-line.

BUGS:

  When the output format is paint, the output file must be specified with
  a partial path (eg, ./data-lh.w) or else the output will be written into
  the subject's anatomical directory.

  Currently no support for searching along the surface normal for a maximum
  value (as can be done with the paint program)

  The ability to put the float2int conversion method in the registration file
  is new as of Fall 2001. Consequently, there may be some registration files
  that do not have a method string, which will force the method to be that
  of tkregister. This is can be overridden with --float2int.


AUTHOR: Douglas N. Greve, Ph.D., MGH-NMR Center (greve@nmr.mgh.harvard.edu)


=== Output of 'mri_vol2surf -help' ===

ERROR: Option -help unknown
       Did you really mean --help ?

=== Output of 'mri_vol2surf' (no arguments) ===

USAGE: /usr/local/freesurfer/bin/mri_vol2surf 

   --mov input volume path (or --src)
   --ref reference volume name (default=orig.mgz
   --reg source registration (can be reg.dat or lta) 
   --regheader subject
   --mni152reg : $FREESURFER_HOME/average/mni152.register.dat
   --rot   Ax Ay Az : rotation angles (deg) to apply to reg matrix
   --trans Tx Ty Tz : translation (mm) to apply to reg matrix
   --float2int float-to-int conversion method (<round>, tkregister )
   --fixtkreg : make make registration matrix round-compatible
   --fwhm fwhm : smooth input volume (mm)
   --surf-fwhm fwhm : smooth output surface (mm)

   --trgsubject target subject (if different than reg)
   --hemi hemisphere (lh or rh) 
   --surf target surface (default = white) DO NOT USE 'inflated' 
      If you want to display on the inflated, sample it on 
      the white surface, then display it on any surface, including inflated
   --srcsubject source subject (override that in reg)

 Options for use with --trgsubject
   --surfreg    surface registration (sphere.reg)  
   --icoorder   order of icosahedron when trgsubject=ico

 Options for projecting along the surface normal:
   --projfrac frac : (0->1)fractional projection along normal 
   --projfrac-avg min max del : average along normal
   --projfrac-max min max del : max along normal
   --projdist mmdist : distance projection along normal 
   --projdist-avg min max del : average along normal
   --projopt <fraction stem> : use optimal linear estimation and previously
computed volume fractions (see mri_compute_volume_fractions)
   --projdist-max min max del : max along normal
   --mask label : mask the output with the given label file (usually cortex)
   --cortex : use hemi.cortex.label from trgsubject

 Options for output
   --o         output path
   --out_type  output format
   --frame   nth :  save only 0-based nth frame 
   --noreshape do not save output as multiple 'slices'
   --rf R  integer reshaping factor, save as R 'slices'
   --srchit   volume to store the number of hits at each vox 
   --srchit_type  source hit volume format 
   --nvox nvoxfile : write number of voxels intersecting surface

 Other Options
   --reshape : so dims fit in nifti or analyze
   --noreshape : do not reshape (default)
   --reshape3d : reshape fsaverage (ico7) into 42 x 47 x 83
   --scale scale : multiply all intensities by scale.
   --v vertex no : debug mapping of vertex.
   --srcsynth seed : synthesize source volume
   --srcsynth-index : synthesize source volume with volume index no
   --seedfile fname : save synth seed to fname
   --copy-ctab : setenv FS_COPY_HEADER_CTAB to copy any ctab in the mov header
   --sd SUBJECTS_DIR 
   --profile surf vol dist delta sigma interpname output
     Computes intensity profile from -dist:delta:+dist
     If delta is <= 0, then xsize/2 is used
     If sigma >= 0, then the gradient is estimated with smoothing parameter sigma
   --norm-pointset surf vtxno dist delta output
     Creates a freeview pointset using points along the normal


   --help      print out information on how to use this program
   --version   print out version and exit

   --interp    interpolation method (<nearest> or trilinear)
   --vg-thresh thrshold : threshold for  'ERROR: LTAconcat(): LTAs 0 and 1 do not match'

   --vol2surf vol surf projtype projdist projmap reg vsm interp output
    This is an alternative way to run vol2surf that does not rely on the recon-all
    directory structure. Generates the same output as standard invocation as long 
    as --use-new is added. --vol2surf does not have all the functionality. 
      projtype 0=absdist, 1=frac (if 0, projmap arg will be ignored)
      projmap : map to get the values for projection (usually thickness)
      reg : LTA registration file (or 'regheader', surf must have vol geom) 
        LTA files can go in either direction if surf has a valid vol geom
      vsm : voxel shift map for B0 correction (or 'novsm')

      interp 0=nearest, 1=trilin, 5=cubicbspline
   --closest-vertex x y z coords ltafile surf outfile (stand-alone)
    Stand-alone option to get the closest vertex to a given point    coords: 1=scanner,2=tkreg, ltafile=nofile for not using lta, outfile can be nofile too

7.4.1

