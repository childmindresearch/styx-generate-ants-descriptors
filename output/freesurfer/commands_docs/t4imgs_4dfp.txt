
=== Output of 't4imgs_4dfp --help' ===

freesurfer t4imgs_4dfp.c
Usage:	t4imgs_4dfp [options] <inlist> <outfile>
	option
	-z	normalize by sqrt(n) rather than n (for z images)
	-s	interpolate by 3D cubic spline (default is 3D linear)
	-N	output NaN (default 0.0) for undefined values
	-B	internally convert to_711-2A_t4->to_711-2B_t4
	-n	use nearest neighbor interpolation
	-O111	output in 111 space instead of default 333.0 space
	-O222	output in 222 space instead of default 333.0 space
	-O333.n	output in 333.n space (y shifted up by n pixels)
	-Omy_image	duplicate dimensions of my_image.4dfp.ifh
	-@<b|l>	output big or little endian (default CPU endian)

=== Output of 't4imgs_4dfp -help' ===

freesurfer t4imgs_4dfp.c
Usage:	t4imgs_4dfp [options] <inlist> <outfile>
	option
	-z	normalize by sqrt(n) rather than n (for z images)
	-s	interpolate by 3D cubic spline (default is 3D linear)
	-N	output NaN (default 0.0) for undefined values
	-B	internally convert to_711-2A_t4->to_711-2B_t4
	-n	use nearest neighbor interpolation
	-O111	output in 111 space instead of default 333.0 space
	-O222	output in 222 space instead of default 333.0 space
	-O333.n	output in 333.n space (y shifted up by n pixels)
	-Omy_image	duplicate dimensions of my_image.4dfp.ifh
	-@<b|l>	output big or little endian (default CPU endian)

=== Output of 't4imgs_4dfp' (no arguments) ===

freesurfer t4imgs_4dfp.c
Usage:	t4imgs_4dfp [options] <inlist> <outfile>
	option
	-z	normalize by sqrt(n) rather than n (for z images)
	-s	interpolate by 3D cubic spline (default is 3D linear)
	-N	output NaN (default 0.0) for undefined values
	-B	internally convert to_711-2A_t4->to_711-2B_t4
	-n	use nearest neighbor interpolation
	-O111	output in 111 space instead of default 333.0 space
	-O222	output in 222 space instead of default 333.0 space
	-O333.n	output in 333.n space (y shifted up by n pixels)
	-Omy_image	duplicate dimensions of my_image.4dfp.ifh
	-@<b|l>	output big or little endian (default CPU endian)
