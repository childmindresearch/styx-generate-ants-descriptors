
=== Output of 'mris_register --help' ===


cwd /root
cmdline /usr/local/freesurfer/bin/mris_register --help 

				Help

NAME
	mris_register

SYNOPSIS
	mris_register [options] <surf_fname> <target> <out_fname>

DESCRIPTION
	This program registers a surface to an average surface template.

POSITIONAL ARGUMENTS
	<surf_fname>
		Input: Surface to register, often {hemi}.sphere

	<target>
		Input: The data to register to. In normal recon-all usage, 
		this is a template file for average surface. Alternatively 
		could also be a single-subject's surface -- see argument '-1' 
		(one), which is useful during the template-development 
		process.

	<out_fname>
		Output surface file to capture registration. Example: 
		{hemi}.sphere.reg

REQUIRED FLAGGED ARGUMENTS
	*******************************************************************

OPTIONAL FLAGGED ARGUMENTS
	-1
		(One) Treats target argument as the name of as a single 
		subject's surface not a template file. (What pattern of 
		filename is required?)

	-addframe <which_field, where_in_atlas (ints)>
		Add field which_field with location where_in_atlas in the 
		atlas

	-annot <annot_name>
		Zeroes medial wall using annotation {annot_name}

	-C <curvature_fname>

	-canon <canon_name>
		Use surface {canon_name} for canonical properties

	-inflated
		Use inflated surface for initial alignment

	-infname <name>
		Uses {name} for inflated surface, for initial alignment. Sets 
		inflated_name, surface_name and curvature_names[0]

	-L <labelfile atlas_gcsa_file label_name>
		Specify a manual label to align with atlas label <label name>

	-O <orig_name>
		Use {orig_name} for original properties

	-overlay <overlay_file navgs(int)>
		Adds a variable to the atlas from {overlay_file}, smoothing it
		{navgs} times. {subject}/labels/{hemi}.{overlay_file}

	-overlay-dir <overlay_dir>
		Changes overlay path: {subject}/{overlay_dir}/{hemi}.{overlay_
		file}

	-sreg <starting_reg_fname>
		Start registration with coordinates in file starting_reg_fname

	-jacobian <jacobian_fname>
		Write out jacobian of mapping to file jacobian_fname

	-A <n_averages (int)>

	-adaptive
		Use adaptive time step integration

	-area <l_area (float)>
		Sets l_area

	-corr <l_corr (float)>

	-curv
		Use smoothwm curvature for final alignment

	-dist <l_dist (float)>
		Specify distance term. Sets l_dist and also use_defaults = 0

	-dt <dt (float)>
		Sets momentum with dt

	-dt_dec <dt_decrease (float)>

	-dt_inc <dt_increase (float)>

	-E <l_external (float)>

	-error_ratio <error_ratio (float)>

	-init
		Use initial registration

	-lap <lap (float)>
		l_laplacian

	-lm
		Integrate using line minimization

	-M <momentum (float)>
		Chooses integration_type = INTEGRATE_MOMENTUM and sets 
		momentum value

	-max_degrees <max_degrees (float)>
		Set max angle for search to max_degrees

	-median
		Uses median normalization (instead of mean).

	-min_degrees <min_degrees (float)>
		Set min angle for search to min_degrees

	-multi_scale <multi_scale (int)>
		Use multi_scale scales for morphing

	-N <niterations (int)>

	-nangles <nangles (int)>
		Set # of angles/search per scale to nangles

	-nbrs <nbrs (int)>
		Use neighborhood size=nbrs

	-nlarea <l_nlarea (float)>
		Sets l_nlarea

	-nocurv
		Do not use smoothwm curvature for final alignment

	-nonorm
		Disables normalization

	-norot
		Disables initial rigid alignment

	-nosulc
		Disables initial sulc alignment

	-nsurfaces <nsurfaces>
		Use nsurfaces surfaces/curvatures for alignment

	-ocorr <l_ocorr (float)>
		Sets overlay correlation coefficient to l_ocorr

	-P <max_passes (int)>
		Limit unfolding to {max_passes} passes

	-parea <l_parea (float)>
		Sets l_parea

	-remove_negative <remove_negative (int)>
		Non-zero to remove negative triangles with iterative 
		smoothing, or 0 to skip that

	-reverse
		Mirror image reverse brain before morphing

	-rotate <dalpha, dbeta, dgamma (floats)>
		Rotates brain by dalpha, dbeta, dgamma

	-reg regfile.lta
		Extract rotational components from registration and rotates 
		brain

	-S <scale (float)>
		Scales distances by {scale}

	-search
		Integrating with binary search line minimization

	-spring <l_spring (float)>

	-tol <tol (float)>
		Tolerance?

	-topology
		Preserves the topology of positive area triangles

	-vnum, -distances <nbhd_size, max_nbrs (floats)>
		Sets neighborhood parameters

	-vsmooth
		Use space/time varying smoothness weighting

	-W <write_iterations (int)>
		Also triggers diagnostics

	-?, -H, -U, --help
		print help

	-V <Gdiag_no (int)>
		Supplies a vertex number for diagnostics

	-vector
		Prints some help for Multiframe mode including listing field 
		names/numbers

	-threads nthreads
		Set OMP threads

	--version
		print version

REPORTING
	Report bugs to <freesurfer@nmr.mgh.harvard.edu>



=== Output of 'mris_register -help' ===


cwd /root
cmdline /usr/local/freesurfer/bin/mris_register -help 

				Help

NAME
	mris_register

SYNOPSIS
	mris_register [options] <surf_fname> <target> <out_fname>

DESCRIPTION
	This program registers a surface to an average surface template.

POSITIONAL ARGUMENTS
	<surf_fname>
		Input: Surface to register, often {hemi}.sphere

	<target>
		Input: The data to register to. In normal recon-all usage, 
		this is a template file for average surface. Alternatively 
		could also be a single-subject's surface -- see argument '-1' 
		(one), which is useful during the template-development 
		process.

	<out_fname>
		Output surface file to capture registration. Example: 
		{hemi}.sphere.reg

REQUIRED FLAGGED ARGUMENTS
	*******************************************************************

OPTIONAL FLAGGED ARGUMENTS
	-1
		(One) Treats target argument as the name of as a single 
		subject's surface not a template file. (What pattern of 
		filename is required?)

	-addframe <which_field, where_in_atlas (ints)>
		Add field which_field with location where_in_atlas in the 
		atlas

	-annot <annot_name>
		Zeroes medial wall using annotation {annot_name}

	-C <curvature_fname>

	-canon <canon_name>
		Use surface {canon_name} for canonical properties

	-inflated
		Use inflated surface for initial alignment

	-infname <name>
		Uses {name} for inflated surface, for initial alignment. Sets 
		inflated_name, surface_name and curvature_names[0]

	-L <labelfile atlas_gcsa_file label_name>
		Specify a manual label to align with atlas label <label name>

	-O <orig_name>
		Use {orig_name} for original properties

	-overlay <overlay_file navgs(int)>
		Adds a variable to the atlas from {overlay_file}, smoothing it
		{navgs} times. {subject}/labels/{hemi}.{overlay_file}

	-overlay-dir <overlay_dir>
		Changes overlay path: {subject}/{overlay_dir}/{hemi}.{overlay_
		file}

	-sreg <starting_reg_fname>
		Start registration with coordinates in file starting_reg_fname

	-jacobian <jacobian_fname>
		Write out jacobian of mapping to file jacobian_fname

	-A <n_averages (int)>

	-adaptive
		Use adaptive time step integration

	-area <l_area (float)>
		Sets l_area

	-corr <l_corr (float)>

	-curv
		Use smoothwm curvature for final alignment

	-dist <l_dist (float)>
		Specify distance term. Sets l_dist and also use_defaults = 0

	-dt <dt (float)>
		Sets momentum with dt

	-dt_dec <dt_decrease (float)>

	-dt_inc <dt_increase (float)>

	-E <l_external (float)>

	-error_ratio <error_ratio (float)>

	-init
		Use initial registration

	-lap <lap (float)>
		l_laplacian

	-lm
		Integrate using line minimization

	-M <momentum (float)>
		Chooses integration_type = INTEGRATE_MOMENTUM and sets 
		momentum value

	-max_degrees <max_degrees (float)>
		Set max angle for search to max_degrees

	-median
		Uses median normalization (instead of mean).

	-min_degrees <min_degrees (float)>
		Set min angle for search to min_degrees

	-multi_scale <multi_scale (int)>
		Use multi_scale scales for morphing

	-N <niterations (int)>

	-nangles <nangles (int)>
		Set # of angles/search per scale to nangles

	-nbrs <nbrs (int)>
		Use neighborhood size=nbrs

	-nlarea <l_nlarea (float)>
		Sets l_nlarea

	-nocurv
		Do not use smoothwm curvature for final alignment

	-nonorm
		Disables normalization

	-norot
		Disables initial rigid alignment

	-nosulc
		Disables initial sulc alignment

	-nsurfaces <nsurfaces>
		Use nsurfaces surfaces/curvatures for alignment

	-ocorr <l_ocorr (float)>
		Sets overlay correlation coefficient to l_ocorr

	-P <max_passes (int)>
		Limit unfolding to {max_passes} passes

	-parea <l_parea (float)>
		Sets l_parea

	-remove_negative <remove_negative (int)>
		Non-zero to remove negative triangles with iterative 
		smoothing, or 0 to skip that

	-reverse
		Mirror image reverse brain before morphing

	-rotate <dalpha, dbeta, dgamma (floats)>
		Rotates brain by dalpha, dbeta, dgamma

	-reg regfile.lta
		Extract rotational components from registration and rotates 
		brain

	-S <scale (float)>
		Scales distances by {scale}

	-search
		Integrating with binary search line minimization

	-spring <l_spring (float)>

	-tol <tol (float)>
		Tolerance?

	-topology
		Preserves the topology of positive area triangles

	-vnum, -distances <nbhd_size, max_nbrs (floats)>
		Sets neighborhood parameters

	-vsmooth
		Use space/time varying smoothness weighting

	-W <write_iterations (int)>
		Also triggers diagnostics

	-?, -H, -U, --help
		print help

	-V <Gdiag_no (int)>
		Supplies a vertex number for diagnostics

	-vector
		Prints some help for Multiframe mode including listing field 
		names/numbers

	-threads nthreads
		Set OMP threads

	--version
		print version

REPORTING
	Report bugs to <freesurfer@nmr.mgh.harvard.edu>



=== Output of 'mris_register' (no arguments) ===


cwd /root
cmdline /usr/local/freesurfer/bin/mris_register 

0 inflated.H
1 sulc
2 smoothwm (computed)
				Help

NAME
	mris_register

SYNOPSIS
	mris_register [options] <surf_fname> <target> <out_fname>

DESCRIPTION
	This program registers a surface to an average surface template.

POSITIONAL ARGUMENTS
	<surf_fname>
		Input: Surface to register, often {hemi}.sphere

	<target>
		Input: The data to register to. In normal recon-all usage, 
		this is a template file for average surface. Alternatively 
		could also be a single-subject's surface -- see argument '-1' 
		(one), which is useful during the template-development 
		process.

	<out_fname>
		Output surface file to capture registration. Example: 
		{hemi}.sphere.reg

REQUIRED FLAGGED ARGUMENTS
	*******************************************************************

OPTIONAL FLAGGED ARGUMENTS
	-1
		(One) Treats target argument as the name of as a single 
		subject's surface not a template file. (What pattern of 
		filename is required?)

	-addframe <which_field, where_in_atlas (ints)>
		Add field which_field with location where_in_atlas in the 
		atlas

	-annot <annot_name>
		Zeroes medial wall using annotation {annot_name}

	-C <curvature_fname>

	-canon <canon_name>
		Use surface {canon_name} for canonical properties

	-inflated
		Use inflated surface for initial alignment

	-infname <name>
		Uses {name} for inflated surface, for initial alignment. Sets 
		inflated_name, surface_name and curvature_names[0]

	-L <labelfile atlas_gcsa_file label_name>
		Specify a manual label to align with atlas label <label name>

	-O <orig_name>
		Use {orig_name} for original properties

	-overlay <overlay_file navgs(int)>
		Adds a variable to the atlas from {overlay_file}, smoothing it
		{navgs} times. {subject}/labels/{hemi}.{overlay_file}

	-overlay-dir <overlay_dir>
		Changes overlay path: {subject}/{overlay_dir}/{hemi}.{overlay_
		file}

	-sreg <starting_reg_fname>
		Start registration with coordinates in file starting_reg_fname

	-jacobian <jacobian_fname>
		Write out jacobian of mapping to file jacobian_fname

	-A <n_averages (int)>

	-adaptive
		Use adaptive time step integration

	-area <l_area (float)>
		Sets l_area

	-corr <l_corr (float)>

	-curv
		Use smoothwm curvature for final alignment

	-dist <l_dist (float)>
		Specify distance term. Sets l_dist and also use_defaults = 0

	-dt <dt (float)>
		Sets momentum with dt

	-dt_dec <dt_decrease (float)>

	-dt_inc <dt_increase (float)>

	-E <l_external (float)>

	-error_ratio <error_ratio (float)>

	-init
		Use initial registration

	-lap <lap (float)>
		l_laplacian

	-lm
		Integrate using line minimization

	-M <momentum (float)>
		Chooses integration_type = INTEGRATE_MOMENTUM and sets 
		momentum value

	-max_degrees <max_degrees (float)>
		Set max angle for search to max_degrees

	-median
		Uses median normalization (instead of mean).

	-min_degrees <min_degrees (float)>
		Set min angle for search to min_degrees

	-multi_scale <multi_scale (int)>
		Use multi_scale scales for morphing

	-N <niterations (int)>

	-nangles <nangles (int)>
		Set # of angles/search per scale to nangles

	-nbrs <nbrs (int)>
		Use neighborhood size=nbrs

	-nlarea <l_nlarea (float)>
		Sets l_nlarea

	-nocurv
		Do not use smoothwm curvature for final alignment

	-nonorm
		Disables normalization

	-norot
		Disables initial rigid alignment

	-nosulc
		Disables initial sulc alignment

	-nsurfaces <nsurfaces>
		Use nsurfaces surfaces/curvatures for alignment

	-ocorr <l_ocorr (float)>
		Sets overlay correlation coefficient to l_ocorr

	-P <max_passes (int)>
		Limit unfolding to {max_passes} passes

	-parea <l_parea (float)>
		Sets l_parea

	-remove_negative <remove_negative (int)>
		Non-zero to remove negative triangles with iterative 
		smoothing, or 0 to skip that

	-reverse
		Mirror image reverse brain before morphing

	-rotate <dalpha, dbeta, dgamma (floats)>
		Rotates brain by dalpha, dbeta, dgamma

	-reg regfile.lta
		Extract rotational components from registration and rotates 
		brain

	-S <scale (float)>
		Scales distances by {scale}

	-search
		Integrating with binary search line minimization

	-spring <l_spring (float)>

	-tol <tol (float)>
		Tolerance?

	-topology
		Preserves the topology of positive area triangles

	-vnum, -distances <nbhd_size, max_nbrs (floats)>
		Sets neighborhood parameters

	-vsmooth
		Use space/time varying smoothness weighting

	-W <write_iterations (int)>
		Also triggers diagnostics

	-?, -H, -U, --help
		print help

	-V <Gdiag_no (int)>
		Supplies a vertex number for diagnostics

	-vector
		Prints some help for Multiframe mode including listing field 
		names/numbers

	-threads nthreads
		Set OMP threads

	--version
		print version

REPORTING
	Report bugs to <freesurfer@nmr.mgh.harvard.edu>


