
=== Output of 'mri_fwhm --help' ===

USAGE: /usr/local/freesurfer/bin/mri_fwhm

   --i inputvol  : input volume
   --o outputvol : save input after smoothing
   --save-detrended : detrend output when saving
   --save-unmasked  : do not mask outputvol
   --smooth-only    : smooth and save, do not compute fwhm (--so)

   --mask maskvol : binary mask
   --mask-thresh absthresh : threshold for mask (default is .5)
   --auto-mask rthresh : compute mask
   --nerode n : erode mask n times prior to computing fwhm
   --mask-inv : invert mask
   --out-mask outmask : save final mask

   --X x.mat : matlab4 detrending matrix
   --detrend order : polynomial detrending (default 0)
   --sqr : compute square of input before smoothing

   --fwhm fwhm : smooth BY fwhm before measuring
   --gstd gstd : same as --fwhm but specified as the stddev
   --median width : perform median filtering instead of gaussian

   --to-fwhm tofwhm : smooth TO fwhm
   --to-fwhm-tol tolerance : smooth to fwhm +/- tol (def .5mm)
   --to-fwhm-nmax nitersmax : maximum number of iterations (def 20)
   --to-fwhm-file file : save to-fwhm params in file

   --sum sumfile : summary/log
   --dat datfile : only the final fwhm estimate (base on mean ar1)
   --fwhmdat fwhmdatfile : compute and save the fwhm of each dim (based on mean ar1)
   --fwhmvolmn fwhmvolmnfile : compute and save the fwhm of each dim (based on fwhmvol)
   --fwhmvol fwhmvol : Save 3 frame map of the FWHM at each voxel.

   --synth 
   --synth-frames nframes : default is 10 

   --nframesmin n : require at least this many frames
   --ispm : input is spm-analyze. Set --i to stem.
   --in_nspmzeropad nz : zero-padding for spm-analyze
   --nthreads nthreads : Set OPEN MP threads
   --debug     turn on debugging
   --checkopts don't run anything, just check options and exit
   --help      print out information on how to use this program
   --version   print out version and exit

7.4.1


FreeSurfer program to estimate the global Gaussian smoothness of a
multi-frame, volume-based data set. The smoothness is measured as the
Full-Width-Half-Max (FWHM) in mm.  Gaussian stddev =
fwhm/sqrt(log(256.0)). The voxels used in the fwhm estimation can be
constrained to be inside of a mask. It is STRONGLY recommended that a
masked be used. The mask can be specified explictly or computed
automatically. By default, the time course will be detrended by
removing the mean. Higher order polynomial detrending is
possible. Alternatively, the user can specify a detrending matrix. The
data can be smoothed BY a given fwhm or TO a given fwhm prior to
estimating the fwhm.  The resulting data can then be saved (thus
turning this program into a smoother). If smoothing is to be done, it
will only be done inside the mask (except see --save-unmasked).

For more info, see surfer.nmr.mgh.harvard.edu. For help, send email
and summary file to  freesurfer@nmr.mgh.harvard.edu.

--i inputvol

Input data. Format must be something readable by mri_convert
(eg, mgh, mgz, img, nii, nii.gz). Alternately, one can synthesize
white gaussian noise with --synth and --synth-frames in which
case inputvol is used as a dimension template.

--o outputvol

Save input after smoothing. See also --save-detended and --save-unmasked.

--smooth-only

Does not attempt to compute FWHM. Smooths the input, saves to outputvol,
and exists. Respects --save-unmasked, but not --save-detended. This allows
for data sets with fewer than 10 frames to be smoothed.

--save-detended

Save input after smoothing, masking, and detrending.

--save-unmasked

Save input after smoothing and detrending, but do not mask while
smoothing. Note that the output will be different even inside
the mask because the smoother handles voxels on the boundary
of the mask differently than those at the center.

--mask maskvol

Compute FWHM only over voxels in the given mask. Format can be anything
accepted by mri_convert. If smoothing is to be done, it will only be
done inside the mask. It is strongly recommended that a masked be used
(see also --auto-mask and --save-unmasked).

--mask-thresh thresh

Threshold mask at thresh. Default is 0.5 (ie, it expects a binary mask).

--auto-mask rthresh

Compute a mask based on a fraction (rthresh) of the global mean. If
rthresh is 0.1, then all voxels in the mean image above 0.1*globalmean
are in the mask.

--mask-inv

Invert mask, ie, compute FWHM only over voxels outside the given mask.

--nerode n

Erode mask n times (ie, make it smaller). Occurs after any mask inversion.

--out-mask outmaskvol

Save final mask to outmaskvol.

--ar1 ar1path

Save spatial AR1 volume. (6 frames)

--ar1red ar1redpath

Save spatial AR1 volume, 3 frames, average of the 6 frame.

--fwhmvol fwhmvol

Save 3 frame map of the FWHM at each voxel.

--fwhmvolmn fwhmvolmn.dat

Compute mean fwhm from fwhmvol and write into dat file

--fwhmdat fwhm.dat

Compute mean fwhm from ar1mean and write into dat file

--X x.mat

Detrend/residualize data with the matrix in x.mat. Ie,
y = (I-inv(X'*X)*X')*y, where y is the input. x.mat must
be a matlab4 matrix. Not with --detrend.

--detrend order

Detrend data with polynomial of given order. Not with --X. Note:
if neither --X nor --detrend are specified, then detrending
order of 0 is used (ie, the mean is removed).

--fwhm fwhm

Smooth BY fwhm mm before estimating the fwhm. This is mainly good for
debuggging. But with --out can also be used to smooth data.

--to-fwhm tofwhm

Smooth TO tofwhm mm. This is idea proposed by Lee Friedman
(lfriedman10@comcast.net) and fBIRN (www.birn.net) as a way to
reduce variation across data sets, particularly when the data
may have come from different scanners. The method implemented
here uses an iterative approach in which the data are smoothed
BY varying amounmts until the resulting fwhm is within a certain
tolerance of tofwhm. By default, the tolerance is 0.5 mm, but
can be changed with --to-fwhm-tol. It will iterate at most 20
times (can be changed with --to-fwhm-nmax). An error will be
returned if the tofwhm is less than the inherent fwhm or the max
number of iterations is exceeded. The minimization is done with
a Golden Section Search (see Numerical Recipes in C).

--to-fwhm-tol tol

Keep iterating the tofwhm search until the result is within tol
of the desired fwhm (or until the maximum number of iterations
is reached).

--to-fwhm-nmax niterationsmax

Maximum number of iterations. Default is 20.

--to-fwhm-file file

Save some results of the tofwhm minimization to file. Good for
debugging. Results also saved in summary file.

--sum sumfile

Prints summary to ascii sumfile. Send this file when requesting
help or more information.

--dat datfile

Prints only the final fwhm estimate into this file.

--synth

Synthesize input with white gaussian noise. Ten frames are used by default,
but this can be changed with --synth-frames. Uses input volume as template.
This functionality is useful for degugging. Eg, when using --synth and --fwhm,
it should measure the resulting fwhm to be that passed by --fwhm. Can do
the same with --to-fwhm.

--synth-frames nframes

Synthesize input with white gaussian noise with the given number of frames.
Implies --synth.

--tr TRms

Set TR in msec (generally not too useful)

--nthreads nthreads

Set OPEN MP threads

--inorm

Spatial intensity normalization. Subtract the in-mask mean and divide by the in-mask 
stddev. 

EXAMPLES:

1. Measure the fwhm of an input data set, compute mask automatically by
   thresholding input at 20% of global mean. The time series will be
   have its mean removed prior to computing the fwhm. Save result in
   a summary file (one example uses mgh format, the other gzipped NIFTI):

      mri_fwhm --i f.mgh    --auto-mask .2 --sum f.fwhm.sum
      mri_fwhm --i f.nii.gz --auto-mask .2 --sum f.fwhm.sum

2. Same as above, but smooth input BY 5mm fwhm first. Save the
   smoothed output in fsm5.mgh. Save the mask to automask.nii.
   Note: mask is computed on unsmoothed data.

      mri_fwhm --i f.mgh --auto-mask .2 --sum f.fwhm5.sum
        --fwhm 5 --o fsm5.mgh --out-mask automask.nii

3. Same as above, but smooth input TO 5 +/- .1mm fwhm first.
   Save the smoothed output in fto5.mgh.

      mri_fwhm --i f.mgh --auto-mask .2 --sum f.fwhm5.sum
        --to-fwhm-tol .1 --to-fwhm 5 --o fto5.mgh


=== Output of 'mri_fwhm -help' ===

ERROR: Option -help unknown
       Did you really mean --help ?

=== Output of 'mri_fwhm' (no arguments) ===

USAGE: /usr/local/freesurfer/bin/mri_fwhm

   --i inputvol  : input volume
   --o outputvol : save input after smoothing
   --save-detrended : detrend output when saving
   --save-unmasked  : do not mask outputvol
   --smooth-only    : smooth and save, do not compute fwhm (--so)

   --mask maskvol : binary mask
   --mask-thresh absthresh : threshold for mask (default is .5)
   --auto-mask rthresh : compute mask
   --nerode n : erode mask n times prior to computing fwhm
   --mask-inv : invert mask
   --out-mask outmask : save final mask

   --X x.mat : matlab4 detrending matrix
   --detrend order : polynomial detrending (default 0)
   --sqr : compute square of input before smoothing

   --fwhm fwhm : smooth BY fwhm before measuring
   --gstd gstd : same as --fwhm but specified as the stddev
   --median width : perform median filtering instead of gaussian

   --to-fwhm tofwhm : smooth TO fwhm
   --to-fwhm-tol tolerance : smooth to fwhm +/- tol (def .5mm)
   --to-fwhm-nmax nitersmax : maximum number of iterations (def 20)
   --to-fwhm-file file : save to-fwhm params in file

   --sum sumfile : summary/log
   --dat datfile : only the final fwhm estimate (base on mean ar1)
   --fwhmdat fwhmdatfile : compute and save the fwhm of each dim (based on mean ar1)
   --fwhmvolmn fwhmvolmnfile : compute and save the fwhm of each dim (based on fwhmvol)
   --fwhmvol fwhmvol : Save 3 frame map of the FWHM at each voxel.

   --synth 
   --synth-frames nframes : default is 10 

   --nframesmin n : require at least this many frames
   --ispm : input is spm-analyze. Set --i to stem.
   --in_nspmzeropad nz : zero-padding for spm-analyze
   --nthreads nthreads : Set OPEN MP threads
   --debug     turn on debugging
   --checkopts don't run anything, just check options and exit
   --help      print out information on how to use this program
   --version   print out version and exit

7.4.1

